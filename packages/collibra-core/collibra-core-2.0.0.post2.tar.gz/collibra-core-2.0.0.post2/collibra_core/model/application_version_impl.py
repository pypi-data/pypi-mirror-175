# coding: utf-8

"""
    Collibra Data Governance Center Core API

    <p>The Core REST API allows you to create your own integrations with Collibra Data Governance Center.</p><p><i>Create custom applications to help users get access to the right data.</i></p>  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from collibra_core import schemas  # noqa: F401


class ApplicationVersionImpl(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            major = schemas.Int32Schema
            minor = schemas.Int32Schema
            fullVersion = schemas.StrSchema
            displayVersion = schemas.StrSchema
            __annotations__ = {
                "major": major,
                "minor": minor,
                "fullVersion": fullVersion,
                "displayVersion": displayVersion,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["major"]) -> MetaOapg.properties.major: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["minor"]) -> MetaOapg.properties.minor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fullVersion"]) -> MetaOapg.properties.fullVersion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayVersion"]) -> MetaOapg.properties.displayVersion: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["major", "minor", "fullVersion", "displayVersion", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["major"]) -> typing.Union[MetaOapg.properties.major, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["minor"]) -> typing.Union[MetaOapg.properties.minor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fullVersion"]) -> typing.Union[MetaOapg.properties.fullVersion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayVersion"]) -> typing.Union[MetaOapg.properties.displayVersion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["major", "minor", "fullVersion", "displayVersion", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        major: typing.Union[MetaOapg.properties.major, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        minor: typing.Union[MetaOapg.properties.minor, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        fullVersion: typing.Union[MetaOapg.properties.fullVersion, str, schemas.Unset] = schemas.unset,
        displayVersion: typing.Union[MetaOapg.properties.displayVersion, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ApplicationVersionImpl':
        return super().__new__(
            cls,
            *args,
            major=major,
            minor=minor,
            fullVersion=fullVersion,
            displayVersion=displayVersion,
            _configuration=_configuration,
            **kwargs,
        )
