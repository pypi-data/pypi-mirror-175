# coding: utf-8

"""
    Collibra Data Governance Center Core API

    <p>The Core REST API allows you to create your own integrations with Collibra Data Governance Center.</p><p><i>Create custom applications to help users get access to the right data.</i></p>  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from collibra_core import schemas  # noqa: F401


class ChangeDomainRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "id",
        }
        
        class properties:
            id = schemas.UUIDSchema
            
            
            class name(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 255
                    min_length = 1
            communityId = schemas.UUIDSchema
            typeId = schemas.UUIDSchema
            description = schemas.StrSchema
            excludedFromAutoHyperlinking = schemas.BoolSchema
            removeScopeOverlapOnMove = schemas.BoolSchema
            __annotations__ = {
                "id": id,
                "name": name,
                "communityId": communityId,
                "typeId": typeId,
                "description": description,
                "excludedFromAutoHyperlinking": excludedFromAutoHyperlinking,
                "removeScopeOverlapOnMove": removeScopeOverlapOnMove,
            }
    
    id: MetaOapg.properties.id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["communityId"]) -> MetaOapg.properties.communityId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typeId"]) -> MetaOapg.properties.typeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["excludedFromAutoHyperlinking"]) -> MetaOapg.properties.excludedFromAutoHyperlinking: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["removeScopeOverlapOnMove"]) -> MetaOapg.properties.removeScopeOverlapOnMove: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "name", "communityId", "typeId", "description", "excludedFromAutoHyperlinking", "removeScopeOverlapOnMove", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["communityId"]) -> typing.Union[MetaOapg.properties.communityId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typeId"]) -> typing.Union[MetaOapg.properties.typeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["excludedFromAutoHyperlinking"]) -> typing.Union[MetaOapg.properties.excludedFromAutoHyperlinking, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["removeScopeOverlapOnMove"]) -> typing.Union[MetaOapg.properties.removeScopeOverlapOnMove, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "name", "communityId", "typeId", "description", "excludedFromAutoHyperlinking", "removeScopeOverlapOnMove", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, uuid.UUID, ],
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        communityId: typing.Union[MetaOapg.properties.communityId, str, uuid.UUID, schemas.Unset] = schemas.unset,
        typeId: typing.Union[MetaOapg.properties.typeId, str, uuid.UUID, schemas.Unset] = schemas.unset,
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        excludedFromAutoHyperlinking: typing.Union[MetaOapg.properties.excludedFromAutoHyperlinking, bool, schemas.Unset] = schemas.unset,
        removeScopeOverlapOnMove: typing.Union[MetaOapg.properties.removeScopeOverlapOnMove, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ChangeDomainRequest':
        return super().__new__(
            cls,
            *args,
            id=id,
            name=name,
            communityId=communityId,
            typeId=typeId,
            description=description,
            excludedFromAutoHyperlinking=excludedFromAutoHyperlinking,
            removeScopeOverlapOnMove=removeScopeOverlapOnMove,
            _configuration=_configuration,
            **kwargs,
        )
