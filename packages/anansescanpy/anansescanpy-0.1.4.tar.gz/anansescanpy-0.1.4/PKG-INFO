Metadata-Version: 2.1
Name: anansescanpy
Version: 0.1.4
Summary: implementation of scANANSE for scanpy objects in Python
Home-page: https://github.com/Arts-of-coding/AnanseScanpy
License: apache 2.0
Keywords: GRN,single-cell,gene expression,open chromatin,arts-of-coding
Author: J Arts (Arts-of-coding)
Author-email: julian.armando.arts@gmail.com
Requires-Python: >=3.10,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: anndata (>=0.8.0,<0.9.0)
Requires-Dist: jupyterlab (>=3.3.4,<4.0.0)
Requires-Dist: numpy (>=1.23.3,<2.0.0)
Requires-Dist: pandas (>=1.4.4,<2.0.0)
Requires-Dist: scanpy (>=1.9.1,<2.0.0)
Requires-Dist: scipy (>=1.9.1,<2.0.0)
Project-URL: Repository, https://github.com/Arts-of-coding/AnanseScanpy
Description-Content-Type: text/markdown

# AnanseScanpy
Implementation of scANANSE for Scanpy objects in Python

# Getting started

## Installation

The most straightforward way to install AnanseScanpy is via conda using pypi.

### Install package through Conda
If you have not used Bioconda before, first set up the necessary channels (in this order!). 
You only have to do this once.
```
$ conda config --add channels defaults
$ conda config --add channels bioconda
$ conda config --add channels conda-forge
```

Then install AnanseScanpy with:
```
$ conda install anansescanpy
```

### Install package through PyPI
```
$ pip install anansescanpy
```

### Install package through GitHub
```
git clone https://github.com/Arts-of-coding/AnanseScanpy.git
cd AnanseScanpy
conda env create -f requirements.yaml
conda activate AnanseScanpy
pip install -e .
```

## Start using the package

### Run the package either in the console
```
$ python3
```

### Or run the package in jupyter notebook
```
$ jupyter notebook
```

For extended documentation see our ipynb vignette with PBMC sample data


