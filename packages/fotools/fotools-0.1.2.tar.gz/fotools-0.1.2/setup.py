# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['fotools', 'fotools.installed_extensions']

package_data = \
{'': ['*']}

install_requires = \
['bandit>=1.7.4,<2.0.0',
 'filetype>=1.0.13,<2.0.0',
 'python-Levenshtein>=0.20.8,<0.21.0',
 'rapidfuzz>=2.13.1,<3.0.0']

entry_points = \
{'console_scripts': ['fotools = fotools.main:main']}

setup_kwargs = {
    'name': 'fotools',
    'version': '0.1.2',
    'description': 'Tool for searching and organizing files',
    'long_description': '# fileorg_tool\n![test_status](https://github.com/matt-wisdom/file_organizer/actions/workflows/main.yml/badge.svg?event=push)\n[![codecov](https://codecov.io/gh/matt-wisdom/file_organizer/branch/main/graph/badge.svg)](https://codecov.io/gh/matt-wisdom/file_organizer)\n\n## Installation\n```bash\npip install fotools\n```\nTo run  \n```bash\nfotools -h\n```\n\n\n## Features\nfotools is an extensible file searching and organization tool.  \nIt can help you:\n 1. Organize your files into alphabetic groups e.g a-e, f-z\n 2. Organize your files by file type e.g pdf, html, mpeg files\n 3. Organize your files by type groups e.g Source codes, Audio, Videos, Documents\n 4. Search for files using fuzzy search with tunable ratio\n 5. Rename files using regex extracted part from their names\n 6. Reverse the above actions.\n\n## Examples\n\nLets examine some scenarios where thi program will be useful.  \nSay we have the following folder structure.\n```\nfiles\n├──bg2.jpg\n├──bg4.jpg\n├──bg5.jpg\n├──bg.jpg\n├──blog.js\n├──elf.png\n├──facebook.png\n├──favicon.ico\n├──fonts\n│\xa0\xa0 ├──1.jpg\n│\xa0\xa0 ├──2.jpg\n│\xa0\xa0 ├──adventpro.ttf\n│\xa0\xa0 ├──LICENSE.txt\n│\xa0\xa0 ├──logo.png\n│\xa0\xa0 ├──luckiest-guy.zip\n│\xa0\xa0 ├──Roboto-BlackItalic.ttf\n│\xa0\xa0 └──Roboto-Black.ttf\n├──jquery.js\n├──photo1.jpg\n├──Roboto.zip\n├──RSS.png\n├──sunset.png\n└──webdes.jpg\n\n```\nWe\'ll start simple.\n\n**To list all png/jpg files**\n<pre><b>wisdom@wisdom</b>:<b>~/yun/files</b>$ fotool.py -y png,jpg -r \n/home/wisdom/yun/files/RSS.png\n/home/wisdom/yun/files/bg.jpg\n/home/wisdom/yun/files/webdes.jpg\n/home/wisdom/yun/files/elf.png\n/home/wisdom/yun/files/bg4.jpg\n/home/wisdom/yun/files/bg5.jpg\n/home/wisdom/yun/files/bg2.jpg\n/home/wisdom/yun/files/sunset.png\n/home/wisdom/yun/files/photo1.jpg\n/home/wisdom/yun/files/favicon.ico\n/home/wisdom/yun/files/facebook.png\n/home/wisdom/yun/files/fonts/1.jpg\n/home/wisdom/yun/files/fonts/2.jpg\n/home/wisdom/yun/files/fonts/logo.png</pre>\n\n**To use fuzzy search to find "LCENSE"**\n<pre><b>wisdom@wisdom</b>:<b>~/yun/files</b>$ fotool.py -s LCENSE -r\n/home/wisdom/yun/files/fonts/LICENSE.txt\n</pre>\n\n**To organize the files into groups**\n<pre><b>wisdom@wisdom</b>:<b>~/yun/files</b>$ fotool -a move -r -g\n<b>wisdom@wisdom</b>:<b>~/yun/files</b>$ tree\n<b>.</b>\n├──action_log\n├──<b>Archives</b>\n│\xa0\xa0├──<b>luckiest-guy.zip</b>\n│\xa0\xa0└──<b>Roboto.zip</b>\n├──<b>Documents</b>\n│\xa0\xa0└──<b>LICENSE.txt</b>\n├──<b>fonts</b>\n├──<b>Fonts</b>\n│\xa0\xa0├──<b>adventpro.ttf</b>\n│\xa0\xa0├──<b>Roboto-BlackItalic.ttf</b>\n│\xa0\xa0└──<b>Roboto-Black.ttf</b>\n├──<b>Images</b>\n│\xa0\xa0├──<b>1.jpg</b>\n│\xa0\xa0├──<b>2.jpg</b>\n│\xa0\xa0├──<b>bg2.jpg</b>\n│\xa0\xa0├──<b>bg4.jpg</b>\n│\xa0\xa0├──<b>bg5.jpg</b>\n│\xa0\xa0├──<b>bg.jpg</b>\n│\xa0\xa0├──<b>elf.png</b>\n│\xa0\xa0├──<b>facebook.png</b>\n│\xa0\xa0├──<b>favicon.ico</b>\n│\xa0\xa0├──<b>logo.png</b>\n│\xa0 ├──<b>photo1.jpg</b>\n│\xa0\xa0├──<b>RSS.png</b>\n│\xa0\xa0├──<b>sunset.png</b>\n│\xa0\xa0└──<b>webdes.jpg</b>\n└──<b>Source_Codes</b>\n   ├──<b>blog.js</b>\n   └──<b>jquery.js</b>\n</pre>\n\n<b>To reverse the above action or any action that\'s happened in this folder</b>\n<pre>\nwisdom@wisdom:~/yun/files$ fotool -j \n/home/wisdom/yun/files/RSS.png\n/home/wisdom/yun/files/bg.jpg\n/home/wisdom/yun/files/webdes.jpg\n/home/wisdom/yun/files/elf.png\n/home/wisdom/yun/files/bg4.jpg\n/home/wisdom/yun/files/bg5.jpg\n/home/wisdom/yun/files/bg2.jpg\n/home/wisdom/yun/files/sunset.png\n/home/wisdom/yun/files/blog.js\n/home/wisdom/yun/files/action_log\n/home/wisdom/yun/files/jquery.js\n/home/wisdom/yun/files/photo1.jpg\n/home/wisdom/yun/files/Roboto.zip\n/home/wisdom/yun/files/favicon.ico\n/home/wisdom/yun/files/facebook.png\nwisdom@wisdom:~/yun/files$ tree\n.\n├──action_log\n├──bg2.jpg\n├──bg4.jpg\n├──bg5.jpg\n├──bg.jpg\n├──blog.js\n├──elf.png\n├──facebook.png\n├──favicon.ico\n├──fonts\n│\xa0\xa0 ├──1.jpg\n│\xa0\xa0 ├──2.jpg\n│\xa0\xa0 ├──adventpro.ttf\n│\xa0\xa0 ├──LICENSE.txt\n│\xa0\xa0 ├──logo.png\n│\xa0\xa0 ├──luckiest-guy.zip\n│\xa0\xa0 ├──Roboto-BlackItalic.ttf\n│\xa0\xa0 └──Roboto-Black.ttf\n├──jquery.js\n├──photo1.jpg\n├──Roboto.zip\n├──RSS.png\n├──sunset.png\n└──webdes.jpg\n</pre>\n\n<b>To organize by file types</b>\n<pre><b>wisdom@wisdom</b>:<b>~/yun/files</b>$ fotool -a move -r -t\n<b>wisdom@wisdom</b>:<b>~/yun/files</b>$ tree\n<b>.</b>\n├──action_log\n├──<b>fonts</b>\n├──<b>FONT-SFNT Files</b>\n│\xa0\xa0 ├──<b>adventpro.ttf</b>\n│\xa0\xa0 ├──<b>Roboto-BlackItalic.ttf</b>\n│\xa0\xa0 └──<b>Roboto-Black.ttf</b>\n├──<b>Javascript Source Files</b>\n│\xa0\xa0 ├──<b>blog.js</b>\n│\xa0\xa0 └──<b>jquery.js</b>\n├──<b>JPEG Files</b>\n│\xa0\xa0 ├──<b>1.jpg</b>\n│\xa0\xa0 ├──<b>2.jpg</b>\n│\xa0\xa0 ├──<b>bg2.jpg</b>\n│\xa0\xa0 ├──<b>bg4.jpg</b>\n│\xa0\xa0 ├──<b>bg5.jpg</b>\n│\xa0\xa0 ├──<b>bg.jpg</b>\n│\xa0\xa0 ├──<b>photo1.jpg</b>\n│\xa0\xa0 └──<b>webdes.jpg</b>\n├──<b>PNG Files</b>\n│\xa0\xa0 ├──<b>elf.png</b>\n│\xa0\xa0 ├──<b>facebook.png</b>\n│\xa0\xa0 ├──<b>favicon.ico</b>\n│\xa0\xa0 ├──<b>logo.png</b>\n│\xa0\xa0 ├──<b>RSS.png</b>\n│\xa0\xa0 └──<b>sunset.png</b>\n├──<b>Text File</b>\n│\xa0\xa0 └──<b>LICENSE.txt</b>\n└──<b>ZIP Files</b>\n    ├──<b>luckiest-guy.zip</b>\n    └──<b>Roboto.zip</b>\n</pre>\n\n<b>To remove roboto from the font names</b>\n<pre><b>wisdom@wisdom</b>:<b>~/yun/files</b>$ fotool -a move -r -x &quot;(?&lt;=Roboto)(.*)&quot; -s &quot;roboto&quot; -z fonts/\n<b>wisdom@wisdom</b>:<b>~/yun/files</b>$ tree\n<b>.</b>\n├──action_log\n├──<b>bg2.jpg</b>\n├──<b>bg4.jpg</b>\n├──<b>bg5.jpg</b>\n├──<b>bg.jpg</b>\n├──<b>blog.js</b>\n├──<b>elf.png</b>\n├──<b>facebook.png</b>\n├──<b>favicon.ico</b>\n├──<b>fonts</b>\n│\xa0\xa0 ├──<b>1.jpg</b>\n│\xa0\xa0 ├──<b>2.jpg</b>\n│\xa0\xa0 ├──<b>adventpro.ttf</b>\n│\xa0\xa0 ├──<b>-BlackItalic.ttf</b>\n│\xa0\xa0 ├──<b>-Black.ttf</b>\n│\xa0\xa0 ├──<b>LICENSE.txt</b>\n│\xa0\xa0 ├──<b>logo.png</b>\n│\xa0\xa0 └──<b>luckiest-guy.zip</b>\n├──<b>jquery.js</b>\n├──<b>photo1.jpg</b>\n├──<b>RSS.png</b>\n├──<b>sunset.png</b>\n└──<b>webdes.jpg</b>\n\n1 directory, 22 files\n</pre>\n\n## Extending fotools  \nTo extend fotools, all you need do is create a python file   and define an extension \nclass with its name ending with Extension. eg `class DeleteExtension:`.  \nThen run   \n```bash\nfotool.py --install-extension /path/to/extension.py\n```\nTo extend a function simply create a similar method with name similar to that  of the\nmethod name without the \'default_\' prepended to it e.g `default_fuzzy_search` becomes `fuzzy_search`.  \nTo use the extension simply supply the `-e` or `--extension argument` with the value set to the \nfilename without .py.  \nYou can list installed extensions with the  `--list-extensions` flag\n\nThis program comes with some extensions (in the extensions folder") \nwhich you use as reference.\nThey are:         \n 1. **delete** - Adds delete command to the `-a` flag.   \n    Example usage:  \n        ```\n        fotool.py -e delete -a delete -s "__pycache__" -l\n        ```  \n        \n 2. **search_contents** - Search the content of allowed types.  \n    See search_contents.py for the list of allowed types  \n        Example usage:  \n        ```\n        fotool.py -e search_contents -s "william shakespeare" -r\n        ```  \n        \n 3. **pcloud_upload** - Uploads matching files to pcloud.  \n    Requires PCLOUD_USER and PCLOUD_PASS environment variables  \n    to be set.  \n\n## USAGE\n\n<pre>\nusage: fotools.py [-h] [-s SEARCH_STRING] [-e EXTENSION] [-d DIRECTORY] [-z DESTINATION] [-m MIN_RATIO] [-b GROUPS] [-n NOMATCHDIR] [-a ACTION]\n                 [-r] [-q] [-k] [-j [REVERSE]] [-p ACTION_LOG] [-u OPCOUNT] [--reverse-timestamp-start RTSTART]\n                 [--reverse-timestamp-stop RTSTOP] [-l | -f] [-i | -g | -t] [-w] [-c | -x GEN_REGEX] [-y FILEEXTENSIONS]\n                 [--install-extension EXTENSION_NAME] [--list-extensions] [--extension-help EXTENSION_NAME]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SEARCH_STRING, --search_string SEARCH_STRING\n                        The string to search for.\n  -e EXTENSION, --extension EXTENSION\n                        Use extension specified where extension is of the form \'parent_dir.child_dir.extension_module:class\' or\n                        \'extension_module:class\' or \'extension_module\' where extension_module is a valid extension python file\n  -d DIRECTORY, --directory DIRECTORY\n                        The directory to work on.\n  -z DESTINATION, --destination-directory DESTINATION\n                        Target directory for file operations.\n  -m MIN_RATIO, --min-levenshtein-ratio MIN_RATIO\n                        This Program uses Levenshtein Distance Algorithm to search for match by default unless the -s or --simple-match\n                        options are specified. This option specified the minimun ratio that will be considered a match using\n                        partial_set_ratio. Defaults to 75\n  -b GROUPS, --groups GROUPS\n                        Number of groups to divide each class (alphas and nums) will be divided into for generating destination directory\n                        based on initials of filenames (used with the -i or --initials arguments) .\n  -n NOMATCHDIR, --nomatchdir NOMATCHDIR\n                        Directory to copy or move files to if no match is found. Defaults to ignore. This program allows you to use [:dd:] to\n                        reference the directory matched files are moved to (specified with -d or --destination-directory argument). So the\n                        move all unmatched files to a folder named \'unknown\' in the target directory pass \'[:dd:]/unknown\' as the value to\n                        this argument.\n  -a ACTION, --action ACTION\n                        The action to carry out on matched files, valid options are: print, move, copy_rename, rename, copy. Defaults to\n                        print. You can also add custom actions in extensions\n  -r, --recursive       Recursively find files.\n  -q, --newline         print a newline after each output\n  -k, --irreversible    Disable reversibility i.e action are not written to actionlog to provide the ability to reverse action.\n  -j [REVERSE], --reverse [REVERSE]\n                        Reverse last actions from actions log.\n  -p ACTION_LOG, --action-log-file ACTION_LOG\n                        File to log actions for reversibility of operations.\n  -u OPCOUNT, --count OPCOUNT\n                        Specifies the maximum number of operations to carry out.\n  --reverse-timestamp-start RTSTART\n                        Reverse operations that where carried out on or after this timestamp. If reverse-timestamp-stop is specified, then\n                        operations carried out between reverse-timestamp-start and reverse-timestamp-stop are reversed\n  --reverse-timestamp-stop RTSTOP\n                        Reverse operations that where carried out on or before this timestamp. If reverse-timestamp-start is specified, then\n                        operations carried out between reverse-timestamp-start and reverse-timestamp-stop are reversed\n  -l, --simple-match    Simple string match.\n  -f, --fuzz-match      Fuzzy string match.\n  -i, --initials        Use initials of filenames to generate groups. Directories are created with the group name as destination for file\n                        operations.\n  -g, --group\n  -t, --type            Generate location for matched files by using their filetype.\n  -w, --case-sensitive  Makes regex filename generation case-sensitive\n  -c, --generate-combinations\n                        Used to generate new names for matched files based on various combinations of characters.\n  -x GEN_REGEX, --generate-regex GEN_REGEX\n                        Used to generate new names for matched files based of strings extracted from filenames using regular expressions.\n  -y FILEEXTENSIONS, --file-types FILEEXTENSIONS\n                        Only match files of the path type(s)/extension(s) given. Value can be a single file type like \'pdf\' or a comma\n                        seperated list of file types like \'pdf,txt,html,exe,zip\'. There are currently 72 recognized file types and they are:\n                        py, html, htm, css, js, cpp, c, rb, pl, php, r, go,java, svg, png, jpg, jpx, gif, webp, cr2, tif, bmp, jxr,psd, ico,\n                        heic, mp4, m4v, mkv, webm, mov, avi, wmv, mpg,flv, swf, mid, mp3, m4a, ogg, flac, wav, amr, zip, tar,rar, gz, bz2, 7z,\n                        xz, ar, deb, z, lz, exe, cab, pyc, jar,pdf, docx, doc, ppt, pptx, epub, rtf, txt, ps, woff,woff2, ttf, otf, md files.\n  --install-extension EXTENSION_NAME\n                        Install a file as an extension\n  --list-extensions     List installed extensions\n  --extension-help EXTENSION_NAME\n                        View an extension module docstring\n</pre>\n',
    'author': 'Matthew Wisdom',
    'author_email': 'matthewwisdom11@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/matt-wisdom/file_organizer',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)
