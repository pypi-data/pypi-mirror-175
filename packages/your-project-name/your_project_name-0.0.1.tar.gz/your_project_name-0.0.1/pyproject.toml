[tool.poetry]
name = "your_project_name"
version = "0.0.1"
authors = ["James Veitch <1722315+darth-veitcher@users.noreply.github.com>"]
description = "Short description of your project"
homepage = "https://darth-veitcher.github.io/your-project-name/latest"
repository = "https://github.com/darth-veitcher/your-project-name"
documentation = "https://darth-veitcher.github.io/your-project-name/latest"
readme = "README.md"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/legacy/"

[tool.poetry.dependencies]
python = "^3.7"
importlib-metadata = {version = "^4", python = "<3.8"}  # leave floating at ^4 to allow co-habitation with flake8

[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]
pre-commit = "^2.19.0"

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
pytest = ">=5.2"
pytest-asyncio = "^0.18.3"
pytest-cov = "^3.0.0"
coverage = {extras = ["toml"], version = "^6.3.3"}
nox = "^2022.1.7"
pytest-mock = "^3.7.0"
mock = "^4.0.3"

[tool.poetry.group.lint]
optional = true
[tool.poetry.group.lint.dependencies]
pylama = {extras = ["lint"], version = "*"}
black = "^22.3.0"
pyproject-flake8 = "^0.0.1-alpha.4"
jupyter = "^1.0.0"
notebook = "^6.4.11"
pycodestyle = "*"
flake8 = "^3.9.2"  # need to pin this version for now
flake8-black = "*"
isort = "^5.10.1"
flake8-isort = "*"
flake8-bandit = "*"
flake8-docstrings = "*"
flake8-annotations = "*"
darglint = "^1.8.1"

[tool.poetry.group.typing]
optional = true
[tool.poetry.group.typing.dependencies]
mypy = "^0.950"
typed-ast = "^1.5.3"
pytype = {version = "^2022.5.10", python = "3.7"}

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^8.5.8"
pymdown-extensions = "^9.7"
mkdocs-minify-plugin = "^0.6.1"
mike = "^1.1.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["your_project_name"]
omit = ["*tests*", "*migrations*"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.pytest.ini_options]
asyncio_mode = "auto"
mock_use_standalone_module = "true"

[tool.isort]
profile = "black"
src_paths = ["your_project_name", "tests"]
skip = ["build",".nox",".venv",".git","__pycache__"]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
    "mypy-nox.*",
    "pytest",
    "click",
    "click.*",
    "httpx",
    "httpx.*",
    "mock",
    "pytest_mock",
    "nox",
    "importlib.metadata",
    "importlib_metadata"
]
ignore_missing_imports = true
