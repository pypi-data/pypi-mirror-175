[metadata]
name = pygeohydro
description = Access geospatial web services that offer hydrological data
long_description = file: README.rst
long_description_content_type = text/x-rst
url = https://github.com/hyriver/pygeohydro
author = Taher Chegini
author_email = cheginit@gmail.com
license = MIT
license_file = LICENSE
license_files = LICENSE
platforms = any
classifiers = 
	Development Status :: 4 - Beta
	Intended Audience :: Science/Research
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Topic :: Scientific/Engineering
	Topic :: Scientific/Engineering :: GIS
	Topic :: Scientific/Engineering :: Hydrology
	Typing :: Typed
project_urls = 
	Homepage = https://docs.hyriver.io/readme/pygeohydro.html
	Issues = https://github.com/hyriver/pygeohydro/issues
	CI = https://github.com/hyriver/pygeohydro/actions
	Changelog = https://docs.hyriver.io/changelogs/pygeohydro.html

[options]
packages = find:
install_requires = 
	async-retriever>=0.3.6
	cytoolz
	defusedxml
	folium
	geopandas>=0.7
	h5netcdf
	hydrosignatures
	loguru
	lxml
	matplotlib>=3.3
	numpy>=1.17
	pandas>=1.0
	pygeoogc>=0.13.7
	pygeoutils>=0.13.7
	pynhd>=0.13.7
	rasterio>=1.2
	rioxarray>=0.11.0
	scipy
	shapely>=1.8
	xarray>=2022.03.0
python_requires = >=3.8
include_package_data = True
zip_safe = False

[options.extras_require]
stac = 
	planetary-computer
	pystac-client
test = 
	coverage[toml]
	pytest-cov
	pytest-xdist[psutil]
typeguard = 
	coverage[toml]
	pygments
	pytest-cov
	pytest-xdist[psutil]
	typeguard

[options.package_data]
pygeohydro = 
	py.typed

[flake8]
ignore = 
	E203 # whitespace before ':' - doesn't work well with black
	E402 # module level import not at top of file
	E501 # line too long - let black worry about that
	E731 # do not assign a lambda expression, use a def
	W503 # line break before binary operator
	D107 # no need to add docstring for __init__
	D105 # no need to add docstring to magic methods
exclude = 
	.eggs
	__init__.py
	.ipynb_checkpoints
	.nox
	tests/*.py
	noxfile.py

[darglint]
strictness = short
docstring_style = numpy
ignore = DAR401,DAR103
ignore_regex = ^_(.*)

[codespell]
skip = __pycache__,_build,.mypy_cache,.git,./htmlcov,.nox,**/us_abbrs.py

[egg_info]
tag_build = 
tag_date = 0

