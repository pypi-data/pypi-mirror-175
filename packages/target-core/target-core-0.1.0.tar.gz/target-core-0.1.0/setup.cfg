[metadata]
name = target-core
version = attr: target.__version__
description = Singer.io Target Core features
long_description = file: README.md
long_description_content_type = text/markdown
author = Eddy âˆ†
author_email = edrdelta@gmail.com
url = https://gitlab.com/singer-core/target-core
keywords = etl, singer, singer-core, tap, tap-core, target, target-core, target-s3-jsonl, target-s3-json
license = Apache License 2.0
classifiers = 
	Development Status :: 2 - Pre-Alpha
	Operating System :: OS Independent
	License :: OSI Approved :: Apache Software License
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
project_urls = 
	Documentation = https://singer-core.gitlab.io/target-core
	Releases = https://gitlab.com/singer-core/target-core/-/releases
	Changelog = https://gitlab.com/singer-core/target-core/blob/main/CHANGELOG.md
	Issue Tracker = https://gitlab.com/singer-core/target-core/issues
	Bug Tracker = https://gitlab.com/singer-core/target-core/issues/service_desk

[options]
packages = find:
package_dir = 
	= src
python_requires = >=3.9
include_package_data = True
platforms = any

[options.entry_points]
console_scripts = 
	target-core = target:main

[options.package_data]
target = logging.conf

[options.packages.find]
where = src
exclude = 
	tests
	docs

[options.extras_require]
test = 
	pytest-asyncio
	pytest-cov
lint = flake8
static = mypy
dist = build
deploy = twine
docs = 
	sphinx
	sphinx-rtd-theme
	sphinx-automodapi
	numpydoc

[sdist]
formats = zip, gztar

[tool:pytest]
addopts = -v --cov=target --cov-fail-under 95 --cov-report xml --cov-report term --cov-report html:htmlcov --doctest-modules --junitxml=report.xml
testpaths = tests
asyncio_mode = auto

[coverage:run]
branch = True
omit = 
	./setup.py
	tests/.*
	docs/conf.py
	venv/*

[coverage:report]
show_missing = True
skip_covered = False
exclude_lines = 
	if __name__ == .__main__.:

[flake8]
count = True
show-source = True
statistics = True
extend-exclude = venv
	build
ignore = C901
max-line-length = 160
max-complexity = 10

[build_sphinx]
builder = html
warning-is-error = true
project = 'Target Core'
version = attr: target.__version__
release = attr: target.__version__
source-dir = 'docs'

[tox:tox]
passenv = TOXENV TOX_* CI_* GITLAB_*
envlist = py{39,310}
isolated_build = True

[testenv]
usedevelop = True
extras = test
commands = pytest {posargs}

[testenv:lint]
usedevelop = True
skip_install = true
deps = flake8
commands = flake8 {posargs}

[testenv:static]
usedevelop = True
skip_install = true
deps = mypy
commands = mypy {posargs}

[testenv:coverage]
usedevelop = True
passenv = CODECOV_TOKEN CI_*
skip_install = true
deps = codecov
commands = 
	codecov \
	--file "{toxinidir}/coverage.xml" \
	--name "codecov-$CI_PROJECT_NAME" \
	--branch "$CI_COMMIT_BRANCH" \
	--commit "$CI_COMMIT_SHA" \
	--tag "$CI_COMMIT_TAG" \
	--flags "unittests" {posargs} || echo 'Codecov upload failed'

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
usedevelop = True
extras = docs
commands = sphinx-build docs/source "{toxworkdir}/docs_out" -d "{toxworkdir}/docs_doctree" -W -j auto --color -b html {posargs}
commands_post = python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:dist]
deps = build
commands = python -m build

[testenv:deploy]
usedevelop = True
skip_install = true
passenv = TWINE_*
deps = 
	build
	twine
commands_pre = 
	python -m build
	twine check dist/*
commands = twine upload --skip-existing {posargs} dist/*

[egg_info]
tag_build = 
tag_date = 0

