Metadata-Version: 2.1
Name: meow-sim
Version: 0.0.0
Summary: Modeling of Eigenmodes and Overlaps in Waveguide Structures
Author-email: Rockley Photonics <da-team@rockleyphotonics.com>, Floris Laporte <floris.laporte@rockleyphotonics.com>
License: Apache Software License
Keywords: modeling,eigenmodes,overlaps,waveguides,eme,fde,photonics
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Physics
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: flatten-dict
Requires-Dist: gdspy
Requires-Dist: loguru
Requires-Dist: matplotlib
Requires-Dist: numexpr
Requires-Dist: numpy
Requires-Dist: orjson
Requires-Dist: pydantic
Requires-Dist: rich
Requires-Dist: sax (<0.8.0)
Requires-Dist: scipy
Requires-Dist: shapely
Requires-Dist: tidy3d-beta (==1.4.1)
Requires-Dist: tqdm
Requires-Dist: triangle
Requires-Dist: trimesh
Requires-Dist: fastprogress

# meow

> **M**odeling of **E**igenmodes and **O**verlaps in **W**aveguides

![meow](docs/source/_static/img/meow.png)

A simple electromagnetic [EigenMode Expansion (EME)](https://en.wikipedia.org/wiki/Eigenmode_expansion) tool for Python.

## Documentation

Currently, the best way to learn how to use the library is by checking the examples.

## Credits

- [DALL-E](https://labs.openai.com): _“a drawing of a kitten with laser eyes walking towards me”_ (logo)
- [Tidy3D](https://github.com/flexcompute/tidy3d): meow uses the free FDE mode solver from Tidy3D.
- [SAX](https://github.com/flaport/sax): meow uses SAX as its circuit simulator when cascading the overlap S-matrices.
- [klujax](https://github.com/flaport/sax): Although technically an optional backend for SAX, klujax will significantly speed up the final S-matrix calculation of your structures.
- [EMEPy](https://github.com/emepy): an excellent alternative python-based EME solver with optional neural network mode solver.
- [Rigorous and efficient modeling of wavelength scale photonic components](http://photonics.intec.ugent.be/download/phd_104.pdf): PhD thesis of Peter Bienstman.
