{"version":3,"file":"vendors-node_modules_jupyterlab-topbar_lib_index_js.e4a75d5d605b8000123e.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAC4G;AAC7B;AAC/E,8BAA8B,sEAA2B,CAAC,2FAAqC;AAC/F;AACA,sDAAsD,kBAAkB,4BAA4B,iCAAiC,6CAA6C,wEAAwE,GAAG,kCAAkC,kBAAkB,2BAA2B,4BAA4B,gFAAgF,iCAAiC,kCAAkC,GAAG,2BAA2B,sBAAsB,GAAG,yBAAyB,eAAe,2EAA2E,yCAAyC,wCAAwC,GAAG,2BAA2B,yCAAyC,yCAAyC,iBAAiB,iBAAiB,GAAG,iCAAiC,oDAAoD,4BAA4B,GAAG,SAAS,iHAAiH,UAAU,YAAY,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,WAAW,UAAU,MAAM,KAAK,YAAY,aAAa,sCAAsC,kBAAkB,4BAA4B,iCAAiC,6CAA6C,wEAAwE,GAAG,kCAAkC,kBAAkB,2BAA2B,4BAA4B,gFAAgF,iCAAiC,kCAAkC,GAAG,2BAA2B,sBAAsB,GAAG,yBAAyB,eAAe,2EAA2E,yCAAyC,wCAAwC,GAAG,2BAA2B,yCAAyC,yCAAyC,iBAAiB,iBAAiB,GAAG,iCAAiC,oDAAoD,4BAA4B,GAAG,qBAAqB;AACl8E;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPQ;AACyB;AACpB;AACN;AACN;AACG;AACf;AAC5B;AACA;AACA;AACA;AACA;AACA;AACO,oBAAoB,oDAAK;AACzB,qBAAqB,yDAAO;AACnC;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAI,8BAA8B,oCAAojC;AACA;AACA;AACA;AACA,yBAAyB,0DAAO;AAChC,sBAAsB,wDAAK,CAAC,sDAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAI;AAC7B;AACA,0BAA0B,uDAAQ;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,0EAAwB;AACvC;AACA;AACA,CAAC,wBAAwB;AACzB;AACA;AACA;AACA,eAAe,sEAAuB,gBAAgB,gEAAkB;AACxE;AACA;AACA;AACA,eAAe,sEAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA,CAAC,0BAA0B;;;;;;;;;;;;;;;;;;AChQoD;AAC/E,YAA6E;;AAE7E;;AAEA;AACA;;AAEA,aAAa,6FAAG,CAAC,yEAAO;;;;AAIxB,iEAAe,gFAAc,MAAM","sources":["webpack://opensarlab-controlbtn/./node_modules/jupyterlab-topbar/style/index.css","webpack://opensarlab-controlbtn/./node_modules/jupyterlab-topbar/lib/index.js","webpack://opensarlab-controlbtn/./node_modules/jupyterlab-topbar/style/index.css?903f"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".jp-TopBar {\\n  display: flex;\\n  flex-grow: 1 !important;\\n  min-height: unset !important;\\n  height: var(--jp-private-menubar-height);\\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color0);\\n}\\n\\n.jp-TopBar > .jp-TopBar-item {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  border-left: calc(var(--jp-border-width) * 2) solid var(--jp-border-color0);\\n  padding-left: 5px !important;\\n  padding-right: 5px !important;\\n}\\n\\n.jp-Toolbar.jp-TopBar {\\n  box-shadow: unset;\\n}\\n\\n.jp-TopBar-DragItem {\\n  z-index: 2;\\n  border: calc(var(--jp-border-width) * 2) solid var(--jp-layout-color1);\\n  color: var(--jp-content-font-color1);\\n  background: var(--jp-layout-color1);\\n}\\n\\n.jp-TopBar-DropTarget {\\n  background-color: var(--md-blue-400);\\n  color: var(--jp-content-font-color1);\\n  opacity: 0.5;\\n  cursor: move;\\n}\\n\\n.jp-TopBar-DropTarget:hover {\\n  background-color: var(--md-blue-400) !important;\\n  cursor: move !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/jupyterlab-topbar/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,4BAA4B;EAC5B,wCAAwC;EACxC,mEAAmE;AACrE;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,2EAA2E;EAC3E,4BAA4B;EAC5B,6BAA6B;AAC/B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,UAAU;EACV,sEAAsE;EACtE,oCAAoC;EACpC,mCAAmC;AACrC;;AAEA;EACE,oCAAoC;EACpC,oCAAoC;EACpC,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,+CAA+C;EAC/C,uBAAuB;AACzB\",\"sourcesContent\":[\".jp-TopBar {\\n  display: flex;\\n  flex-grow: 1 !important;\\n  min-height: unset !important;\\n  height: var(--jp-private-menubar-height);\\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color0);\\n}\\n\\n.jp-TopBar > .jp-TopBar-item {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  border-left: calc(var(--jp-border-width) * 2) solid var(--jp-border-color0);\\n  padding-left: 5px !important;\\n  padding-right: 5px !important;\\n}\\n\\n.jp-Toolbar.jp-TopBar {\\n  box-shadow: unset;\\n}\\n\\n.jp-TopBar-DragItem {\\n  z-index: 2;\\n  border: calc(var(--jp-border-width) * 2) solid var(--jp-layout-color1);\\n  color: var(--jp-content-font-color1);\\n  background: var(--jp-layout-color1);\\n}\\n\\n.jp-TopBar-DropTarget {\\n  background-color: var(--md-blue-400);\\n  color: var(--jp-content-font-color1);\\n  opacity: 0.5;\\n  cursor: move;\\n}\\n\\n.jp-TopBar-DropTarget:hover {\\n  background-color: var(--md-blue-400) !important;\\n  cursor: move !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { Toolbar } from '@jupyterlab/apputils';\nimport { ArrayExt, every, map, toArray, each } from '@lumino/algorithm';\nimport { Token, MimeData } from '@lumino/coreutils';\nimport { ElementExt } from '@lumino/domutils';\nimport { Drag } from '@lumino/dragdrop';\nimport { Signal } from '@lumino/signaling';\nimport '../style/index.css';\nconst CONTENTS_MIME = 'application/x-jupyterlab-topbar';\nconst TOPBAR_CLASS = 'jp-TopBar';\nconst CONTENT_CLASS = 'jp-TopBar-item';\nconst DRAG_CONTENT_CLASS = 'jp-TopBar-DragItem';\nconst DROP_TARGET_CLASS = 'jp-TopBar-DropTarget';\nconst DRAG_THRESHOLD = 5;\nexport const ITopBar = new Token('jupyterlab-topbar:ITopBar');\nexport class TopBar extends Toolbar {\n    constructor() {\n        super();\n        this._drag = null;\n        this._dragData = null;\n        this.addClass(TOPBAR_CLASS);\n        this._changed = new Signal(this);\n    }\n    get changed() {\n        return this._changed;\n    }\n    addItem(name, item) {\n        item.addClass(CONTENT_CLASS);\n        return super.addItem(name, item);\n    }\n    setOrder(order) {\n        let layout = this.layout;\n        let mapping = {};\n        each(this.names(), (name, i) => { mapping[name] = layout.widgets[i]; });\n        // re-add items in order\n        order.forEach((name, pos) => {\n            if (!mapping.hasOwnProperty(name))\n                return;\n            layout.insertWidget(pos, mapping[name]);\n        });\n    }\n    onAfterAttach(msg) {\n        super.onAfterAttach(msg);\n        let node = this.node;\n        node.addEventListener('mousedown', this, true);\n        node.addEventListener('mousedown', this);\n        node.addEventListener('p-dragenter', this);\n        node.addEventListener('p-dragleave', this);\n        node.addEventListener('p-dragover', this);\n        node.addEventListener('p-drop', this);\n    }\n    onBeforeDetach(msg) {\n        let node = this.node;\n        node.removeEventListener('mousedown', this, true);\n        node.removeEventListener('mousedown', this);\n        node.removeEventListener('p-dragenter', this);\n        node.removeEventListener('p-dragleave', this);\n        node.removeEventListener('p-dragover', this);\n        node.removeEventListener('p-drop', this);\n        document.removeEventListener('mousemove', this, true);\n        document.removeEventListener('mouseup', this, true);\n    }\n    handleEvent(event) {\n        switch (event.type) {\n            case 'mousedown':\n                this._evtMousedown(event);\n                break;\n            case 'mouseup':\n                this._evtMouseup(event);\n                break;\n            case 'mousemove':\n                this._evtMousemove(event);\n                break;\n            case 'p-dragenter':\n                this._evtDragEnter(event);\n                break;\n            case 'p-dragleave':\n                this._evtDragLeave(event);\n                break;\n            case 'p-dragover':\n                this._evtDragOver(event);\n                break;\n            case 'p-drop':\n                this._evtDrop(event);\n                break;\n            default:\n                break;\n        }\n    }\n    _evtMousedown(event) {\n        let index = Private.hitTestNodes(this.node.children, event.clientX, event.clientY);\n        if (index === -1) {\n            return;\n        }\n        if (event.button !== 0) {\n            return;\n        }\n        event.preventDefault();\n        this._dragData = {\n            pressX: event.clientX,\n            pressY: event.clientY,\n            index: index\n        };\n        document.addEventListener('mouseup', this, true);\n        document.addEventListener('mousemove', this, true);\n    }\n    _evtMouseup(event) {\n        if (event.button !== 0 || !this._drag) {\n            document.removeEventListener('mousemove', this, true);\n            document.removeEventListener('mouseup', this, true);\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    _evtMousemove(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this._drag || !this._dragData) {\n            return;\n        }\n        let data = this._dragData;\n        let dx = Math.abs(event.clientX - data.pressX);\n        let dy = Math.abs(event.clientY - data.pressY);\n        if (dx < DRAG_THRESHOLD && dy < DRAG_THRESHOLD) {\n            return;\n        }\n        this._startDrag(data.index, event.clientX, event.clientY);\n    }\n    _evtDragEnter(event) {\n        if (!event.mimeData.hasData(CONTENTS_MIME)) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        let target = event.target;\n        let index = Private.findWidget(this.node.children, target);\n        if (index === -1) {\n            return;\n        }\n        let widget = this.layout.widgets[index];\n        widget.node.classList.add(DROP_TARGET_CLASS);\n    }\n    _evtDragLeave(event) {\n        if (!event.mimeData.hasData(CONTENTS_MIME)) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        let elements = this.node.getElementsByClassName(DROP_TARGET_CLASS);\n        if (elements.length) {\n            elements[0].classList.remove(DROP_TARGET_CLASS);\n        }\n    }\n    _evtDragOver(event) {\n        if (!event.mimeData.hasData(CONTENTS_MIME)) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        event.dropAction = event.proposedAction;\n        let elements = this.node.getElementsByClassName(DROP_TARGET_CLASS);\n        if (elements.length) {\n            elements[0].classList.remove(DROP_TARGET_CLASS);\n        }\n        let target = this._findRootItem(event.target);\n        let index = Private.findWidget(this.node.children, target);\n        if (index === -1) {\n            return;\n        }\n        let widget = this.layout.widgets[index];\n        widget.node.classList.add(DROP_TARGET_CLASS);\n    }\n    _findRootItem(node) {\n        while (node && this.node !== node.parentElement) {\n            if (node.classList.contains(CONTENT_CLASS)) {\n            }\n            node = node.parentElement;\n        }\n        return node;\n    }\n    _evtDrop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (event.proposedAction === 'none') {\n            event.dropAction = 'none';\n            return;\n        }\n        if (!event.mimeData.hasData(CONTENTS_MIME)) {\n            return;\n        }\n        let target = event.target;\n        while (target && target.parentElement) {\n            if (target.classList.contains(DROP_TARGET_CLASS)) {\n                target.classList.remove(DROP_TARGET_CLASS);\n                break;\n            }\n            target = target.parentElement;\n        }\n        let index = Private.findWidget(this.node.children, target);\n        if (index === -1) {\n            return;\n        }\n        const prevNames = toArray(this.names());\n        const layout = this.layout;\n        const startIndex = this._dragData.index;\n        const widget = layout.widgets[startIndex];\n        layout.insertWidget(index, widget);\n        const newNames = toArray(this.names());\n        const equal = every(map(newNames, (value, i) => value === prevNames[i]), v => v);\n        if (!equal) {\n            this._changed.emit(newNames);\n        }\n    }\n    _startDrag(index, clientX, clientY) {\n        const item = this.node.children[index];\n        let dragImage = Private.createDragImage(item);\n        this._drag = new Drag({\n            dragImage,\n            mimeData: new MimeData(),\n            supportedActions: 'move',\n            proposedAction: 'move'\n        });\n        this._drag.mimeData.setData(CONTENTS_MIME, index);\n        document.removeEventListener('mousemove', this, true);\n        document.removeEventListener('mouseup', this, true);\n        void this._drag.start(clientX, clientY).then(action => {\n            this._drag = null;\n        });\n    }\n}\n(function (TopBar) {\n    function createSpacerItem() {\n        return Toolbar.createSpacerItem();\n    }\n    TopBar.createSpacerItem = createSpacerItem;\n})(TopBar || (TopBar = {}));\nvar Private;\n(function (Private) {\n    function hitTestNodes(nodes, x, y) {\n        return ArrayExt.findFirstIndex(nodes, node => ElementExt.hitTest(node, x, y));\n    }\n    Private.hitTestNodes = hitTestNodes;\n    function findWidget(nodes, target) {\n        return ArrayExt.findFirstIndex(nodes, node => node === target);\n    }\n    Private.findWidget = findWidget;\n    function createDragImage(node) {\n        let dragImage = node.cloneNode(true);\n        dragImage.className = DRAG_CONTENT_CLASS;\n        if (!node.innerHTML) {\n            dragImage.style.width = `${node.clientWidth}px`;\n            dragImage.style.height = `${node.clientHeight}px`;\n        }\n        return dragImage;\n    }\n    Private.createDragImage = createDragImage;\n})(Private || (Private = {}));\n","import api from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}