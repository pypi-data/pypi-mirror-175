# https://taskfile.dev

version: '3'

env:
  PYTEST_FLAGS: "-x -n 1 -v --pyargs ."
  COVERAGE_FLAGS: "--junitxml=pytest-report.xml"
  PYTEST_INSTALLS: "pytest==7.1.3 pytest-cov==3.0.0 pytest-forked==1.4.0 pytest-xdist==2.5.0 tox==3.26.0"
  BUILD_INSTALLS: "tox"
  ARTIFACT_DIR: "./dist"

tasks:
  default:
    cmds:
      - task -l
    silent: true

  reqs:
    desc: "check requirements"
    preconditions:
      - sh: "which flake8"
        msg: "go not found"

  dev:lint:
    desc: "run lint"
    deps:
      - reqs
    cmds:
      - flake8 --config .flake8 milbi.py
      - flake8 --config .flake8 src/*/*.py

  tests:
    desc: "run all tests"
    preconditions:
      - task "test:prepare"
    deps:
      - "test:prepare"
      - "test:unittests"
      - "test:clitests"

  test:prepare:
    desc: "prepare for tests"
    cmds:
      - python3 -m pip install ${PYTEST_INSTALLS}

  test:unittests:
    desc: "run unittests"
    cmds:
      - echo "running test limited to: ${PYTEST_FILTER}"
      - coverage run --source=src -m pytest ${PYTEST_FLAGS} -k test_unit ${COVERAGE_FLAGS}
      - coverage report -m

  test:clitests:
    desc: "run clitests"
    cmds:
      - echo "running test limited to: ${PYTEST_FILTER}"
      - coverage run --source=src -m pytest ${PYTEST_FLAGS} -k test_cli ${COVERAGE_FLAGS}
      - coverage report -m

  build:
    desc: "build package"
    preconditions:
      - task "build:prepare"
    cmds:
      - tox -e build

  build:prepare:
    desc: "prepare for tests"
    cmds:
      - python3 -m pip install ${BUILD_INSTALLS}
      - echo top

  release:
    desc: "release workflow"
    cmds:
      - task "release:clean"
      - task "build"
      #- task "release:testpypi"
      - task "release:pypi"

  release:clean:
    desc: "clean old artifacts"
    cmds:
      - bash -c 'rm -rf "${ARTIFACT_DIR}/*"'

  release:testpypi:
    desc: "test release to testpypi"
    cmds:
      - tox -e publish

  release:pypi:
    desc: "test release to pypi"
    cmds:
      - tox -e publish -- --repository pypi
