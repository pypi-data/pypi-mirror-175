Metadata-Version: 2.1
Name: AutoClassifierRegressor
Version: 0.0.6
Summary: Tools for getting analysis of all classifiers and regressors
Home-page: https://github.com/anagha-bhople/auto_classifier_regressor
Author: Anagha Bhople
Author-email: Anagha Bhople <bhoplea34@gmail.com>, Swapnil Dewalkar <swapnildewalkar1995@gmail.com>
License: MIT License        
        Copyright (c) [2022] [Anagha Bhople]        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/anagha-bhople/auto_classifier_regressor
Project-URL: Bug Tracker, https://github.com/anagha-bhople/auto_classifier_regressor/issues
Keywords: ML classifier regressor neural network sklearn analysis
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: pandas
Requires-Dist: numpy
Requires-Dist: sklearn
Requires-Dist: xgboost
Requires-Dist: lightgbm
Requires-Dist: tensorflow
Requires-Dist: keras
Requires-Dist: catboost
Requires-Dist: plotly
Requires-Dist: joblib

## Package Installation

        pip install AutoClassifierRegressor

## Package Import

        from AutoClassifierRegressor import regression_report_generation

        from AutoClassifierRegressor import classification_report_generation

## For Regression call this function with following parameters

    regression_report_generation(dataframe, "target name", path="desired folder name", saveModel=True, normalisation=True, preprocessing=True)

#### Arguments

        1. Dataframe name (required)
        2. Target variable for regression (required)
        3. path = name of folder (optional)
        4. saveModel = if set as True then all ML models will be saved in "Models" folder (optional)
        5. normalisation = if set as True data will be normalised (optional)
        6. preprocessing = if set as True then data will be preprocessed, which includes fillna and label encoding for categorical variables

#### Example:

        df=pd.read_csv("/content/sample_data/california_housing_train.csv")
        regression_report_generation(df, "median_house_value", path="Housing_data", saveModel=True, normalisation=True)

## For Classification call this function with following parameters

    classification_report_generation(dataframe, "target label", n= no classes, path="desired folder name", saveModel=True, preprocessing=True)

#### Arguments

        1. Dataframe name (required)
        2. Target variable for classification (required)
        3. n=2 for binary classification (required) and n=no of classes for multiclass classification (required)
        4. path = name of folder (optional)
        5. saveModel = if set as True then all ML models will be saved in "Models" folder (optional)
        6. preprocessing = if set as True then data will be preprocessed, which includes fillna and label encoding for categorical variables

#### Example:

        df=pd.read_csv("data.csv")
        classification_report_generation(df, "diagnosis", n=2, path="binary_classification_reports", saveModel=True)

        df = pd.read_csv('Iris.csv')
        classification_report_generation(df, "Species", n=3, path="classification_model_Multiclass", saveModel=True)

## Output:

        1. Output will be in the form of html file with tabular analyis of all important classifiers or regressors along with poular evaluation metrics.
        2. Html file will be saved in current or in given path.
        3. All ML models will be saved in /Models folder in current or in given path.

### Prerequisites:

    1. Do necessary data processing for better results
    2. Install all dependancies
