// ©2021, ANSYS Inc. Unauthorized use, distribution or duplication is prohibited.
syntax = "proto3";
package ansys.api.geometry.v0;
option csharp_namespace = "Ansys.Api.Geometry.V0";

import "ansys/api/geometry/v0/models.proto";

service Commands{
  rpc ProjectCurves(ProjectCurvesRequest) returns (ProjectCurvesResponse);

  rpc ImprintCurves(ImprintCurvesRequest) returns (ImprintCurvesResponse);

  rpc PowerSelectFacesByAreaRange(PowerSelectFacesByAreaRangeRequest) returns (PowerSelectFacesByAreaRangeResponse);

  rpc CreateBeamCircularProfile(CreateBeamCircularProfileRequest) returns(CreateBeamCircularProfileResponse);

  rpc CreateBeamBodyLine(CreateBeamBodyLineRequest) returns (CreateBeamBodyLineResponse);
  
  rpc CreateBeamBodyLines(CreateBeamBodyLinesRequest) returns (CreateBeamBodyLinesResponse);

  rpc GetRootComponent(Empty) returns (GetRootComponentResponse);

  rpc FillFaces(FillFacesRequest) returns (Empty);

  rpc CreateDesignPoint(CreateDesignPointRequest) returns (CreateDesignPointResponse);

  rpc CreateDesignPoints(CreateDesignPointsRequest) returns (CreateDesignPointsResponse);

  rpc CreateDesignCurvesFromProfile(CreateDesignCurvesFromProfileRequest) returns (CreateDesignCurvesFromProfileResponse);

  rpc AssignMidSurfaceThickness(AssignMidSurfaceThicknessRequest) returns (Empty);

  rpc AssignMidSurfaceOffsetType(AssignMidSurfaceOffsetTypeRequest) returns (Empty);

  rpc DownloadFile(Empty) returns (DownloadFileResponse);

  rpc DownloadFileStream(Empty) returns (stream DownloadFileStreamResponse);

  rpc CreateSphere(CreateSphereRequest) returns (CreateSphereResponse);

  rpc CreateTorus(CreateTorusRequest) returns (CreateTorusResponse);

  rpc DeleteBeam(EntityIdentifier) returns (Empty);

  rpc DeleteBeamProfile(EntityIdentifier) returns (Empty);
}

message EntityIdentifier {
	string id = 1;
}

message ProjectCurvesRequest {
	string body=1;
	Geometries curves=2;
	Direction direction=3;
	bool closestFace=4;
}

message ProjectCurvesResponse {
	repeated Face faces=1;
}

message ImprintCurvesRequest {
	string body=1;
	Geometries curves=2;
	repeated string faces=3;
}

message ImprintCurvesResponse {
	repeated Edge edges=1;
	repeated Face faces=2;
}

message PowerSelectFacesByAreaRangeRequest {
	string body=1;
	double area1=2;
	double area2=3;
}

message PowerSelectFacesByAreaRangeResponse {
	repeated Face faces=1;
}

message CreateBeamCircularProfileRequest {
	Plane plane=1;
	double radius=2;
	Point origin=3;
	string name=4;
}

message CreateBeamCircularProfileResponse {
	string id=1;
}

message CreateBeamBodyLineRequest {
	string profile=1;
	Line line=2;
	string parent=3;
}

message CreateBeamBodyLineResponse {
	string id=1;
}

message CreateBeamBodyLinesRequest {
	string profile=1;
	repeated Line lines=2;
	string parent=3;
}

message CreateBeamBodyLinesResponse {
	repeated string ids=1;
}

message GetRootComponentResponse{
    string id=1;
}

message FillFacesRequest {
	repeated Face faces=1;
}

message CreateDesignPointRequest {
	Point point=1;
	string parent=2;
}

message CreateDesignPointResponse {
	string id=1;
}

message CreateDesignPointsRequest {
	repeated Point points = 1;
	string parent=2;
}

message CreateDesignPointsResponse {
	repeated string ids =1;
}

message CreateDesignCurvesFromProfileRequest {
	Geometries geometries=1;
	string parent=2;
	Plane plane=3;
}

message CreateDesignCurvesFromProfileResponse {
	repeated string designCurves=1;
}

message AssignMidSurfaceThicknessRequest {
	repeated string bodiesOrFaces=1;
	double thickness=2;
}

message AssignMidSurfaceOffsetTypeRequest {
	repeated string bodiesOrFaces=1;
	MidSurfaceOffsetType offsetType=2;
}

message DownloadFileResponse {
	bytes data=1;
}

message DownloadFileStreamResponse {
	bytes chunk=1;
}

message CreateSphereRequest {
	string name=1;
	string parent=2;
	Point point=3;
	double radius=4;
}

message CreateSphereResponse {
	string id=1;
}

message CreateTorusRequest {
	string name=1;
	string parent=2;
	double major_radius=3;
	double minor_radius=4;
	Frame frame=5;
}

message CreateTorusResponse {
	string id=1;
}