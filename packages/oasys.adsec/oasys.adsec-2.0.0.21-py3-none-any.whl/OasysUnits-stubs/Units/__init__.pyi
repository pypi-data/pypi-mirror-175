#------------------------------------------------------------------------------
# <auto-generated>
#     This file was auto generated.
#
#     Changes to this file may cause incorrect behavior and will be lost if
#     the code is regenerated.
# </auto-generated>
#------------------------------------------------------------------------------
import typing
from abc import abstractmethod, ABCMeta
from System import Enum, IComparable, IConvertible, IFormattable


# noinspection PyPep8Naming
class AccelerationUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: AccelerationUnit = ...

    CentimeterPerSecondSquared: AccelerationUnit = ...

    DecimeterPerSecondSquared: AccelerationUnit = ...

    FootPerSecondSquared: AccelerationUnit = ...

    InchPerSecondSquared: AccelerationUnit = ...

    KilometerPerSecondSquared: AccelerationUnit = ...

    KnotPerHour: AccelerationUnit = ...

    KnotPerMinute: AccelerationUnit = ...

    KnotPerSecond: AccelerationUnit = ...

    MeterPerSecondSquared: AccelerationUnit = ...

    MicrometerPerSecondSquared: AccelerationUnit = ...

    MillimeterPerSecondSquared: AccelerationUnit = ...

    MillistandardGravity: AccelerationUnit = ...

    NanometerPerSecondSquared: AccelerationUnit = ...

    StandardGravity: AccelerationUnit = ...


# noinspection PyPep8Naming
class AmountOfSubstanceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: AmountOfSubstanceUnit = ...

    Centimole: AmountOfSubstanceUnit = ...

    CentipoundMole: AmountOfSubstanceUnit = ...

    Decimole: AmountOfSubstanceUnit = ...

    DecipoundMole: AmountOfSubstanceUnit = ...

    Kilomole: AmountOfSubstanceUnit = ...

    KilopoundMole: AmountOfSubstanceUnit = ...

    Megamole: AmountOfSubstanceUnit = ...

    Micromole: AmountOfSubstanceUnit = ...

    MicropoundMole: AmountOfSubstanceUnit = ...

    Millimole: AmountOfSubstanceUnit = ...

    MillipoundMole: AmountOfSubstanceUnit = ...

    Mole: AmountOfSubstanceUnit = ...

    Nanomole: AmountOfSubstanceUnit = ...

    NanopoundMole: AmountOfSubstanceUnit = ...

    PoundMole: AmountOfSubstanceUnit = ...


# noinspection PyPep8Naming
class AmplitudeRatioUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: AmplitudeRatioUnit = ...

    DecibelMicrovolt: AmplitudeRatioUnit = ...

    DecibelMillivolt: AmplitudeRatioUnit = ...

    DecibelUnloaded: AmplitudeRatioUnit = ...

    DecibelVolt: AmplitudeRatioUnit = ...


# noinspection PyPep8Naming
class AngleUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: AngleUnit = ...

    Arcminute: AngleUnit = ...

    Arcsecond: AngleUnit = ...

    Centiradian: AngleUnit = ...

    Deciradian: AngleUnit = ...

    Degree: AngleUnit = ...

    Gradian: AngleUnit = ...

    Microdegree: AngleUnit = ...

    Microradian: AngleUnit = ...

    Millidegree: AngleUnit = ...

    Milliradian: AngleUnit = ...

    Nanodegree: AngleUnit = ...

    Nanoradian: AngleUnit = ...

    NatoMil: AngleUnit = ...

    Radian: AngleUnit = ...

    Revolution: AngleUnit = ...

    Tilt: AngleUnit = ...


# noinspection PyPep8Naming
class ApparentEnergyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ApparentEnergyUnit = ...

    KilovoltampereHour: ApparentEnergyUnit = ...

    MegavoltampereHour: ApparentEnergyUnit = ...

    VoltampereHour: ApparentEnergyUnit = ...


# noinspection PyPep8Naming
class ApparentPowerUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ApparentPowerUnit = ...

    Gigavoltampere: ApparentPowerUnit = ...

    Kilovoltampere: ApparentPowerUnit = ...

    Megavoltampere: ApparentPowerUnit = ...

    Voltampere: ApparentPowerUnit = ...


# noinspection PyPep8Naming
class AreaDensityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: AreaDensityUnit = ...

    KilogramPerSquareMeter: AreaDensityUnit = ...


# noinspection PyPep8Naming
class AreaMomentOfInertiaUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: AreaMomentOfInertiaUnit = ...

    CentimeterToTheFourth: AreaMomentOfInertiaUnit = ...

    DecimeterToTheFourth: AreaMomentOfInertiaUnit = ...

    FootToTheFourth: AreaMomentOfInertiaUnit = ...

    InchToTheFourth: AreaMomentOfInertiaUnit = ...

    MeterToTheFourth: AreaMomentOfInertiaUnit = ...

    MillimeterToTheFourth: AreaMomentOfInertiaUnit = ...


# noinspection PyPep8Naming
class AreaUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: AreaUnit = ...

    Acre: AreaUnit = ...

    Hectare: AreaUnit = ...

    SquareCentimeter: AreaUnit = ...

    SquareDecimeter: AreaUnit = ...

    SquareFoot: AreaUnit = ...

    SquareInch: AreaUnit = ...

    SquareKilometer: AreaUnit = ...

    SquareMeter: AreaUnit = ...

    SquareMicrometer: AreaUnit = ...

    SquareMile: AreaUnit = ...

    SquareMillimeter: AreaUnit = ...

    SquareNauticalMile: AreaUnit = ...

    SquareYard: AreaUnit = ...

    UsSurveySquareFoot: AreaUnit = ...


# noinspection PyPep8Naming
class AxialStiffnessUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: AxialStiffnessUnit = ...

    Decanewton: AxialStiffnessUnit = ...

    Dyn: AxialStiffnessUnit = ...

    KilogramForce: AxialStiffnessUnit = ...

    Kilonewton: AxialStiffnessUnit = ...

    KiloPond: AxialStiffnessUnit = ...

    KilopoundForce: AxialStiffnessUnit = ...

    Meganewton: AxialStiffnessUnit = ...

    Micronewton: AxialStiffnessUnit = ...

    Millinewton: AxialStiffnessUnit = ...

    Newton: AxialStiffnessUnit = ...

    OunceForce: AxialStiffnessUnit = ...

    Poundal: AxialStiffnessUnit = ...

    PoundForce: AxialStiffnessUnit = ...

    ShortTonForce: AxialStiffnessUnit = ...
    """ The short ton-force is a unit of force equal to 2,000 pounds-force (907.18474 kgf), that is most commonly used in the United States â€“ known there simply as the ton or US ton.
    https://en.wikipedia.org/wiki/Ton-force#Short_ton-force
    """

    TonneForce: AxialStiffnessUnit = ...


# noinspection PyPep8Naming
class BendingStiffnessUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: BendingStiffnessUnit = ...

    KilonewtonSquareMeter: BendingStiffnessUnit = ...

    KilonewtonSquareMillimeter: BendingStiffnessUnit = ...

    NewtonSquareMeter: BendingStiffnessUnit = ...

    NewtonSquareMillimeter: BendingStiffnessUnit = ...

    PoundForceSquareFoot: BendingStiffnessUnit = ...

    PoundForceSquareInch: BendingStiffnessUnit = ...


# noinspection PyPep8Naming
class BitRateUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: BitRateUnit = ...

    BitPerSecond: BitRateUnit = ...

    BytePerSecond: BitRateUnit = ...

    ExabitPerSecond: BitRateUnit = ...

    ExabytePerSecond: BitRateUnit = ...

    ExbibitPerSecond: BitRateUnit = ...

    ExbibytePerSecond: BitRateUnit = ...

    GibibitPerSecond: BitRateUnit = ...

    GibibytePerSecond: BitRateUnit = ...

    GigabitPerSecond: BitRateUnit = ...

    GigabytePerSecond: BitRateUnit = ...

    KibibitPerSecond: BitRateUnit = ...

    KibibytePerSecond: BitRateUnit = ...

    KilobitPerSecond: BitRateUnit = ...

    KilobytePerSecond: BitRateUnit = ...

    MebibitPerSecond: BitRateUnit = ...

    MebibytePerSecond: BitRateUnit = ...

    MegabitPerSecond: BitRateUnit = ...

    MegabytePerSecond: BitRateUnit = ...

    PebibitPerSecond: BitRateUnit = ...

    PebibytePerSecond: BitRateUnit = ...

    PetabitPerSecond: BitRateUnit = ...

    PetabytePerSecond: BitRateUnit = ...

    TebibitPerSecond: BitRateUnit = ...

    TebibytePerSecond: BitRateUnit = ...

    TerabitPerSecond: BitRateUnit = ...

    TerabytePerSecond: BitRateUnit = ...


# noinspection PyPep8Naming
class BrakeSpecificFuelConsumptionUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: BrakeSpecificFuelConsumptionUnit = ...

    GramPerKiloWattHour: BrakeSpecificFuelConsumptionUnit = ...

    KilogramPerJoule: BrakeSpecificFuelConsumptionUnit = ...

    PoundPerMechanicalHorsepowerHour: BrakeSpecificFuelConsumptionUnit = ...
    """ The pound per horse power hour uses mechanical horse power and the imperial pound
    """


# noinspection PyPep8Naming
class CapacitanceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: CapacitanceUnit = ...

    Farad: CapacitanceUnit = ...

    Kilofarad: CapacitanceUnit = ...

    Megafarad: CapacitanceUnit = ...

    Microfarad: CapacitanceUnit = ...

    Millifarad: CapacitanceUnit = ...

    Nanofarad: CapacitanceUnit = ...

    Picofarad: CapacitanceUnit = ...


# noinspection PyPep8Naming
class CoefficientOfThermalExpansionUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: CoefficientOfThermalExpansionUnit = ...

    InverseDegreeCelsius: CoefficientOfThermalExpansionUnit = ...

    InverseDegreeFahrenheit: CoefficientOfThermalExpansionUnit = ...

    InverseKelvin: CoefficientOfThermalExpansionUnit = ...


# noinspection PyPep8Naming
class CompressibilityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: CompressibilityUnit = ...

    InverseAtmosphere: CompressibilityUnit = ...

    InverseBar: CompressibilityUnit = ...

    InverseKilopascal: CompressibilityUnit = ...

    InverseMegapascal: CompressibilityUnit = ...

    InverseMillibar: CompressibilityUnit = ...

    InversePascal: CompressibilityUnit = ...

    InversePoundForcePerSquareInch: CompressibilityUnit = ...


# noinspection PyPep8Naming
class CurvatureUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: CurvatureUnit = ...

    PerCentimeter: CurvatureUnit = ...

    PerFoot: CurvatureUnit = ...

    PerInch: CurvatureUnit = ...

    PerMeter: CurvatureUnit = ...

    PerMillimeter: CurvatureUnit = ...


# noinspection PyPep8Naming
class DensityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: DensityUnit = ...

    CentigramPerDeciliter: DensityUnit = ...

    CentigramPerLiter: DensityUnit = ...

    CentigramPerMilliliter: DensityUnit = ...

    DecigramPerDeciliter: DensityUnit = ...

    DecigramPerLiter: DensityUnit = ...

    DecigramPerMilliliter: DensityUnit = ...

    GramPerCubicCentimeter: DensityUnit = ...

    GramPerCubicFoot: DensityUnit = ...

    GramPerCubicInch: DensityUnit = ...

    GramPerCubicMeter: DensityUnit = ...

    GramPerCubicMillimeter: DensityUnit = ...

    GramPerDeciliter: DensityUnit = ...

    GramPerLiter: DensityUnit = ...

    GramPerMilliliter: DensityUnit = ...

    KilogramPerCubicCentimeter: DensityUnit = ...

    KilogramPerCubicMeter: DensityUnit = ...

    KilogramPerCubicMillimeter: DensityUnit = ...

    KilogramPerLiter: DensityUnit = ...

    KilopoundPerCubicFoot: DensityUnit = ...

    KilopoundPerCubicInch: DensityUnit = ...

    MicrogramPerCubicMeter: DensityUnit = ...

    MicrogramPerDeciliter: DensityUnit = ...

    MicrogramPerLiter: DensityUnit = ...

    MicrogramPerMilliliter: DensityUnit = ...

    MilligramPerCubicMeter: DensityUnit = ...

    MilligramPerDeciliter: DensityUnit = ...

    MilligramPerLiter: DensityUnit = ...

    MilligramPerMilliliter: DensityUnit = ...

    NanogramPerDeciliter: DensityUnit = ...

    NanogramPerLiter: DensityUnit = ...

    NanogramPerMilliliter: DensityUnit = ...

    PicogramPerDeciliter: DensityUnit = ...

    PicogramPerLiter: DensityUnit = ...

    PicogramPerMilliliter: DensityUnit = ...

    PoundPerCubicCentimeter: DensityUnit = ...

    PoundPerCubicFoot: DensityUnit = ...

    PoundPerCubicInch: DensityUnit = ...

    PoundPerCubicMeter: DensityUnit = ...

    PoundPerCubicMillimeter: DensityUnit = ...

    PoundPerImperialGallon: DensityUnit = ...

    PoundPerUSGallon: DensityUnit = ...

    SlugPerCubicCentimeter: DensityUnit = ...

    SlugPerCubicFoot: DensityUnit = ...

    SlugPerCubicInch: DensityUnit = ...

    SlugPerCubicMeter: DensityUnit = ...

    SlugPerCubicMillimeter: DensityUnit = ...

    TonnePerCubicCentimeter: DensityUnit = ...

    TonnePerCubicFoot: DensityUnit = ...

    TonnePerCubicInch: DensityUnit = ...

    TonnePerCubicMeter: DensityUnit = ...

    TonnePerCubicMillimeter: DensityUnit = ...


# noinspection PyPep8Naming
class DurationUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: DurationUnit = ...

    Day: DurationUnit = ...

    Hour: DurationUnit = ...

    JulianYear: DurationUnit = ...

    Microsecond: DurationUnit = ...

    Millisecond: DurationUnit = ...

    Minute: DurationUnit = ...

    Month30: DurationUnit = ...

    Nanosecond: DurationUnit = ...

    Second: DurationUnit = ...

    Week: DurationUnit = ...

    Year365: DurationUnit = ...


# noinspection PyPep8Naming
class DynamicViscosityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: DynamicViscosityUnit = ...

    Centipoise: DynamicViscosityUnit = ...

    MicropascalSecond: DynamicViscosityUnit = ...

    MillipascalSecond: DynamicViscosityUnit = ...

    NewtonSecondPerMeterSquared: DynamicViscosityUnit = ...

    PascalSecond: DynamicViscosityUnit = ...

    Poise: DynamicViscosityUnit = ...

    PoundForceSecondPerSquareFoot: DynamicViscosityUnit = ...

    PoundForceSecondPerSquareInch: DynamicViscosityUnit = ...

    PoundPerFootSecond: DynamicViscosityUnit = ...

    Reyn: DynamicViscosityUnit = ...


# noinspection PyPep8Naming
class ElectricAdmittanceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricAdmittanceUnit = ...

    Microsiemens: ElectricAdmittanceUnit = ...

    Millisiemens: ElectricAdmittanceUnit = ...

    Nanosiemens: ElectricAdmittanceUnit = ...

    Siemens: ElectricAdmittanceUnit = ...


# noinspection PyPep8Naming
class ElectricChargeDensityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricChargeDensityUnit = ...

    CoulombPerCubicMeter: ElectricChargeDensityUnit = ...


# noinspection PyPep8Naming
class ElectricChargeUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricChargeUnit = ...

    AmpereHour: ElectricChargeUnit = ...

    Coulomb: ElectricChargeUnit = ...

    KiloampereHour: ElectricChargeUnit = ...

    MegaampereHour: ElectricChargeUnit = ...

    MilliampereHour: ElectricChargeUnit = ...


# noinspection PyPep8Naming
class ElectricConductanceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricConductanceUnit = ...

    Microsiemens: ElectricConductanceUnit = ...

    Millisiemens: ElectricConductanceUnit = ...

    Siemens: ElectricConductanceUnit = ...


# noinspection PyPep8Naming
class ElectricConductivityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricConductivityUnit = ...

    MicrosiemensPerCentimeter: ElectricConductivityUnit = ...

    MillisiemensPerCentimeter: ElectricConductivityUnit = ...

    SiemensPerCentimeter: ElectricConductivityUnit = ...

    SiemensPerFoot: ElectricConductivityUnit = ...

    SiemensPerInch: ElectricConductivityUnit = ...

    SiemensPerMeter: ElectricConductivityUnit = ...


# noinspection PyPep8Naming
class ElectricCurrentDensityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricCurrentDensityUnit = ...

    AmperePerSquareFoot: ElectricCurrentDensityUnit = ...

    AmperePerSquareInch: ElectricCurrentDensityUnit = ...

    AmperePerSquareMeter: ElectricCurrentDensityUnit = ...


# noinspection PyPep8Naming
class ElectricCurrentGradientUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricCurrentGradientUnit = ...

    AmperePerMicrosecond: ElectricCurrentGradientUnit = ...

    AmperePerMillisecond: ElectricCurrentGradientUnit = ...

    AmperePerNanosecond: ElectricCurrentGradientUnit = ...

    AmperePerSecond: ElectricCurrentGradientUnit = ...


# noinspection PyPep8Naming
class ElectricCurrentUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricCurrentUnit = ...

    Ampere: ElectricCurrentUnit = ...

    Centiampere: ElectricCurrentUnit = ...

    Kiloampere: ElectricCurrentUnit = ...

    Megaampere: ElectricCurrentUnit = ...

    Microampere: ElectricCurrentUnit = ...

    Milliampere: ElectricCurrentUnit = ...

    Nanoampere: ElectricCurrentUnit = ...

    Picoampere: ElectricCurrentUnit = ...


# noinspection PyPep8Naming
class ElectricFieldUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricFieldUnit = ...

    VoltPerMeter: ElectricFieldUnit = ...


# noinspection PyPep8Naming
class ElectricInductanceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricInductanceUnit = ...

    Henry: ElectricInductanceUnit = ...

    Microhenry: ElectricInductanceUnit = ...

    Millihenry: ElectricInductanceUnit = ...

    Nanohenry: ElectricInductanceUnit = ...


# noinspection PyPep8Naming
class ElectricPotentialAcUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricPotentialAcUnit = ...

    KilovoltAc: ElectricPotentialAcUnit = ...

    MegavoltAc: ElectricPotentialAcUnit = ...

    MicrovoltAc: ElectricPotentialAcUnit = ...

    MillivoltAc: ElectricPotentialAcUnit = ...

    VoltAc: ElectricPotentialAcUnit = ...


# noinspection PyPep8Naming
class ElectricPotentialChangeRateUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricPotentialChangeRateUnit = ...

    KilovoltPerHour: ElectricPotentialChangeRateUnit = ...

    KilovoltPerMicrosecond: ElectricPotentialChangeRateUnit = ...

    KilovoltPerMinute: ElectricPotentialChangeRateUnit = ...

    KilovoltPerSecond: ElectricPotentialChangeRateUnit = ...

    MegavoltPerHour: ElectricPotentialChangeRateUnit = ...

    MegavoltPerMicrosecond: ElectricPotentialChangeRateUnit = ...

    MegavoltPerMinute: ElectricPotentialChangeRateUnit = ...

    MegavoltPerSecond: ElectricPotentialChangeRateUnit = ...

    MicrovoltPerHour: ElectricPotentialChangeRateUnit = ...

    MicrovoltPerMicrosecond: ElectricPotentialChangeRateUnit = ...

    MicrovoltPerMinute: ElectricPotentialChangeRateUnit = ...

    MicrovoltPerSecond: ElectricPotentialChangeRateUnit = ...

    MillivoltPerHour: ElectricPotentialChangeRateUnit = ...

    MillivoltPerMicrosecond: ElectricPotentialChangeRateUnit = ...

    MillivoltPerMinute: ElectricPotentialChangeRateUnit = ...

    MillivoltPerSecond: ElectricPotentialChangeRateUnit = ...

    VoltPerHour: ElectricPotentialChangeRateUnit = ...

    VoltPerMicrosecond: ElectricPotentialChangeRateUnit = ...

    VoltPerMinute: ElectricPotentialChangeRateUnit = ...

    VoltPerSecond: ElectricPotentialChangeRateUnit = ...


# noinspection PyPep8Naming
class ElectricPotentialDcUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricPotentialDcUnit = ...

    KilovoltDc: ElectricPotentialDcUnit = ...

    MegavoltDc: ElectricPotentialDcUnit = ...

    MicrovoltDc: ElectricPotentialDcUnit = ...

    MillivoltDc: ElectricPotentialDcUnit = ...

    VoltDc: ElectricPotentialDcUnit = ...


# noinspection PyPep8Naming
class ElectricPotentialUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricPotentialUnit = ...

    Kilovolt: ElectricPotentialUnit = ...

    Megavolt: ElectricPotentialUnit = ...

    Microvolt: ElectricPotentialUnit = ...

    Millivolt: ElectricPotentialUnit = ...

    Volt: ElectricPotentialUnit = ...


# noinspection PyPep8Naming
class ElectricResistanceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricResistanceUnit = ...

    Gigaohm: ElectricResistanceUnit = ...

    Kiloohm: ElectricResistanceUnit = ...

    Megaohm: ElectricResistanceUnit = ...

    Microohm: ElectricResistanceUnit = ...

    Milliohm: ElectricResistanceUnit = ...

    Ohm: ElectricResistanceUnit = ...


# noinspection PyPep8Naming
class ElectricResistivityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricResistivityUnit = ...

    KiloohmCentimeter: ElectricResistivityUnit = ...

    KiloohmMeter: ElectricResistivityUnit = ...

    MegaohmCentimeter: ElectricResistivityUnit = ...

    MegaohmMeter: ElectricResistivityUnit = ...

    MicroohmCentimeter: ElectricResistivityUnit = ...

    MicroohmMeter: ElectricResistivityUnit = ...

    MilliohmCentimeter: ElectricResistivityUnit = ...

    MilliohmMeter: ElectricResistivityUnit = ...

    NanoohmCentimeter: ElectricResistivityUnit = ...

    NanoohmMeter: ElectricResistivityUnit = ...

    OhmCentimeter: ElectricResistivityUnit = ...

    OhmMeter: ElectricResistivityUnit = ...

    PicoohmCentimeter: ElectricResistivityUnit = ...

    PicoohmMeter: ElectricResistivityUnit = ...


# noinspection PyPep8Naming
class ElectricSurfaceChargeDensityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ElectricSurfaceChargeDensityUnit = ...

    CoulombPerSquareCentimeter: ElectricSurfaceChargeDensityUnit = ...

    CoulombPerSquareInch: ElectricSurfaceChargeDensityUnit = ...

    CoulombPerSquareMeter: ElectricSurfaceChargeDensityUnit = ...


# noinspection PyPep8Naming
class EnergyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: EnergyUnit = ...

    BritishThermalUnit: EnergyUnit = ...

    Calorie: EnergyUnit = ...

    DecathermEc: EnergyUnit = ...

    DecathermImperial: EnergyUnit = ...

    DecathermUs: EnergyUnit = ...

    ElectronVolt: EnergyUnit = ...

    Erg: EnergyUnit = ...

    FootPound: EnergyUnit = ...

    GigabritishThermalUnit: EnergyUnit = ...

    GigaelectronVolt: EnergyUnit = ...

    Gigajoule: EnergyUnit = ...

    GigawattDay: EnergyUnit = ...

    GigawattHour: EnergyUnit = ...

    HorsepowerHour: EnergyUnit = ...

    Joule: EnergyUnit = ...

    KilobritishThermalUnit: EnergyUnit = ...

    Kilocalorie: EnergyUnit = ...

    KiloelectronVolt: EnergyUnit = ...

    Kilojoule: EnergyUnit = ...

    KilowattDay: EnergyUnit = ...

    KilowattHour: EnergyUnit = ...

    MegabritishThermalUnit: EnergyUnit = ...

    Megacalorie: EnergyUnit = ...

    MegaelectronVolt: EnergyUnit = ...

    Megajoule: EnergyUnit = ...

    MegawattDay: EnergyUnit = ...

    MegawattHour: EnergyUnit = ...

    Millijoule: EnergyUnit = ...

    TeraelectronVolt: EnergyUnit = ...

    TerawattDay: EnergyUnit = ...

    TerawattHour: EnergyUnit = ...

    ThermEc: EnergyUnit = ...

    ThermImperial: EnergyUnit = ...

    ThermUs: EnergyUnit = ...

    WattDay: EnergyUnit = ...

    WattHour: EnergyUnit = ...


# noinspection PyPep8Naming
class EntropyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: EntropyUnit = ...

    CaloriePerKelvin: EntropyUnit = ...

    JoulePerDegreeCelsius: EntropyUnit = ...

    JoulePerKelvin: EntropyUnit = ...

    KilocaloriePerKelvin: EntropyUnit = ...

    KilojoulePerDegreeCelsius: EntropyUnit = ...

    KilojoulePerKelvin: EntropyUnit = ...

    MegajoulePerKelvin: EntropyUnit = ...


# noinspection PyPep8Naming
class ForceChangeRateUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ForceChangeRateUnit = ...

    CentinewtonPerSecond: ForceChangeRateUnit = ...

    DecanewtonPerMinute: ForceChangeRateUnit = ...

    DecanewtonPerSecond: ForceChangeRateUnit = ...

    DecinewtonPerSecond: ForceChangeRateUnit = ...

    KilonewtonPerMinute: ForceChangeRateUnit = ...

    KilonewtonPerSecond: ForceChangeRateUnit = ...

    KilopoundForcePerMinute: ForceChangeRateUnit = ...

    KilopoundForcePerSecond: ForceChangeRateUnit = ...

    MicronewtonPerSecond: ForceChangeRateUnit = ...

    MillinewtonPerSecond: ForceChangeRateUnit = ...

    NanonewtonPerSecond: ForceChangeRateUnit = ...

    NewtonPerMinute: ForceChangeRateUnit = ...

    NewtonPerSecond: ForceChangeRateUnit = ...

    PoundForcePerMinute: ForceChangeRateUnit = ...

    PoundForcePerSecond: ForceChangeRateUnit = ...


# noinspection PyPep8Naming
class ForcePerLengthUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ForcePerLengthUnit = ...

    CentinewtonPerCentimeter: ForcePerLengthUnit = ...

    CentinewtonPerMeter: ForcePerLengthUnit = ...

    CentinewtonPerMillimeter: ForcePerLengthUnit = ...

    DecanewtonPerCentimeter: ForcePerLengthUnit = ...

    DecanewtonPerMeter: ForcePerLengthUnit = ...

    DecanewtonPerMillimeter: ForcePerLengthUnit = ...

    DecinewtonPerCentimeter: ForcePerLengthUnit = ...

    DecinewtonPerMeter: ForcePerLengthUnit = ...

    DecinewtonPerMillimeter: ForcePerLengthUnit = ...

    KilogramForcePerCentimeter: ForcePerLengthUnit = ...

    KilogramForcePerMeter: ForcePerLengthUnit = ...

    KilogramForcePerMillimeter: ForcePerLengthUnit = ...

    KilonewtonPerCentimeter: ForcePerLengthUnit = ...

    KilonewtonPerMeter: ForcePerLengthUnit = ...

    KilonewtonPerMillimeter: ForcePerLengthUnit = ...

    KilopoundForcePerFoot: ForcePerLengthUnit = ...

    KilopoundForcePerInch: ForcePerLengthUnit = ...

    MeganewtonPerCentimeter: ForcePerLengthUnit = ...

    MeganewtonPerMeter: ForcePerLengthUnit = ...

    MeganewtonPerMillimeter: ForcePerLengthUnit = ...

    MicronewtonPerCentimeter: ForcePerLengthUnit = ...

    MicronewtonPerMeter: ForcePerLengthUnit = ...

    MicronewtonPerMillimeter: ForcePerLengthUnit = ...

    MillinewtonPerCentimeter: ForcePerLengthUnit = ...

    MillinewtonPerMeter: ForcePerLengthUnit = ...

    MillinewtonPerMillimeter: ForcePerLengthUnit = ...

    NanonewtonPerCentimeter: ForcePerLengthUnit = ...

    NanonewtonPerMeter: ForcePerLengthUnit = ...

    NanonewtonPerMillimeter: ForcePerLengthUnit = ...

    NewtonPerCentimeter: ForcePerLengthUnit = ...

    NewtonPerMeter: ForcePerLengthUnit = ...

    NewtonPerMillimeter: ForcePerLengthUnit = ...

    PoundForcePerFoot: ForcePerLengthUnit = ...

    PoundForcePerInch: ForcePerLengthUnit = ...

    PoundForcePerYard: ForcePerLengthUnit = ...

    TonneForcePerCentimeter: ForcePerLengthUnit = ...

    TonneForcePerMeter: ForcePerLengthUnit = ...

    TonneForcePerMillimeter: ForcePerLengthUnit = ...


# noinspection PyPep8Naming
class ForceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ForceUnit = ...

    Decanewton: ForceUnit = ...

    Dyn: ForceUnit = ...

    KilogramForce: ForceUnit = ...

    Kilonewton: ForceUnit = ...

    KiloPond: ForceUnit = ...

    KilopoundForce: ForceUnit = ...

    Meganewton: ForceUnit = ...

    Micronewton: ForceUnit = ...

    Millinewton: ForceUnit = ...

    Newton: ForceUnit = ...

    OunceForce: ForceUnit = ...

    Poundal: ForceUnit = ...

    PoundForce: ForceUnit = ...

    ShortTonForce: ForceUnit = ...
    """ The short ton-force is a unit of force equal to 2,000 pounds-force (907.18474 kgf), that is most commonly used in the United States â€“ known there simply as the ton or US ton.
    https://en.wikipedia.org/wiki/Ton-force#Short_ton-force
    """

    TonneForce: ForceUnit = ...


# noinspection PyPep8Naming
class FrequencyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: FrequencyUnit = ...

    BeatPerMinute: FrequencyUnit = ...

    BUnit: FrequencyUnit = ...

    CyclePerHour: FrequencyUnit = ...

    CyclePerMinute: FrequencyUnit = ...

    Gigahertz: FrequencyUnit = ...

    Hertz: FrequencyUnit = ...

    Kilohertz: FrequencyUnit = ...

    Megahertz: FrequencyUnit = ...

    PerSecond: FrequencyUnit = ...

    RadianPerSecond: FrequencyUnit = ...

    Terahertz: FrequencyUnit = ...


# noinspection PyPep8Naming
class FuelEfficiencyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: FuelEfficiencyUnit = ...

    KilometerPerLiter: FuelEfficiencyUnit = ...

    LiterPer100Kilometers: FuelEfficiencyUnit = ...

    MilePerUkGallon: FuelEfficiencyUnit = ...

    MilePerUsGallon: FuelEfficiencyUnit = ...


# noinspection PyPep8Naming
class HeatFluxUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: HeatFluxUnit = ...

    BtuPerHourSquareFoot: HeatFluxUnit = ...

    BtuPerMinuteSquareFoot: HeatFluxUnit = ...

    BtuPerSecondSquareFoot: HeatFluxUnit = ...

    BtuPerSecondSquareInch: HeatFluxUnit = ...

    CaloriePerSecondSquareCentimeter: HeatFluxUnit = ...

    CentiwattPerSquareMeter: HeatFluxUnit = ...

    DeciwattPerSquareMeter: HeatFluxUnit = ...

    KilocaloriePerHourSquareMeter: HeatFluxUnit = ...

    KilocaloriePerSecondSquareCentimeter: HeatFluxUnit = ...

    KilowattPerSquareMeter: HeatFluxUnit = ...

    MicrowattPerSquareMeter: HeatFluxUnit = ...

    MilliwattPerSquareMeter: HeatFluxUnit = ...

    NanowattPerSquareMeter: HeatFluxUnit = ...

    PoundForcePerFootSecond: HeatFluxUnit = ...

    PoundPerSecondCubed: HeatFluxUnit = ...

    WattPerSquareFoot: HeatFluxUnit = ...

    WattPerSquareInch: HeatFluxUnit = ...

    WattPerSquareMeter: HeatFluxUnit = ...


# noinspection PyPep8Naming
class HeatTransferCoefficientUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: HeatTransferCoefficientUnit = ...

    BtuPerSquareFootDegreeFahrenheit: HeatTransferCoefficientUnit = ...

    WattPerSquareMeterCelsius: HeatTransferCoefficientUnit = ...

    WattPerSquareMeterKelvin: HeatTransferCoefficientUnit = ...


# noinspection PyPep8Naming
class IlluminanceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: IlluminanceUnit = ...

    Kilolux: IlluminanceUnit = ...

    Lux: IlluminanceUnit = ...

    Megalux: IlluminanceUnit = ...

    Millilux: IlluminanceUnit = ...


# noinspection PyPep8Naming
class InformationUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: InformationUnit = ...

    Bit: InformationUnit = ...

    Byte: InformationUnit = ...

    Exabit: InformationUnit = ...

    Exabyte: InformationUnit = ...

    Exbibit: InformationUnit = ...

    Exbibyte: InformationUnit = ...

    Gibibit: InformationUnit = ...

    Gibibyte: InformationUnit = ...

    Gigabit: InformationUnit = ...

    Gigabyte: InformationUnit = ...

    Kibibit: InformationUnit = ...

    Kibibyte: InformationUnit = ...

    Kilobit: InformationUnit = ...

    Kilobyte: InformationUnit = ...

    Mebibit: InformationUnit = ...

    Mebibyte: InformationUnit = ...

    Megabit: InformationUnit = ...

    Megabyte: InformationUnit = ...

    Pebibit: InformationUnit = ...

    Pebibyte: InformationUnit = ...

    Petabit: InformationUnit = ...

    Petabyte: InformationUnit = ...

    Tebibit: InformationUnit = ...

    Tebibyte: InformationUnit = ...

    Terabit: InformationUnit = ...

    Terabyte: InformationUnit = ...


# noinspection PyPep8Naming
class IrradianceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: IrradianceUnit = ...

    KilowattPerSquareCentimeter: IrradianceUnit = ...

    KilowattPerSquareMeter: IrradianceUnit = ...

    MegawattPerSquareCentimeter: IrradianceUnit = ...

    MegawattPerSquareMeter: IrradianceUnit = ...

    MicrowattPerSquareCentimeter: IrradianceUnit = ...

    MicrowattPerSquareMeter: IrradianceUnit = ...

    MilliwattPerSquareCentimeter: IrradianceUnit = ...

    MilliwattPerSquareMeter: IrradianceUnit = ...

    NanowattPerSquareCentimeter: IrradianceUnit = ...

    NanowattPerSquareMeter: IrradianceUnit = ...

    PicowattPerSquareCentimeter: IrradianceUnit = ...

    PicowattPerSquareMeter: IrradianceUnit = ...

    WattPerSquareCentimeter: IrradianceUnit = ...

    WattPerSquareMeter: IrradianceUnit = ...


# noinspection PyPep8Naming
class IrradiationUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: IrradiationUnit = ...

    JoulePerSquareCentimeter: IrradiationUnit = ...

    JoulePerSquareMeter: IrradiationUnit = ...

    JoulePerSquareMillimeter: IrradiationUnit = ...

    KilojoulePerSquareMeter: IrradiationUnit = ...

    KilowattHourPerSquareMeter: IrradiationUnit = ...

    MillijoulePerSquareCentimeter: IrradiationUnit = ...

    WattHourPerSquareMeter: IrradiationUnit = ...


# noinspection PyPep8Naming
class JerkUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: JerkUnit = ...

    CentimeterPerSecondCubed: JerkUnit = ...

    DecimeterPerSecondCubed: JerkUnit = ...

    FootPerSecondCubed: JerkUnit = ...

    InchPerSecondCubed: JerkUnit = ...

    KilometerPerSecondCubed: JerkUnit = ...

    MeterPerSecondCubed: JerkUnit = ...

    MicrometerPerSecondCubed: JerkUnit = ...

    MillimeterPerSecondCubed: JerkUnit = ...

    MillistandardGravitiesPerSecond: JerkUnit = ...

    NanometerPerSecondCubed: JerkUnit = ...

    StandardGravitiesPerSecond: JerkUnit = ...


# noinspection PyPep8Naming
class KinematicViscosityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: KinematicViscosityUnit = ...

    Centistokes: KinematicViscosityUnit = ...

    Decistokes: KinematicViscosityUnit = ...

    Kilostokes: KinematicViscosityUnit = ...

    Microstokes: KinematicViscosityUnit = ...

    Millistokes: KinematicViscosityUnit = ...

    Nanostokes: KinematicViscosityUnit = ...

    SquareFootPerSecond: KinematicViscosityUnit = ...

    SquareMeterPerSecond: KinematicViscosityUnit = ...

    Stokes: KinematicViscosityUnit = ...


# noinspection PyPep8Naming
class LapseRateUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: LapseRateUnit = ...

    DegreeCelsiusPerKilometer: LapseRateUnit = ...


# noinspection PyPep8Naming
class LengthUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: LengthUnit = ...

    Angstrom: LengthUnit = ...
    """ Angstrom is a metric unit of length equal to 1e-10 meter
    https://en.wikipedia.org/wiki/Angstrom
    """

    AstronomicalUnit: LengthUnit = ...
    """ One Astronomical Unit is the distance from the solar system Star, the sun, to planet Earth.
    https://en.wikipedia.org/wiki/Astronomical_unit
    """

    Centimeter: LengthUnit = ...

    Chain: LengthUnit = ...

    DataMile: LengthUnit = ...
    """ In radar-related subjects and in JTIDS, a data mile is a unit of distance equal to 6000 feet (1.8288 kilometres or 0.987 nautical miles).
    https://en.wikipedia.org/wiki/Data_mile
    """

    Decameter: LengthUnit = ...

    Decimeter: LengthUnit = ...

    DtpPica: LengthUnit = ...

    DtpPoint: LengthUnit = ...

    Fathom: LengthUnit = ...

    Foot: LengthUnit = ...

    Hand: LengthUnit = ...

    Hectometer: LengthUnit = ...

    Inch: LengthUnit = ...

    KilolightYear: LengthUnit = ...

    Kilometer: LengthUnit = ...

    Kiloparsec: LengthUnit = ...

    LightYear: LengthUnit = ...
    """ A Light Year (ly) is the distance that light travel during an Earth year, ie 365 days.
    https://en.wikipedia.org/wiki/Light-year
    """

    MegalightYear: LengthUnit = ...

    Megaparsec: LengthUnit = ...

    Meter: LengthUnit = ...

    Microinch: LengthUnit = ...

    Micrometer: LengthUnit = ...

    Mil: LengthUnit = ...

    Mile: LengthUnit = ...

    Millimeter: LengthUnit = ...

    Nanometer: LengthUnit = ...

    NauticalMile: LengthUnit = ...

    Parsec: LengthUnit = ...
    """ A parsec is defined as the distance at which one astronomical unit (AU) subtends an angle of one arcsecond.
    https://en.wikipedia.org/wiki/Parsec
    """

    PrinterPica: LengthUnit = ...

    PrinterPoint: LengthUnit = ...

    Shackle: LengthUnit = ...

    SolarRadius: LengthUnit = ...
    """ Solar radius is a ratio unit to the radius of the solar system star, the sun.
    https://en.wikipedia.org/wiki/Stellar_classification
    """

    Twip: LengthUnit = ...

    UsSurveyFoot: LengthUnit = ...

    Yard: LengthUnit = ...


# noinspection PyPep8Naming
class LevelUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: LevelUnit = ...

    Decibel: LevelUnit = ...

    Neper: LevelUnit = ...


# noinspection PyPep8Naming
class LinearDensityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: LinearDensityUnit = ...

    GramPerCentimeter: LinearDensityUnit = ...

    GramPerMeter: LinearDensityUnit = ...

    GramPerMillimeter: LinearDensityUnit = ...

    KilogramPerCentimeter: LinearDensityUnit = ...

    KilogramPerMeter: LinearDensityUnit = ...

    KilogramPerMillimeter: LinearDensityUnit = ...

    MicrogramPerCentimeter: LinearDensityUnit = ...

    MicrogramPerMeter: LinearDensityUnit = ...

    MicrogramPerMillimeter: LinearDensityUnit = ...

    MilligramPerCentimeter: LinearDensityUnit = ...

    MilligramPerMeter: LinearDensityUnit = ...

    MilligramPerMillimeter: LinearDensityUnit = ...

    PoundPerFoot: LinearDensityUnit = ...

    PoundPerInch: LinearDensityUnit = ...


# noinspection PyPep8Naming
class LinearPowerDensityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: LinearPowerDensityUnit = ...

    GigawattPerCentimeter: LinearPowerDensityUnit = ...

    GigawattPerFoot: LinearPowerDensityUnit = ...

    GigawattPerInch: LinearPowerDensityUnit = ...

    GigawattPerMeter: LinearPowerDensityUnit = ...

    GigawattPerMillimeter: LinearPowerDensityUnit = ...

    KilowattPerCentimeter: LinearPowerDensityUnit = ...

    KilowattPerFoot: LinearPowerDensityUnit = ...

    KilowattPerInch: LinearPowerDensityUnit = ...

    KilowattPerMeter: LinearPowerDensityUnit = ...

    KilowattPerMillimeter: LinearPowerDensityUnit = ...

    MegawattPerCentimeter: LinearPowerDensityUnit = ...

    MegawattPerFoot: LinearPowerDensityUnit = ...

    MegawattPerInch: LinearPowerDensityUnit = ...

    MegawattPerMeter: LinearPowerDensityUnit = ...

    MegawattPerMillimeter: LinearPowerDensityUnit = ...

    MilliwattPerCentimeter: LinearPowerDensityUnit = ...

    MilliwattPerFoot: LinearPowerDensityUnit = ...

    MilliwattPerInch: LinearPowerDensityUnit = ...

    MilliwattPerMeter: LinearPowerDensityUnit = ...

    MilliwattPerMillimeter: LinearPowerDensityUnit = ...

    WattPerCentimeter: LinearPowerDensityUnit = ...

    WattPerFoot: LinearPowerDensityUnit = ...

    WattPerInch: LinearPowerDensityUnit = ...

    WattPerMeter: LinearPowerDensityUnit = ...

    WattPerMillimeter: LinearPowerDensityUnit = ...


# noinspection PyPep8Naming
class LuminanceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: LuminanceUnit = ...

    CandelaPerSquareFoot: LuminanceUnit = ...

    CandelaPerSquareInch: LuminanceUnit = ...

    CandelaPerSquareMeter: LuminanceUnit = ...

    CenticandelaPerSquareMeter: LuminanceUnit = ...

    DecicandelaPerSquareMeter: LuminanceUnit = ...

    KilocandelaPerSquareMeter: LuminanceUnit = ...

    MicrocandelaPerSquareMeter: LuminanceUnit = ...

    MillicandelaPerSquareMeter: LuminanceUnit = ...

    NanocandelaPerSquareMeter: LuminanceUnit = ...

    Nit: LuminanceUnit = ...
    """https://www.britannica.com/science/luminosity
    """


# noinspection PyPep8Naming
class LuminosityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: LuminosityUnit = ...

    Decawatt: LuminosityUnit = ...

    Deciwatt: LuminosityUnit = ...

    Femtowatt: LuminosityUnit = ...

    Gigawatt: LuminosityUnit = ...

    Kilowatt: LuminosityUnit = ...

    Megawatt: LuminosityUnit = ...

    Microwatt: LuminosityUnit = ...

    Milliwatt: LuminosityUnit = ...

    Nanowatt: LuminosityUnit = ...

    Petawatt: LuminosityUnit = ...

    Picowatt: LuminosityUnit = ...

    SolarLuminosity: LuminosityUnit = ...
    """https://www.britannica.com/science/luminosity
    """

    Terawatt: LuminosityUnit = ...

    Watt: LuminosityUnit = ...


# noinspection PyPep8Naming
class LuminousFluxUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: LuminousFluxUnit = ...

    Lumen: LuminousFluxUnit = ...


# noinspection PyPep8Naming
class LuminousIntensityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: LuminousIntensityUnit = ...

    Candela: LuminousIntensityUnit = ...


# noinspection PyPep8Naming
class MagneticFieldUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MagneticFieldUnit = ...

    Gauss: MagneticFieldUnit = ...

    Microtesla: MagneticFieldUnit = ...

    Milligauss: MagneticFieldUnit = ...

    Millitesla: MagneticFieldUnit = ...

    Nanotesla: MagneticFieldUnit = ...

    Tesla: MagneticFieldUnit = ...


# noinspection PyPep8Naming
class MagneticFluxUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MagneticFluxUnit = ...

    Weber: MagneticFluxUnit = ...


# noinspection PyPep8Naming
class MagnetizationUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MagnetizationUnit = ...

    AmperePerMeter: MagnetizationUnit = ...


# noinspection PyPep8Naming
class MassConcentrationUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MassConcentrationUnit = ...

    CentigramPerDeciliter: MassConcentrationUnit = ...

    CentigramPerLiter: MassConcentrationUnit = ...

    CentigramPerMicroliter: MassConcentrationUnit = ...

    CentigramPerMilliliter: MassConcentrationUnit = ...

    DecigramPerDeciliter: MassConcentrationUnit = ...

    DecigramPerLiter: MassConcentrationUnit = ...

    DecigramPerMicroliter: MassConcentrationUnit = ...

    DecigramPerMilliliter: MassConcentrationUnit = ...

    GramPerCubicCentimeter: MassConcentrationUnit = ...

    GramPerCubicMeter: MassConcentrationUnit = ...

    GramPerCubicMillimeter: MassConcentrationUnit = ...

    GramPerDeciliter: MassConcentrationUnit = ...

    GramPerLiter: MassConcentrationUnit = ...

    GramPerMicroliter: MassConcentrationUnit = ...

    GramPerMilliliter: MassConcentrationUnit = ...

    KilogramPerCubicCentimeter: MassConcentrationUnit = ...

    KilogramPerCubicMeter: MassConcentrationUnit = ...

    KilogramPerCubicMillimeter: MassConcentrationUnit = ...

    KilogramPerLiter: MassConcentrationUnit = ...

    KilopoundPerCubicFoot: MassConcentrationUnit = ...

    KilopoundPerCubicInch: MassConcentrationUnit = ...

    MicrogramPerCubicMeter: MassConcentrationUnit = ...

    MicrogramPerDeciliter: MassConcentrationUnit = ...

    MicrogramPerLiter: MassConcentrationUnit = ...

    MicrogramPerMicroliter: MassConcentrationUnit = ...

    MicrogramPerMilliliter: MassConcentrationUnit = ...

    MilligramPerCubicMeter: MassConcentrationUnit = ...

    MilligramPerDeciliter: MassConcentrationUnit = ...

    MilligramPerLiter: MassConcentrationUnit = ...

    MilligramPerMicroliter: MassConcentrationUnit = ...

    MilligramPerMilliliter: MassConcentrationUnit = ...

    NanogramPerDeciliter: MassConcentrationUnit = ...

    NanogramPerLiter: MassConcentrationUnit = ...

    NanogramPerMicroliter: MassConcentrationUnit = ...

    NanogramPerMilliliter: MassConcentrationUnit = ...

    OuncePerImperialGallon: MassConcentrationUnit = ...

    OuncePerUSGallon: MassConcentrationUnit = ...

    PicogramPerDeciliter: MassConcentrationUnit = ...

    PicogramPerLiter: MassConcentrationUnit = ...

    PicogramPerMicroliter: MassConcentrationUnit = ...

    PicogramPerMilliliter: MassConcentrationUnit = ...

    PoundPerCubicFoot: MassConcentrationUnit = ...

    PoundPerCubicInch: MassConcentrationUnit = ...

    PoundPerImperialGallon: MassConcentrationUnit = ...

    PoundPerUSGallon: MassConcentrationUnit = ...

    SlugPerCubicFoot: MassConcentrationUnit = ...

    TonnePerCubicCentimeter: MassConcentrationUnit = ...

    TonnePerCubicMeter: MassConcentrationUnit = ...

    TonnePerCubicMillimeter: MassConcentrationUnit = ...


# noinspection PyPep8Naming
class MassFlowUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MassFlowUnit = ...

    CentigramPerDay: MassFlowUnit = ...

    CentigramPerSecond: MassFlowUnit = ...

    DecagramPerDay: MassFlowUnit = ...

    DecagramPerSecond: MassFlowUnit = ...

    DecigramPerDay: MassFlowUnit = ...

    DecigramPerSecond: MassFlowUnit = ...

    GramPerDay: MassFlowUnit = ...

    GramPerHour: MassFlowUnit = ...

    GramPerSecond: MassFlowUnit = ...

    HectogramPerDay: MassFlowUnit = ...

    HectogramPerSecond: MassFlowUnit = ...

    KilogramPerDay: MassFlowUnit = ...

    KilogramPerHour: MassFlowUnit = ...

    KilogramPerMinute: MassFlowUnit = ...

    KilogramPerSecond: MassFlowUnit = ...

    MegagramPerDay: MassFlowUnit = ...

    MegapoundPerDay: MassFlowUnit = ...

    MegapoundPerHour: MassFlowUnit = ...

    MegapoundPerMinute: MassFlowUnit = ...

    MegapoundPerSecond: MassFlowUnit = ...

    MicrogramPerDay: MassFlowUnit = ...

    MicrogramPerSecond: MassFlowUnit = ...

    MilligramPerDay: MassFlowUnit = ...

    MilligramPerSecond: MassFlowUnit = ...

    NanogramPerDay: MassFlowUnit = ...

    NanogramPerSecond: MassFlowUnit = ...

    PoundPerDay: MassFlowUnit = ...

    PoundPerHour: MassFlowUnit = ...

    PoundPerMinute: MassFlowUnit = ...

    PoundPerSecond: MassFlowUnit = ...

    ShortTonPerHour: MassFlowUnit = ...

    TonnePerDay: MassFlowUnit = ...

    TonnePerHour: MassFlowUnit = ...


# noinspection PyPep8Naming
class MassFluxUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MassFluxUnit = ...

    GramPerHourPerSquareCentimeter: MassFluxUnit = ...

    GramPerHourPerSquareMeter: MassFluxUnit = ...

    GramPerHourPerSquareMillimeter: MassFluxUnit = ...

    GramPerSecondPerSquareCentimeter: MassFluxUnit = ...

    GramPerSecondPerSquareMeter: MassFluxUnit = ...

    GramPerSecondPerSquareMillimeter: MassFluxUnit = ...

    KilogramPerHourPerSquareCentimeter: MassFluxUnit = ...

    KilogramPerHourPerSquareMeter: MassFluxUnit = ...

    KilogramPerHourPerSquareMillimeter: MassFluxUnit = ...

    KilogramPerSecondPerSquareCentimeter: MassFluxUnit = ...

    KilogramPerSecondPerSquareMeter: MassFluxUnit = ...

    KilogramPerSecondPerSquareMillimeter: MassFluxUnit = ...


# noinspection PyPep8Naming
class MassFractionUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MassFractionUnit = ...

    CentigramPerGram: MassFractionUnit = ...

    CentigramPerKilogram: MassFractionUnit = ...

    DecagramPerGram: MassFractionUnit = ...

    DecagramPerKilogram: MassFractionUnit = ...

    DecigramPerGram: MassFractionUnit = ...

    DecigramPerKilogram: MassFractionUnit = ...

    DecimalFraction: MassFractionUnit = ...

    GramPerGram: MassFractionUnit = ...

    GramPerKilogram: MassFractionUnit = ...

    HectogramPerGram: MassFractionUnit = ...

    HectogramPerKilogram: MassFractionUnit = ...

    KilogramPerGram: MassFractionUnit = ...

    KilogramPerKilogram: MassFractionUnit = ...

    MicrogramPerGram: MassFractionUnit = ...

    MicrogramPerKilogram: MassFractionUnit = ...

    MilligramPerGram: MassFractionUnit = ...

    MilligramPerKilogram: MassFractionUnit = ...

    NanogramPerGram: MassFractionUnit = ...

    NanogramPerKilogram: MassFractionUnit = ...

    PartPerBillion: MassFractionUnit = ...

    PartPerMillion: MassFractionUnit = ...

    PartPerThousand: MassFractionUnit = ...

    PartPerTrillion: MassFractionUnit = ...

    Percent: MassFractionUnit = ...


# noinspection PyPep8Naming
class MassMomentOfInertiaUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MassMomentOfInertiaUnit = ...

    GramSquareCentimeter: MassMomentOfInertiaUnit = ...

    GramSquareDecimeter: MassMomentOfInertiaUnit = ...

    GramSquareMeter: MassMomentOfInertiaUnit = ...

    GramSquareMillimeter: MassMomentOfInertiaUnit = ...

    KilogramSquareCentimeter: MassMomentOfInertiaUnit = ...

    KilogramSquareDecimeter: MassMomentOfInertiaUnit = ...

    KilogramSquareMeter: MassMomentOfInertiaUnit = ...

    KilogramSquareMillimeter: MassMomentOfInertiaUnit = ...

    KilotonneSquareCentimeter: MassMomentOfInertiaUnit = ...

    KilotonneSquareDecimeter: MassMomentOfInertiaUnit = ...

    KilotonneSquareMeter: MassMomentOfInertiaUnit = ...

    KilotonneSquareMilimeter: MassMomentOfInertiaUnit = ...

    MegatonneSquareCentimeter: MassMomentOfInertiaUnit = ...

    MegatonneSquareDecimeter: MassMomentOfInertiaUnit = ...

    MegatonneSquareMeter: MassMomentOfInertiaUnit = ...

    MegatonneSquareMilimeter: MassMomentOfInertiaUnit = ...

    MilligramSquareCentimeter: MassMomentOfInertiaUnit = ...

    MilligramSquareDecimeter: MassMomentOfInertiaUnit = ...

    MilligramSquareMeter: MassMomentOfInertiaUnit = ...

    MilligramSquareMillimeter: MassMomentOfInertiaUnit = ...

    PoundSquareFoot: MassMomentOfInertiaUnit = ...

    PoundSquareInch: MassMomentOfInertiaUnit = ...

    SlugSquareFoot: MassMomentOfInertiaUnit = ...

    SlugSquareInch: MassMomentOfInertiaUnit = ...

    TonneSquareCentimeter: MassMomentOfInertiaUnit = ...

    TonneSquareDecimeter: MassMomentOfInertiaUnit = ...

    TonneSquareMeter: MassMomentOfInertiaUnit = ...

    TonneSquareMilimeter: MassMomentOfInertiaUnit = ...


# noinspection PyPep8Naming
class MassUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MassUnit = ...

    Centigram: MassUnit = ...

    Decagram: MassUnit = ...

    Decigram: MassUnit = ...

    EarthMass: MassUnit = ...
    """ Earth mass is a ratio unit to the mass of planet Earth.
    https://en.wikipedia.org/wiki/Earth_mass
    """

    Grain: MassUnit = ...
    """ A grain is a unit of measurement of mass, and in the troy weight, avoirdupois, and Apothecaries' system, equal to exactly 64.79891 milligrams.
    https://en.wikipedia.org/wiki/Grain_(unit)
    """

    Gram: MassUnit = ...

    Hectogram: MassUnit = ...

    Kilogram: MassUnit = ...

    Kilopound: MassUnit = ...

    Kilotonne: MassUnit = ...

    LongHundredweight: MassUnit = ...
    """ The long or imperial hundredweight (abbreviation cwt) is a unit of mass equal to 112 pounds in US and Canada.
    https://en.wikipedia.org/wiki/Hundredweight
    """

    LongTon: MassUnit = ...
    """ Long ton (weight ton or Imperial ton) is a unit of mass equal to 2,240 pounds (1,016 kg) and is the name for the unit called the "ton" in the avoirdupois or Imperial system of measurements that was used in the United Kingdom and several other Commonwealth countries before metrication.
    http://en.wikipedia.org/wiki/Long_ton
    """

    Megapound: MassUnit = ...

    Megatonne: MassUnit = ...

    Microgram: MassUnit = ...

    Milligram: MassUnit = ...

    Nanogram: MassUnit = ...

    Ounce: MassUnit = ...
    """ An ounce (abbreviated oz) is usually the international avoirdupois ounce as used in the United States customary and British imperial systems, which is equal to one-sixteenth of a pound or approximately 28 grams. The abbreviation 'oz' derives from the Italian word onza (now spelled oncia).
    http://en.wikipedia.org/wiki/Ounce
    """

    Pound: MassUnit = ...
    """ The pound or pound-mass (abbreviations: lb, lbm) is a unit of mass used in the imperial, United States customary and other systems of measurement. A number of different definitions have been used, the most common today being the international avoirdupois pound which is legally defined as exactly 0.45359237 kilograms, and which is divided into 16 avoirdupois ounces.
    """

    ShortHundredweight: MassUnit = ...
    """ The short hundredweight (abbreviation cwt) is a unit of mass equal to 100 pounds in US and Canada. In British English, the short hundredweight is referred to as the "cental".
    https://en.wikipedia.org/wiki/Hundredweight
    """

    ShortTon: MassUnit = ...
    """ The short ton is a unit of mass equal to 2,000 pounds (907.18474 kg), that is most commonly used in the United States â€“ known there simply as the ton.
    http://en.wikipedia.org/wiki/Short_ton
    """

    Slug: MassUnit = ...
    """ The slug (abbreviation slug) is a unit of mass that is accelerated by 1 ft/sÂ² when a force of one pound (lbf) is exerted on it.
    http://en.wikipedia.org/wiki/Slug_(unit)
    """

    SolarMass: MassUnit = ...
    """ Solar mass is a ratio unit to the mass of the solar system star, the sun.
    https://en.wikipedia.org/wiki/Solar_mass
    """

    Stone: MassUnit = ...
    """ The stone (abbreviation st) is a unit of mass equal to 14 pounds avoirdupois (about 6.35 kilograms) used in Great Britain and Ireland for measuring human body weight.
    http://en.wikipedia.org/wiki/Stone_(unit)
    """

    Tonne: MassUnit = ...


# noinspection PyPep8Naming
class MolarEnergyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MolarEnergyUnit = ...

    JoulePerMole: MolarEnergyUnit = ...

    KilojoulePerMole: MolarEnergyUnit = ...

    MegajoulePerMole: MolarEnergyUnit = ...


# noinspection PyPep8Naming
class MolarEntropyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MolarEntropyUnit = ...

    JoulePerMoleKelvin: MolarEntropyUnit = ...

    KilojoulePerMoleKelvin: MolarEntropyUnit = ...

    MegajoulePerMoleKelvin: MolarEntropyUnit = ...


# noinspection PyPep8Naming
class MolarityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MolarityUnit = ...

    CentimolePerLiter: MolarityUnit = ...

    CentimolesPerLiter: MolarityUnit = ...

    DecimolePerLiter: MolarityUnit = ...

    DecimolesPerLiter: MolarityUnit = ...

    FemtomolePerLiter: MolarityUnit = ...

    MicromolePerLiter: MolarityUnit = ...

    MicromolesPerLiter: MolarityUnit = ...

    MillimolePerLiter: MolarityUnit = ...

    MillimolesPerLiter: MolarityUnit = ...

    MolePerCubicMeter: MolarityUnit = ...

    MolePerLiter: MolarityUnit = ...

    MolesPerCubicMeter: MolarityUnit = ...

    MolesPerLiter: MolarityUnit = ...

    NanomolePerLiter: MolarityUnit = ...

    NanomolesPerLiter: MolarityUnit = ...

    PicomolePerLiter: MolarityUnit = ...

    PicomolesPerLiter: MolarityUnit = ...


# noinspection PyPep8Naming
class MolarMassUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MolarMassUnit = ...

    CentigramPerMole: MolarMassUnit = ...

    DecagramPerMole: MolarMassUnit = ...

    DecigramPerMole: MolarMassUnit = ...

    GramPerMole: MolarMassUnit = ...

    HectogramPerMole: MolarMassUnit = ...

    KilogramPerMole: MolarMassUnit = ...

    KilopoundPerMole: MolarMassUnit = ...

    MegapoundPerMole: MolarMassUnit = ...

    MicrogramPerMole: MolarMassUnit = ...

    MilligramPerMole: MolarMassUnit = ...

    NanogramPerMole: MolarMassUnit = ...

    PoundPerMole: MolarMassUnit = ...


# noinspection PyPep8Naming
class MomentUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: MomentUnit = ...

    KilogramForceCentimeter: MomentUnit = ...

    KilogramForceMeter: MomentUnit = ...

    KilogramForceMillimeter: MomentUnit = ...

    KilonewtonCentimeter: MomentUnit = ...

    KilonewtonMeter: MomentUnit = ...

    KilonewtonMillimeter: MomentUnit = ...

    KilopoundForceFoot: MomentUnit = ...

    KilopoundForceInch: MomentUnit = ...

    MeganewtonCentimeter: MomentUnit = ...

    MeganewtonMeter: MomentUnit = ...

    MeganewtonMillimeter: MomentUnit = ...

    MegapoundForceFoot: MomentUnit = ...

    MegapoundForceInch: MomentUnit = ...

    NewtonCentimeter: MomentUnit = ...

    NewtonMeter: MomentUnit = ...

    NewtonMillimeter: MomentUnit = ...

    PoundalFoot: MomentUnit = ...

    PoundForceFoot: MomentUnit = ...

    PoundForceInch: MomentUnit = ...

    TonneForceCentimeter: MomentUnit = ...

    TonneForceMeter: MomentUnit = ...

    TonneForceMillimeter: MomentUnit = ...


# noinspection PyPep8Naming
class PermeabilityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: PermeabilityUnit = ...

    HenryPerMeter: PermeabilityUnit = ...


# noinspection PyPep8Naming
class PermittivityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: PermittivityUnit = ...

    FaradPerMeter: PermittivityUnit = ...


# noinspection PyPep8Naming
class PorousMediumPermeabilityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: PorousMediumPermeabilityUnit = ...

    Darcy: PorousMediumPermeabilityUnit = ...

    Microdarcy: PorousMediumPermeabilityUnit = ...

    Millidarcy: PorousMediumPermeabilityUnit = ...

    SquareCentimeter: PorousMediumPermeabilityUnit = ...

    SquareMeter: PorousMediumPermeabilityUnit = ...


# noinspection PyPep8Naming
class PowerDensityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: PowerDensityUnit = ...

    DecawattPerCubicFoot: PowerDensityUnit = ...

    DecawattPerCubicInch: PowerDensityUnit = ...

    DecawattPerCubicMeter: PowerDensityUnit = ...

    DecawattPerLiter: PowerDensityUnit = ...

    DeciwattPerCubicFoot: PowerDensityUnit = ...

    DeciwattPerCubicInch: PowerDensityUnit = ...

    DeciwattPerCubicMeter: PowerDensityUnit = ...

    DeciwattPerLiter: PowerDensityUnit = ...

    GigawattPerCubicFoot: PowerDensityUnit = ...

    GigawattPerCubicInch: PowerDensityUnit = ...

    GigawattPerCubicMeter: PowerDensityUnit = ...

    GigawattPerLiter: PowerDensityUnit = ...

    KilowattPerCubicFoot: PowerDensityUnit = ...

    KilowattPerCubicInch: PowerDensityUnit = ...

    KilowattPerCubicMeter: PowerDensityUnit = ...

    KilowattPerLiter: PowerDensityUnit = ...

    MegawattPerCubicFoot: PowerDensityUnit = ...

    MegawattPerCubicInch: PowerDensityUnit = ...

    MegawattPerCubicMeter: PowerDensityUnit = ...

    MegawattPerLiter: PowerDensityUnit = ...

    MicrowattPerCubicFoot: PowerDensityUnit = ...

    MicrowattPerCubicInch: PowerDensityUnit = ...

    MicrowattPerCubicMeter: PowerDensityUnit = ...

    MicrowattPerLiter: PowerDensityUnit = ...

    MilliwattPerCubicFoot: PowerDensityUnit = ...

    MilliwattPerCubicInch: PowerDensityUnit = ...

    MilliwattPerCubicMeter: PowerDensityUnit = ...

    MilliwattPerLiter: PowerDensityUnit = ...

    NanowattPerCubicFoot: PowerDensityUnit = ...

    NanowattPerCubicInch: PowerDensityUnit = ...

    NanowattPerCubicMeter: PowerDensityUnit = ...

    NanowattPerLiter: PowerDensityUnit = ...

    PicowattPerCubicFoot: PowerDensityUnit = ...

    PicowattPerCubicInch: PowerDensityUnit = ...

    PicowattPerCubicMeter: PowerDensityUnit = ...

    PicowattPerLiter: PowerDensityUnit = ...

    TerawattPerCubicFoot: PowerDensityUnit = ...

    TerawattPerCubicInch: PowerDensityUnit = ...

    TerawattPerCubicMeter: PowerDensityUnit = ...

    TerawattPerLiter: PowerDensityUnit = ...

    WattPerCubicFoot: PowerDensityUnit = ...

    WattPerCubicInch: PowerDensityUnit = ...

    WattPerCubicMeter: PowerDensityUnit = ...

    WattPerLiter: PowerDensityUnit = ...


# noinspection PyPep8Naming
class PowerRatioUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: PowerRatioUnit = ...

    DecibelMilliwatt: PowerRatioUnit = ...

    DecibelWatt: PowerRatioUnit = ...


# noinspection PyPep8Naming
class PowerUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: PowerUnit = ...

    BoilerHorsepower: PowerUnit = ...

    BritishThermalUnitPerHour: PowerUnit = ...

    Decawatt: PowerUnit = ...

    Deciwatt: PowerUnit = ...

    ElectricalHorsepower: PowerUnit = ...

    Femtowatt: PowerUnit = ...

    GigajoulePerHour: PowerUnit = ...

    Gigawatt: PowerUnit = ...

    HydraulicHorsepower: PowerUnit = ...

    JoulePerHour: PowerUnit = ...

    KilobritishThermalUnitPerHour: PowerUnit = ...

    KilojoulePerHour: PowerUnit = ...

    Kilowatt: PowerUnit = ...

    MechanicalHorsepower: PowerUnit = ...

    MegabritishThermalUnitPerHour: PowerUnit = ...

    MegajoulePerHour: PowerUnit = ...

    Megawatt: PowerUnit = ...

    MetricHorsepower: PowerUnit = ...

    Microwatt: PowerUnit = ...

    MillijoulePerHour: PowerUnit = ...

    Milliwatt: PowerUnit = ...

    Nanowatt: PowerUnit = ...

    Petawatt: PowerUnit = ...

    Picowatt: PowerUnit = ...

    Terawatt: PowerUnit = ...

    Watt: PowerUnit = ...


# noinspection PyPep8Naming
class PressureChangeRateUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: PressureChangeRateUnit = ...

    AtmospherePerSecond: PressureChangeRateUnit = ...

    KilopascalPerMinute: PressureChangeRateUnit = ...

    KilopascalPerSecond: PressureChangeRateUnit = ...

    KilopoundForcePerSquareInchPerMinute: PressureChangeRateUnit = ...

    KilopoundForcePerSquareInchPerSecond: PressureChangeRateUnit = ...

    MegapascalPerMinute: PressureChangeRateUnit = ...

    MegapascalPerSecond: PressureChangeRateUnit = ...

    MegapoundForcePerSquareInchPerMinute: PressureChangeRateUnit = ...

    MegapoundForcePerSquareInchPerSecond: PressureChangeRateUnit = ...

    MillimeterOfMercuryPerSecond: PressureChangeRateUnit = ...

    PascalPerMinute: PressureChangeRateUnit = ...

    PascalPerSecond: PressureChangeRateUnit = ...

    PoundForcePerSquareInchPerMinute: PressureChangeRateUnit = ...

    PoundForcePerSquareInchPerSecond: PressureChangeRateUnit = ...


# noinspection PyPep8Naming
class PressureUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: PressureUnit = ...

    Atmosphere: PressureUnit = ...

    Bar: PressureUnit = ...

    Centibar: PressureUnit = ...

    Decapascal: PressureUnit = ...

    Decibar: PressureUnit = ...

    DynePerSquareCentimeter: PressureUnit = ...

    FootOfElevation: PressureUnit = ...

    FootOfHead: PressureUnit = ...

    Gigapascal: PressureUnit = ...

    Hectopascal: PressureUnit = ...

    InchOfMercury: PressureUnit = ...

    InchOfWaterColumn: PressureUnit = ...

    Kilobar: PressureUnit = ...

    KilogramForcePerSquareCentimeter: PressureUnit = ...

    KilogramForcePerSquareMeter: PressureUnit = ...

    KilogramForcePerSquareMillimeter: PressureUnit = ...

    KilonewtonPerSquareCentimeter: PressureUnit = ...

    KilonewtonPerSquareMeter: PressureUnit = ...

    KilonewtonPerSquareMillimeter: PressureUnit = ...

    Kilopascal: PressureUnit = ...

    KilopoundForcePerSquareFoot: PressureUnit = ...

    KilopoundForcePerSquareInch: PressureUnit = ...

    KilopoundForcePerSquareMil: PressureUnit = ...

    Megabar: PressureUnit = ...

    MeganewtonPerSquareMeter: PressureUnit = ...

    Megapascal: PressureUnit = ...

    MeterOfElevation: PressureUnit = ...

    MeterOfHead: PressureUnit = ...

    Microbar: PressureUnit = ...

    Micropascal: PressureUnit = ...

    Millibar: PressureUnit = ...

    MillimeterOfMercury: PressureUnit = ...

    MillimeterOfWaterColumn: PressureUnit = ...

    Millipascal: PressureUnit = ...

    NewtonPerSquareCentimeter: PressureUnit = ...

    NewtonPerSquareMeter: PressureUnit = ...

    NewtonPerSquareMillimeter: PressureUnit = ...

    Pascal: PressureUnit = ...

    PoundForcePerSquareFoot: PressureUnit = ...

    PoundForcePerSquareInch: PressureUnit = ...

    PoundForcePerSquareMil: PressureUnit = ...

    PoundPerInchSecondSquared: PressureUnit = ...

    TechnicalAtmosphere: PressureUnit = ...

    TonneForcePerSquareCentimeter: PressureUnit = ...

    TonneForcePerSquareMeter: PressureUnit = ...

    TonneForcePerSquareMillimeter: PressureUnit = ...

    Torr: PressureUnit = ...


# noinspection PyPep8Naming
class RatioChangeRateUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: RatioChangeRateUnit = ...

    DecimalFractionPerSecond: RatioChangeRateUnit = ...

    PercentPerSecond: RatioChangeRateUnit = ...


# noinspection PyPep8Naming
class RatioUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: RatioUnit = ...

    DecimalFraction: RatioUnit = ...

    PartPerBillion: RatioUnit = ...

    PartPerMillion: RatioUnit = ...

    PartPerThousand: RatioUnit = ...

    PartPerTrillion: RatioUnit = ...

    Percent: RatioUnit = ...


# noinspection PyPep8Naming
class ReactiveEnergyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ReactiveEnergyUnit = ...

    KilovoltampereReactiveHour: ReactiveEnergyUnit = ...

    MegavoltampereReactiveHour: ReactiveEnergyUnit = ...

    VoltampereReactiveHour: ReactiveEnergyUnit = ...


# noinspection PyPep8Naming
class ReactivePowerUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ReactivePowerUnit = ...

    GigavoltampereReactive: ReactivePowerUnit = ...

    KilovoltampereReactive: ReactivePowerUnit = ...

    MegavoltampereReactive: ReactivePowerUnit = ...

    VoltampereReactive: ReactivePowerUnit = ...


# noinspection PyPep8Naming
class ReciprocalAreaUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ReciprocalAreaUnit = ...

    InverseSquareCentimeter: ReciprocalAreaUnit = ...

    InverseSquareDecimeter: ReciprocalAreaUnit = ...

    InverseSquareFoot: ReciprocalAreaUnit = ...

    InverseSquareInch: ReciprocalAreaUnit = ...

    InverseSquareKilometer: ReciprocalAreaUnit = ...

    InverseSquareMeter: ReciprocalAreaUnit = ...

    InverseSquareMicrometer: ReciprocalAreaUnit = ...

    InverseSquareMile: ReciprocalAreaUnit = ...

    InverseSquareMillimeter: ReciprocalAreaUnit = ...

    InverseSquareYard: ReciprocalAreaUnit = ...

    InverseUsSurveySquareFoot: ReciprocalAreaUnit = ...


# noinspection PyPep8Naming
class ReciprocalLengthUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ReciprocalLengthUnit = ...

    InverseCentimeter: ReciprocalLengthUnit = ...

    InverseFoot: ReciprocalLengthUnit = ...

    InverseInch: ReciprocalLengthUnit = ...

    InverseMeter: ReciprocalLengthUnit = ...

    InverseMicroinch: ReciprocalLengthUnit = ...

    InverseMil: ReciprocalLengthUnit = ...

    InverseMile: ReciprocalLengthUnit = ...

    InverseMillimeter: ReciprocalLengthUnit = ...

    InverseUsSurveyFoot: ReciprocalLengthUnit = ...

    InverseYard: ReciprocalLengthUnit = ...


# noinspection PyPep8Naming
class RelativeHumidityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: RelativeHumidityUnit = ...

    Percent: RelativeHumidityUnit = ...


# noinspection PyPep8Naming
class RotationalAccelerationUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: RotationalAccelerationUnit = ...

    DegreePerSecondSquared: RotationalAccelerationUnit = ...

    RadianPerSecondSquared: RotationalAccelerationUnit = ...

    RevolutionPerMinutePerSecond: RotationalAccelerationUnit = ...

    RevolutionPerSecondSquared: RotationalAccelerationUnit = ...


# noinspection PyPep8Naming
class RotationalSpeedUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: RotationalSpeedUnit = ...

    CentiradianPerSecond: RotationalSpeedUnit = ...

    DeciradianPerSecond: RotationalSpeedUnit = ...

    DegreePerMinute: RotationalSpeedUnit = ...

    DegreePerSecond: RotationalSpeedUnit = ...

    MicrodegreePerSecond: RotationalSpeedUnit = ...

    MicroradianPerSecond: RotationalSpeedUnit = ...

    MillidegreePerSecond: RotationalSpeedUnit = ...

    MilliradianPerSecond: RotationalSpeedUnit = ...

    NanodegreePerSecond: RotationalSpeedUnit = ...

    NanoradianPerSecond: RotationalSpeedUnit = ...

    RadianPerSecond: RotationalSpeedUnit = ...

    RevolutionPerMinute: RotationalSpeedUnit = ...

    RevolutionPerSecond: RotationalSpeedUnit = ...


# noinspection PyPep8Naming
class RotationalStiffnessPerLengthUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: RotationalStiffnessPerLengthUnit = ...

    KilonewtonMeterPerRadianPerMeter: RotationalStiffnessPerLengthUnit = ...

    KilopoundForceFootPerDegreesPerFoot: RotationalStiffnessPerLengthUnit = ...

    MeganewtonMeterPerRadianPerMeter: RotationalStiffnessPerLengthUnit = ...

    NewtonMeterPerRadianPerMeter: RotationalStiffnessPerLengthUnit = ...

    PoundForceFootPerDegreesPerFoot: RotationalStiffnessPerLengthUnit = ...


# noinspection PyPep8Naming
class RotationalStiffnessUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: RotationalStiffnessUnit = ...

    CentinewtonMeterPerDegree: RotationalStiffnessUnit = ...

    CentinewtonMillimeterPerDegree: RotationalStiffnessUnit = ...

    CentinewtonMillimeterPerRadian: RotationalStiffnessUnit = ...

    DecanewtonMeterPerDegree: RotationalStiffnessUnit = ...

    DecanewtonMillimeterPerDegree: RotationalStiffnessUnit = ...

    DecanewtonMillimeterPerRadian: RotationalStiffnessUnit = ...

    DecinewtonMeterPerDegree: RotationalStiffnessUnit = ...

    DecinewtonMillimeterPerDegree: RotationalStiffnessUnit = ...

    DecinewtonMillimeterPerRadian: RotationalStiffnessUnit = ...

    KilonewtonMeterPerDegree: RotationalStiffnessUnit = ...

    KilonewtonMeterPerRadian: RotationalStiffnessUnit = ...

    KilonewtonMillimeterPerDegree: RotationalStiffnessUnit = ...

    KilonewtonMillimeterPerRadian: RotationalStiffnessUnit = ...

    KilopoundForceFootPerDegrees: RotationalStiffnessUnit = ...

    MeganewtonMeterPerDegree: RotationalStiffnessUnit = ...

    MeganewtonMeterPerRadian: RotationalStiffnessUnit = ...

    MeganewtonMillimeterPerDegree: RotationalStiffnessUnit = ...

    MeganewtonMillimeterPerRadian: RotationalStiffnessUnit = ...

    MicronewtonMeterPerDegree: RotationalStiffnessUnit = ...

    MicronewtonMillimeterPerDegree: RotationalStiffnessUnit = ...

    MicronewtonMillimeterPerRadian: RotationalStiffnessUnit = ...

    MillinewtonMeterPerDegree: RotationalStiffnessUnit = ...

    MillinewtonMillimeterPerDegree: RotationalStiffnessUnit = ...

    MillinewtonMillimeterPerRadian: RotationalStiffnessUnit = ...

    NanonewtonMeterPerDegree: RotationalStiffnessUnit = ...

    NanonewtonMillimeterPerDegree: RotationalStiffnessUnit = ...

    NanonewtonMillimeterPerRadian: RotationalStiffnessUnit = ...

    NewtonMeterPerDegree: RotationalStiffnessUnit = ...

    NewtonMeterPerRadian: RotationalStiffnessUnit = ...

    NewtonMillimeterPerDegree: RotationalStiffnessUnit = ...

    NewtonMillimeterPerRadian: RotationalStiffnessUnit = ...

    PoundForceFeetPerRadian: RotationalStiffnessUnit = ...

    PoundForceFootPerDegrees: RotationalStiffnessUnit = ...


# noinspection PyPep8Naming
class ScalarUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ScalarUnit = ...

    Amount: ScalarUnit = ...


# noinspection PyPep8Naming
class SectionModulusUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: SectionModulusUnit = ...

    CubicCentimeter: SectionModulusUnit = ...

    CubicFoot: SectionModulusUnit = ...

    CubicInch: SectionModulusUnit = ...

    CubicMeter: SectionModulusUnit = ...

    CubicMillimeter: SectionModulusUnit = ...


# noinspection PyPep8Naming
class SolidAngleUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: SolidAngleUnit = ...

    Steradian: SolidAngleUnit = ...


# noinspection PyPep8Naming
class SpecificEnergyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: SpecificEnergyUnit = ...

    BtuPerPound: SpecificEnergyUnit = ...

    CaloriePerGram: SpecificEnergyUnit = ...

    GigawattDayPerKilogram: SpecificEnergyUnit = ...

    GigawattDayPerShortTon: SpecificEnergyUnit = ...

    GigawattDayPerTonne: SpecificEnergyUnit = ...

    GigawattHourPerKilogram: SpecificEnergyUnit = ...

    GigawattHourPerPound: SpecificEnergyUnit = ...

    JoulePerKilogram: SpecificEnergyUnit = ...

    KilocaloriePerGram: SpecificEnergyUnit = ...

    KilojoulePerKilogram: SpecificEnergyUnit = ...

    KilowattDayPerKilogram: SpecificEnergyUnit = ...

    KilowattDayPerShortTon: SpecificEnergyUnit = ...

    KilowattDayPerTonne: SpecificEnergyUnit = ...

    KilowattHourPerKilogram: SpecificEnergyUnit = ...

    KilowattHourPerPound: SpecificEnergyUnit = ...

    MegajoulePerKilogram: SpecificEnergyUnit = ...

    MegawattDayPerKilogram: SpecificEnergyUnit = ...

    MegawattDayPerShortTon: SpecificEnergyUnit = ...

    MegawattDayPerTonne: SpecificEnergyUnit = ...

    MegawattHourPerKilogram: SpecificEnergyUnit = ...

    MegawattHourPerPound: SpecificEnergyUnit = ...

    TerawattDayPerKilogram: SpecificEnergyUnit = ...

    TerawattDayPerShortTon: SpecificEnergyUnit = ...

    TerawattDayPerTonne: SpecificEnergyUnit = ...

    WattDayPerKilogram: SpecificEnergyUnit = ...

    WattDayPerShortTon: SpecificEnergyUnit = ...

    WattDayPerTonne: SpecificEnergyUnit = ...

    WattHourPerKilogram: SpecificEnergyUnit = ...

    WattHourPerPound: SpecificEnergyUnit = ...


# noinspection PyPep8Naming
class SpecificEntropyUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: SpecificEntropyUnit = ...

    BtuPerPoundFahrenheit: SpecificEntropyUnit = ...

    CaloriePerGramKelvin: SpecificEntropyUnit = ...

    JoulePerKilogramDegreeCelsius: SpecificEntropyUnit = ...

    JoulePerKilogramKelvin: SpecificEntropyUnit = ...

    KilocaloriePerGramKelvin: SpecificEntropyUnit = ...

    KilojoulePerKilogramDegreeCelsius: SpecificEntropyUnit = ...

    KilojoulePerKilogramKelvin: SpecificEntropyUnit = ...

    MegajoulePerKilogramDegreeCelsius: SpecificEntropyUnit = ...

    MegajoulePerKilogramKelvin: SpecificEntropyUnit = ...


# noinspection PyPep8Naming
class SpecificFuelConsumptionUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: SpecificFuelConsumptionUnit = ...

    GramPerKiloNewtonSecond: SpecificFuelConsumptionUnit = ...

    KilogramPerKilogramForceHour: SpecificFuelConsumptionUnit = ...

    KilogramPerKiloNewtonSecond: SpecificFuelConsumptionUnit = ...

    PoundMassPerPoundForceHour: SpecificFuelConsumptionUnit = ...


# noinspection PyPep8Naming
class SpecificVolumeUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: SpecificVolumeUnit = ...

    CubicFootPerPound: SpecificVolumeUnit = ...

    CubicMeterPerKilogram: SpecificVolumeUnit = ...

    MillicubicMeterPerKilogram: SpecificVolumeUnit = ...


# noinspection PyPep8Naming
class SpecificWeightUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: SpecificWeightUnit = ...

    KilogramForcePerCubicCentimeter: SpecificWeightUnit = ...

    KilogramForcePerCubicMeter: SpecificWeightUnit = ...

    KilogramForcePerCubicMillimeter: SpecificWeightUnit = ...

    KilonewtonPerCubicCentimeter: SpecificWeightUnit = ...

    KilonewtonPerCubicMeter: SpecificWeightUnit = ...

    KilonewtonPerCubicMillimeter: SpecificWeightUnit = ...

    KilopoundForcePerCubicFoot: SpecificWeightUnit = ...

    KilopoundForcePerCubicInch: SpecificWeightUnit = ...

    MeganewtonPerCubicMeter: SpecificWeightUnit = ...

    NewtonPerCubicCentimeter: SpecificWeightUnit = ...

    NewtonPerCubicMeter: SpecificWeightUnit = ...

    NewtonPerCubicMillimeter: SpecificWeightUnit = ...

    PoundForcePerCubicFoot: SpecificWeightUnit = ...

    PoundForcePerCubicInch: SpecificWeightUnit = ...

    TonneForcePerCubicCentimeter: SpecificWeightUnit = ...

    TonneForcePerCubicMeter: SpecificWeightUnit = ...

    TonneForcePerCubicMillimeter: SpecificWeightUnit = ...


# noinspection PyPep8Naming
class SpeedUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: SpeedUnit = ...

    CentimeterPerHour: SpeedUnit = ...

    CentimeterPerMinute: SpeedUnit = ...

    CentimeterPerSecond: SpeedUnit = ...

    DecimeterPerMinute: SpeedUnit = ...

    DecimeterPerSecond: SpeedUnit = ...

    FootPerHour: SpeedUnit = ...

    FootPerMinute: SpeedUnit = ...

    FootPerSecond: SpeedUnit = ...

    InchPerHour: SpeedUnit = ...

    InchPerMinute: SpeedUnit = ...

    InchPerSecond: SpeedUnit = ...

    KilometerPerHour: SpeedUnit = ...

    KilometerPerMinute: SpeedUnit = ...

    KilometerPerSecond: SpeedUnit = ...

    Knot: SpeedUnit = ...

    Mach: SpeedUnit = ...

    MeterPerHour: SpeedUnit = ...

    MeterPerMinute: SpeedUnit = ...

    MeterPerSecond: SpeedUnit = ...

    MicrometerPerMinute: SpeedUnit = ...

    MicrometerPerSecond: SpeedUnit = ...

    MilePerHour: SpeedUnit = ...

    MillimeterPerHour: SpeedUnit = ...

    MillimeterPerMinute: SpeedUnit = ...

    MillimeterPerSecond: SpeedUnit = ...

    NanometerPerMinute: SpeedUnit = ...

    NanometerPerSecond: SpeedUnit = ...

    UsSurveyFootPerHour: SpeedUnit = ...

    UsSurveyFootPerMinute: SpeedUnit = ...

    UsSurveyFootPerSecond: SpeedUnit = ...

    YardPerHour: SpeedUnit = ...

    YardPerMinute: SpeedUnit = ...

    YardPerSecond: SpeedUnit = ...


# noinspection PyPep8Naming
class StandardVolumeFlowUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: StandardVolumeFlowUnit = ...

    StandardCubicCentimeterPerMinute: StandardVolumeFlowUnit = ...

    StandardCubicFootPerHour: StandardVolumeFlowUnit = ...

    StandardCubicFootPerMinute: StandardVolumeFlowUnit = ...

    StandardCubicFootPerSecond: StandardVolumeFlowUnit = ...

    StandardCubicMeterPerDay: StandardVolumeFlowUnit = ...

    StandardCubicMeterPerHour: StandardVolumeFlowUnit = ...

    StandardCubicMeterPerMinute: StandardVolumeFlowUnit = ...

    StandardCubicMeterPerSecond: StandardVolumeFlowUnit = ...

    StandardLiterPerMinute: StandardVolumeFlowUnit = ...


# noinspection PyPep8Naming
class StrainUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: StrainUnit = ...

    MicroStrain: StrainUnit = ...

    MilliStrain: StrainUnit = ...

    Percent: StrainUnit = ...

    Ratio: StrainUnit = ...


# noinspection PyPep8Naming
class TemperatureChangeRateUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: TemperatureChangeRateUnit = ...

    CentidegreeCelsiusPerSecond: TemperatureChangeRateUnit = ...

    DecadegreeCelsiusPerSecond: TemperatureChangeRateUnit = ...

    DecidegreeCelsiusPerSecond: TemperatureChangeRateUnit = ...

    DegreeCelsiusPerMinute: TemperatureChangeRateUnit = ...

    DegreeCelsiusPerSecond: TemperatureChangeRateUnit = ...

    HectodegreeCelsiusPerSecond: TemperatureChangeRateUnit = ...

    KilodegreeCelsiusPerSecond: TemperatureChangeRateUnit = ...

    MicrodegreeCelsiusPerSecond: TemperatureChangeRateUnit = ...

    MillidegreeCelsiusPerSecond: TemperatureChangeRateUnit = ...

    NanodegreeCelsiusPerSecond: TemperatureChangeRateUnit = ...


# noinspection PyPep8Naming
class TemperatureDeltaUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: TemperatureDeltaUnit = ...

    DegreeCelsius: TemperatureDeltaUnit = ...

    DegreeDelisle: TemperatureDeltaUnit = ...

    DegreeFahrenheit: TemperatureDeltaUnit = ...

    DegreeNewton: TemperatureDeltaUnit = ...

    DegreeRankine: TemperatureDeltaUnit = ...

    DegreeReaumur: TemperatureDeltaUnit = ...

    DegreeRoemer: TemperatureDeltaUnit = ...

    Kelvin: TemperatureDeltaUnit = ...

    MillidegreeCelsius: TemperatureDeltaUnit = ...


# noinspection PyPep8Naming
class TemperatureGradientUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: TemperatureGradientUnit = ...

    DegreeCelsiusPerKilometer: TemperatureGradientUnit = ...

    DegreeCelsiusPerMeter: TemperatureGradientUnit = ...

    DegreeFahrenheitPerFoot: TemperatureGradientUnit = ...

    KelvinPerMeter: TemperatureGradientUnit = ...


# noinspection PyPep8Naming
class TemperatureUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: TemperatureUnit = ...

    DegreeCelsius: TemperatureUnit = ...

    DegreeDelisle: TemperatureUnit = ...

    DegreeFahrenheit: TemperatureUnit = ...

    DegreeNewton: TemperatureUnit = ...

    DegreeRankine: TemperatureUnit = ...

    DegreeReaumur: TemperatureUnit = ...

    DegreeRoemer: TemperatureUnit = ...

    Kelvin: TemperatureUnit = ...

    MillidegreeCelsius: TemperatureUnit = ...

    SolarTemperature: TemperatureUnit = ...


# noinspection PyPep8Naming
class ThermalConductivityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ThermalConductivityUnit = ...

    BtuPerHourFootFahrenheit: ThermalConductivityUnit = ...

    WattPerMeterKelvin: ThermalConductivityUnit = ...


# noinspection PyPep8Naming
class ThermalResistanceUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: ThermalResistanceUnit = ...

    HourSquareFeetDegreeFahrenheitPerBtu: ThermalResistanceUnit = ...

    SquareCentimeterHourDegreeCelsiusPerKilocalorie: ThermalResistanceUnit = ...

    SquareCentimeterKelvinPerWatt: ThermalResistanceUnit = ...

    SquareMeterDegreeCelsiusPerWatt: ThermalResistanceUnit = ...

    SquareMeterKelvinPerKilowatt: ThermalResistanceUnit = ...

    SquareMeterKelvinPerWatt: ThermalResistanceUnit = ...


# noinspection PyPep8Naming
class TorquePerLengthUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: TorquePerLengthUnit = ...

    KilogramForceCentimeterPerMeter: TorquePerLengthUnit = ...

    KilogramForceMeterPerMeter: TorquePerLengthUnit = ...

    KilogramForceMillimeterPerMeter: TorquePerLengthUnit = ...

    KilonewtonCentimeterPerMeter: TorquePerLengthUnit = ...

    KilonewtonMeterPerMeter: TorquePerLengthUnit = ...

    KilonewtonMillimeterPerMeter: TorquePerLengthUnit = ...

    KilopoundForceFootPerFoot: TorquePerLengthUnit = ...

    KilopoundForceInchPerFoot: TorquePerLengthUnit = ...

    MeganewtonCentimeterPerMeter: TorquePerLengthUnit = ...

    MeganewtonMeterPerMeter: TorquePerLengthUnit = ...

    MeganewtonMillimeterPerMeter: TorquePerLengthUnit = ...

    MegapoundForceFootPerFoot: TorquePerLengthUnit = ...

    MegapoundForceInchPerFoot: TorquePerLengthUnit = ...

    NewtonCentimeterPerMeter: TorquePerLengthUnit = ...

    NewtonMeterPerMeter: TorquePerLengthUnit = ...

    NewtonMillimeterPerMeter: TorquePerLengthUnit = ...

    PoundForceFootPerFoot: TorquePerLengthUnit = ...

    PoundForceInchPerFoot: TorquePerLengthUnit = ...

    TonneForceCentimeterPerMeter: TorquePerLengthUnit = ...

    TonneForceMeterPerMeter: TorquePerLengthUnit = ...

    TonneForceMillimeterPerMeter: TorquePerLengthUnit = ...


# noinspection PyPep8Naming
class TorqueUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: TorqueUnit = ...

    GramForceCentimeter: TorqueUnit = ...

    GramForceMeter: TorqueUnit = ...

    GramForceMillimeter: TorqueUnit = ...

    KilogramForceCentimeter: TorqueUnit = ...

    KilogramForceMeter: TorqueUnit = ...

    KilogramForceMillimeter: TorqueUnit = ...

    KilonewtonCentimeter: TorqueUnit = ...

    KilonewtonMeter: TorqueUnit = ...

    KilonewtonMillimeter: TorqueUnit = ...

    KilopoundForceFoot: TorqueUnit = ...

    KilopoundForceInch: TorqueUnit = ...

    MeganewtonCentimeter: TorqueUnit = ...

    MeganewtonMeter: TorqueUnit = ...

    MeganewtonMillimeter: TorqueUnit = ...

    MegapoundForceFoot: TorqueUnit = ...

    MegapoundForceInch: TorqueUnit = ...

    NewtonCentimeter: TorqueUnit = ...

    NewtonMeter: TorqueUnit = ...

    NewtonMillimeter: TorqueUnit = ...

    PoundalFoot: TorqueUnit = ...

    PoundForceFoot: TorqueUnit = ...

    PoundForceInch: TorqueUnit = ...

    TonneForceCentimeter: TorqueUnit = ...

    TonneForceMeter: TorqueUnit = ...

    TonneForceMillimeter: TorqueUnit = ...


# noinspection PyPep8Naming
class TurbidityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: TurbidityUnit = ...

    NTU: TurbidityUnit = ...


# noinspection PyPep8Naming
class VitaminAUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: VitaminAUnit = ...

    InternationalUnit: VitaminAUnit = ...


# noinspection PyPep8Naming
class VolumeConcentrationUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: VolumeConcentrationUnit = ...

    CentilitersPerLiter: VolumeConcentrationUnit = ...

    CentilitersPerMililiter: VolumeConcentrationUnit = ...

    DecilitersPerLiter: VolumeConcentrationUnit = ...

    DecilitersPerMililiter: VolumeConcentrationUnit = ...

    DecimalFraction: VolumeConcentrationUnit = ...

    LitersPerLiter: VolumeConcentrationUnit = ...

    LitersPerMililiter: VolumeConcentrationUnit = ...

    MicrolitersPerLiter: VolumeConcentrationUnit = ...

    MicrolitersPerMililiter: VolumeConcentrationUnit = ...

    MillilitersPerLiter: VolumeConcentrationUnit = ...

    MillilitersPerMililiter: VolumeConcentrationUnit = ...

    NanolitersPerLiter: VolumeConcentrationUnit = ...

    NanolitersPerMililiter: VolumeConcentrationUnit = ...

    PartPerBillion: VolumeConcentrationUnit = ...

    PartPerMillion: VolumeConcentrationUnit = ...

    PartPerThousand: VolumeConcentrationUnit = ...

    PartPerTrillion: VolumeConcentrationUnit = ...

    Percent: VolumeConcentrationUnit = ...

    PicolitersPerLiter: VolumeConcentrationUnit = ...

    PicolitersPerMililiter: VolumeConcentrationUnit = ...


# noinspection PyPep8Naming
class VolumeFlowPerAreaUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: VolumeFlowPerAreaUnit = ...

    CubicFootPerMinutePerSquareFoot: VolumeFlowPerAreaUnit = ...

    CubicMeterPerSecondPerSquareMeter: VolumeFlowPerAreaUnit = ...


# noinspection PyPep8Naming
class VolumeFlowUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: VolumeFlowUnit = ...

    AcreFootPerDay: VolumeFlowUnit = ...

    AcreFootPerHour: VolumeFlowUnit = ...

    AcreFootPerMinute: VolumeFlowUnit = ...

    AcreFootPerSecond: VolumeFlowUnit = ...

    CentiliterPerDay: VolumeFlowUnit = ...

    CentiliterPerHour: VolumeFlowUnit = ...

    CentiliterPerMinute: VolumeFlowUnit = ...

    CentiliterPerSecond: VolumeFlowUnit = ...

    CubicCentimeterPerMinute: VolumeFlowUnit = ...

    CubicDecimeterPerMinute: VolumeFlowUnit = ...

    CubicFootPerHour: VolumeFlowUnit = ...

    CubicFootPerMinute: VolumeFlowUnit = ...

    CubicFootPerSecond: VolumeFlowUnit = ...

    CubicMeterPerDay: VolumeFlowUnit = ...

    CubicMeterPerHour: VolumeFlowUnit = ...

    CubicMeterPerMinute: VolumeFlowUnit = ...

    CubicMeterPerSecond: VolumeFlowUnit = ...

    CubicMillimeterPerSecond: VolumeFlowUnit = ...

    CubicYardPerDay: VolumeFlowUnit = ...

    CubicYardPerHour: VolumeFlowUnit = ...

    CubicYardPerMinute: VolumeFlowUnit = ...

    CubicYardPerSecond: VolumeFlowUnit = ...

    DeciliterPerDay: VolumeFlowUnit = ...

    DeciliterPerHour: VolumeFlowUnit = ...

    DeciliterPerMinute: VolumeFlowUnit = ...

    DeciliterPerSecond: VolumeFlowUnit = ...

    KiloliterPerDay: VolumeFlowUnit = ...

    KiloliterPerHour: VolumeFlowUnit = ...

    KiloliterPerMinute: VolumeFlowUnit = ...

    KiloliterPerSecond: VolumeFlowUnit = ...

    KilousGallonPerMinute: VolumeFlowUnit = ...

    LiterPerDay: VolumeFlowUnit = ...

    LiterPerHour: VolumeFlowUnit = ...

    LiterPerMinute: VolumeFlowUnit = ...

    LiterPerSecond: VolumeFlowUnit = ...

    MegaliterPerDay: VolumeFlowUnit = ...

    MegaukGallonPerSecond: VolumeFlowUnit = ...

    MicroliterPerDay: VolumeFlowUnit = ...

    MicroliterPerHour: VolumeFlowUnit = ...

    MicroliterPerMinute: VolumeFlowUnit = ...

    MicroliterPerSecond: VolumeFlowUnit = ...

    MilliliterPerDay: VolumeFlowUnit = ...

    MilliliterPerHour: VolumeFlowUnit = ...

    MilliliterPerMinute: VolumeFlowUnit = ...

    MilliliterPerSecond: VolumeFlowUnit = ...

    MillionUsGallonsPerDay: VolumeFlowUnit = ...

    NanoliterPerDay: VolumeFlowUnit = ...

    NanoliterPerHour: VolumeFlowUnit = ...

    NanoliterPerMinute: VolumeFlowUnit = ...

    NanoliterPerSecond: VolumeFlowUnit = ...

    OilBarrelPerDay: VolumeFlowUnit = ...

    OilBarrelPerHour: VolumeFlowUnit = ...

    OilBarrelPerMinute: VolumeFlowUnit = ...

    OilBarrelPerSecond: VolumeFlowUnit = ...

    UkGallonPerDay: VolumeFlowUnit = ...

    UkGallonPerHour: VolumeFlowUnit = ...

    UkGallonPerMinute: VolumeFlowUnit = ...

    UkGallonPerSecond: VolumeFlowUnit = ...

    UsGallonPerDay: VolumeFlowUnit = ...

    UsGallonPerHour: VolumeFlowUnit = ...

    UsGallonPerMinute: VolumeFlowUnit = ...

    UsGallonPerSecond: VolumeFlowUnit = ...


# noinspection PyPep8Naming
class VolumePerLengthUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: VolumePerLengthUnit = ...

    CubicMeterPerMeter: VolumePerLengthUnit = ...

    CubicYardPerFoot: VolumePerLengthUnit = ...

    CubicYardPerUsSurveyFoot: VolumePerLengthUnit = ...

    LiterPerKilometer: VolumePerLengthUnit = ...

    LiterPerMeter: VolumePerLengthUnit = ...

    LiterPerMillimeter: VolumePerLengthUnit = ...

    OilBarrelPerFoot: VolumePerLengthUnit = ...


# noinspection PyPep8Naming
class VolumetricHeatCapacityUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: VolumetricHeatCapacityUnit = ...

    BtuPerCubicFootDegreeFahrenheit: VolumetricHeatCapacityUnit = ...

    CaloriePerCubicCentimeterDegreeCelsius: VolumetricHeatCapacityUnit = ...

    JoulePerCubicMeterDegreeCelsius: VolumetricHeatCapacityUnit = ...

    JoulePerCubicMeterKelvin: VolumetricHeatCapacityUnit = ...

    KilocaloriePerCubicCentimeterDegreeCelsius: VolumetricHeatCapacityUnit = ...

    KilojoulePerCubicMeterDegreeCelsius: VolumetricHeatCapacityUnit = ...

    KilojoulePerCubicMeterKelvin: VolumetricHeatCapacityUnit = ...

    MegajoulePerCubicMeterDegreeCelsius: VolumetricHeatCapacityUnit = ...

    MegajoulePerCubicMeterKelvin: VolumetricHeatCapacityUnit = ...


# noinspection PyPep8Naming
class VolumeUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: VolumeUnit = ...

    AcreFoot: VolumeUnit = ...

    AuTablespoon: VolumeUnit = ...

    BoardFoot: VolumeUnit = ...

    Centiliter: VolumeUnit = ...

    CubicCentimeter: VolumeUnit = ...

    CubicDecimeter: VolumeUnit = ...

    CubicFoot: VolumeUnit = ...

    CubicHectometer: VolumeUnit = ...

    CubicInch: VolumeUnit = ...

    CubicKilometer: VolumeUnit = ...

    CubicMeter: VolumeUnit = ...

    CubicMicrometer: VolumeUnit = ...

    CubicMile: VolumeUnit = ...

    CubicMillimeter: VolumeUnit = ...

    CubicYard: VolumeUnit = ...

    Decaliter: VolumeUnit = ...

    DecausGallon: VolumeUnit = ...

    Deciliter: VolumeUnit = ...

    DeciusGallon: VolumeUnit = ...

    HectocubicFoot: VolumeUnit = ...

    HectocubicMeter: VolumeUnit = ...

    Hectoliter: VolumeUnit = ...

    HectousGallon: VolumeUnit = ...

    ImperialBeerBarrel: VolumeUnit = ...

    ImperialGallon: VolumeUnit = ...

    ImperialOunce: VolumeUnit = ...

    ImperialPint: VolumeUnit = ...

    KilocubicFoot: VolumeUnit = ...

    KilocubicMeter: VolumeUnit = ...

    KiloimperialGallon: VolumeUnit = ...

    Kiloliter: VolumeUnit = ...

    KilousGallon: VolumeUnit = ...

    Liter: VolumeUnit = ...

    MegacubicFoot: VolumeUnit = ...

    MegaimperialGallon: VolumeUnit = ...

    Megaliter: VolumeUnit = ...

    MegausGallon: VolumeUnit = ...

    MetricCup: VolumeUnit = ...

    MetricTeaspoon: VolumeUnit = ...

    Microliter: VolumeUnit = ...

    Milliliter: VolumeUnit = ...

    OilBarrel: VolumeUnit = ...

    UkTablespoon: VolumeUnit = ...

    UsBeerBarrel: VolumeUnit = ...

    UsCustomaryCup: VolumeUnit = ...

    UsGallon: VolumeUnit = ...

    UsLegalCup: VolumeUnit = ...

    UsOunce: VolumeUnit = ...

    UsPint: VolumeUnit = ...

    UsQuart: VolumeUnit = ...

    UsTablespoon: VolumeUnit = ...

    UsTeaspoon: VolumeUnit = ...


# noinspection PyPep8Naming
class WarpingMomentOfInertiaUnit(Enum, IComparable, IFormattable, IConvertible):

    value__: int = ...

    Undefined: WarpingMomentOfInertiaUnit = ...

    CentimeterToTheSixth: WarpingMomentOfInertiaUnit = ...

    DecimeterToTheSixth: WarpingMomentOfInertiaUnit = ...

    FootToTheSixth: WarpingMomentOfInertiaUnit = ...

    InchToTheSixth: WarpingMomentOfInertiaUnit = ...

    MeterToTheSixth: WarpingMomentOfInertiaUnit = ...

    MillimeterToTheSixth: WarpingMomentOfInertiaUnit = ...
