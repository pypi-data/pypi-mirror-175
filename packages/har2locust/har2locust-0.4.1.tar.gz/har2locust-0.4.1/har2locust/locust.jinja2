# note that any comments here will be removed during AST parsing
{{prefix}}
from {{baseuser_module}} import {{baseuser_class}}

class {{name}}({{baseuser_class}}):
    host = '{{host}}'
    {{-extra_class_text}}
    {%- if default_headers %}
    default_headers = {
        {%- for (key, value) in default_headers | sort %}
        '{{ key }}': '{{ value }}',
        {%- endfor %}
    }
    {%- endif %}

    @task
    def t(self):
        {% for request in requests -%}
        {% if request.rest -%}
        with self.rest("{{ request.method | upper }}", "{{ request.url }}"
        {%- if request.headers -%}, headers={
            {%- for (key, value) in request.headers | sort %}
            {%- if key|lower != "content-type" -%}
            '{{ key }}': '{{ value }}',
            {%- endif -%}    
            {%- endfor %}}
        {%- endif -%}
        {%- if request.post_data -%}, json={{ request.post_data }}
        {%- endif -%}
        {%- else -%}
        with self.client.{{ request.method }}("{{ request.url }}"
        {%- if request.headers -%}, headers={
            {%- for (key, value) in request.headers | sort %}
            '{{ key }}': '{{ value }}',
            {%- endfor %}}
        {%- endif -%}
        {%- if request.post_data -%}, data='{{ request.post_data }}'{%- endif -%}
        , catch_response=True
        {%- endif %}) as resp:
            pass
        {% endfor %}

{{postfix}}