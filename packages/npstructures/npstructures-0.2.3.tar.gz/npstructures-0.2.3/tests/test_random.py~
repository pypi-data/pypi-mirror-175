import numpy as np
import pytest
from npstructures import RaggedArray

@pytest.fixture
def random_array():
    shape = tuple(np.random.randint(1, 100, 2))
    return np.random.rand(shape[0]*shape[1]).reshape(shape)

def test_cumsum(random_array):
    ra = RaggedArray.from_numpy_array(random_array)
    cm = np.cumsum(ra, axis=-1)
    assert np.allclose(cm.to_numpy_array(), np.cumsum(random_array, axis=-1))

@pytest.mark.parametrize("reduction", ["sum", "mean", "std", "max", "min", "argmax", "argmin"])
def test_reduction(random_array, reduction):
    ra = RaggedArray.from_numpy_array(random_array)
    res = getattr(ra, reduction)(axis=-1)
    true = getattr(random_array, reduction)(axis=-1)
    assert np.allclose(res, true)
