# coding: utf-8

"""
    DLCM-Solution

    DLCM application wrapping all modules, All-In-One  # noqa: E501

    The version of the OpenAPI document: 2.1.1
    Contact: eresearch-opensource@unige.ch
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import dlcmapi_client
from dlcmapi_client.models.organizational_unit import OrganizationalUnit  # noqa: E501
from dlcmapi_client.rest import ApiException

class TestOrganizationalUnit(unittest.TestCase):
    """OrganizationalUnit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test OrganizationalUnit
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = dlcmapi_client.models.organizational_unit.OrganizationalUnit()  # noqa: E501
        if include_optional :
            return OrganizationalUnit(
                links = None, 
                closing_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                creation = dlcmapi_client.models.change_info.change-info(
                    when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    who = '0', ), 
                description = '0', 
                is_empty = True, 
                last_update = dlcmapi_client.models.change_info.change-info(
                    when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    who = '0', ), 
                name = '0', 
                open = True, 
                opening_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                res_id = '0', 
                url = '0'
            )
        else :
            return OrganizationalUnit(
        )

    def testOrganizationalUnit(self):
        """Test OrganizationalUnit"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
