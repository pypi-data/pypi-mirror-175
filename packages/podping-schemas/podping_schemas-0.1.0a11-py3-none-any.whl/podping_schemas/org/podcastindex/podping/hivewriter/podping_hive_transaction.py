# THIS FILE HAS BEEN GENERATED AUTOMATICALLY BY capnpy
# do not edit by hand
# generated on 2022-11-06 22:07
# cython: language_level=2

from capnpy import ptr as _ptr
from capnpy.struct_ import Struct as _Struct
from capnpy.struct_ import check_tag as _check_tag
from capnpy.struct_ import undefined as _undefined
from capnpy.enum import enum as _enum, fill_enum as _fill_enum
from capnpy.enum import BaseEnum as _BaseEnum
from capnpy.type import Types as _Types
from capnpy.segment.segment import Segment as _Segment
from capnpy.segment.segment import MultiSegment as _MultiSegment
from capnpy.segment.builder import SegmentBuilder as _SegmentBuilder
from capnpy.list import List as _List
from capnpy.list import PrimitiveItemType as _PrimitiveItemType
from capnpy.list import BoolItemType as _BoolItemType
from capnpy.list import TextItemType as _TextItemType
from capnpy.list import TextUnicodeItemType as _TextUnicodeItemType
from capnpy.list import StructItemType as _StructItemType
from capnpy.list import EnumItemType as _EnumItemType
from capnpy.list import VoidItemType as _VoidItemType
from capnpy.list import ListItemType as _ListItemType
from capnpy.anypointer import AnyPointer as _AnyPointer
from capnpy.util import text_bytes_repr as _text_bytes_repr
from capnpy.util import text_unicode_repr as _text_unicode_repr
from capnpy.util import data_repr as _data_repr
from capnpy.util import float32_repr as _float32_repr
from capnpy.util import float64_repr as _float64_repr
from capnpy.util import extend_module_maybe as _extend_module_maybe
from capnpy.util import check_version as _check_version
from capnpy.util import encode_maybe as _encode_maybe
__capnpy_id__ = 0xb804df1ba3cc0461
__capnpy_version__ = '0.9.0'
__capnproto_version__ = '0.5.3.1'
# schema compiled with --no-version-check, skipping the call to _check_version
import podping_schemas.org.podcastindex.podping.hivewriter.podping_medium as _podping_medium_capnp
import podping_schemas.org.podcastindex.podping.hivewriter.podping_reason as _podping_reason_capnp
from capnpy.schema import CodeGeneratorRequest as _CodeGeneratorRequest
from capnpy.annotate import Options as _Options
from capnpy.reflection import ReflectionData as _ReflectionData
class _podping_hive_transaction_ReflectionData(_ReflectionData):
    request = _CodeGeneratorRequest.from_buffer(_Segment(b"\x00\x00\x00\x00\x00\x00\x02\x00\x05\x00\x00\x00\x17\x02\x00\x00\xf9\x04\x00\x00\x1f\x00\x00\x00\x18\x00\x00\x00\x05\x00\x06\x00\xfe&\xb6\xc8\x1f\x8f\xda\xedC\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf1\x00\x00\x00J\x02\x00\x00\x15\x01\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x002\xb2\x86I\xfe$\xc8\xf4e\x00\x00\x00\x01\x00\x02\x00a\x04\xcc\xa3\x1b\xdf\x04\xb8\x02\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x00\x00\xe2\x03\x00\x00=\x01\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x009\x01\x00\x00\x1f\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x89\xbc\xec\xac\xdf\x1f\x9a\xd9I\x00\x00\x00\x02\x00\x00\x00\xebdQ\xa4\xe4\xdf\xcc\x9a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00a\x02\x00\x00\xba\x02\x00\x00\x89\x02\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x02\x00\x00O\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xebdQ\xa4\xe4\xdf\xcc\x9aC\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x99\x02\x00\x00J\x02\x00\x00\xbd\x02\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xa2v\xa5u\x16\xe8\xaaI\x00\x00\x00\x02\x00\x00\x00\xfe&\xb6\xc8\x1f\x8f\xda\xed\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa9\x02\x00\x00\xba\x02\x00\x00\xd1\x02\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xcd\x02\x00\x00o\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00a\x04\xcc\xa3\x1b\xdf\x04\xb8_\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb5\x03\x00\x00*\x03\x00\x00\xe5\x03\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00podping_schemas/org/podcastindex/podping/hivewriter/podping_medium.capnp\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x01\x00\x01\x00\x80\xa2v\xa5u\x16\xe8\xaa\x01\x00\x00\x00r\x00\x00\x00PodpingMedium\x00\x00\x00/github/workspace/podping_schemas/org/podcastindex/podping/hivewriter/podping_hive_transaction.capnp:PodpingHiveTransaction\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x14\x00\x00\x00\x03\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x03\x00\x01\x00\x84\x00\x00\x00\x02\x00\x01\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x03\x00\x01\x00\x88\x00\x00\x00\x02\x00\x01\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x03\x00\x01\x00\x9c\x00\x00\x00\x02\x00\x01\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x01\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x03\x00\x01\x00\xa4\x00\x00\x00\x02\x00\x01\x00\x04\x00\x00\x00\x01\x00\x00\x00\x00\x00\x01\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x03\x00\x01\x00\xac\x00\x00\x00\x02\x00\x01\x00medium\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x80\xa2v\xa5u\x16\xe8\xaa\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00reason\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x89\xbc\xec\xac\xdf\x1f\x9a\xd9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00iris\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x01\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00hiveTxId\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00hiveBlockNum\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00podping_schemas/org/podcastindex/podping/hivewriter/podping_reason.capnp:PodpingReason\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x0c\x00\x00\x00\x01\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00update\x00\x00live\x00\x00\x00\x00liveEnd\x00podping_schemas/org/podcastindex/podping/hivewriter/podping_reason.capnp\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x01\x00\x01\x00\x89\xbc\xec\xac\xdf\x1f\x9a\xd9\x01\x00\x00\x00r\x00\x00\x00PodpingReason\x00\x00\x00podping_schemas/org/podcastindex/podping/hivewriter/podping_medium.capnp:PodpingMedium\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00<\x00\x00\x00\x01\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x002\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00mixed\x00\x00\x00podcast\x00podcastL\x00\x00\x00\x00\x00\x00\x00\x00music\x00\x00\x00musicL\x00\x00video\x00\x00\x00videoL\x00\x00film\x00\x00\x00\x00filmL\x00\x00\x00audiobook\x00\x00\x00\x00\x00\x00\x00audiobookL\x00\x00\x00\x00\x00\x00newsletter\x00\x00\x00\x00\x00\x00newsletterL\x00\x00\x00\x00\x00blog\x00\x00\x00\x00blogL\x00\x00\x00/github/workspace/podping_schemas/org/podcastindex/podping/hivewriter/podping_hive_transaction.capnp\x00\x00\x00\x00\x04\x00\x00\x00\x01\x00\x01\x002\xb2\x86I\xfe$\xc8\xf4\x01\x00\x00\x00\xba\x00\x00\x00PodpingHiveTransaction\x00\x00\x04\x00\x00\x00\x01\x00\x02\x00a\x04\xcc\xa3\x1b\xdf\x04\xb8\x05\x00\x00\x00*\x03\x00\x005\x00\x00\x00'\x00\x00\x00/github/workspace/podping_schemas/org/podcastindex/podping/hivewriter/podping_hive_transaction.capnp\x00\x00\x00\x00\x08\x00\x00\x00\x01\x00\x01\x00\xfe&\xb6\xc8\x1f\x8f\xda\xed\t\x00\x00\x00R\x02\x00\x00\xebdQ\xa4\xe4\xdf\xcc\x9a)\x00\x00\x00R\x02\x00\x00/podping_schemas/org/podcastindex/podping/hivewriter/podping_medium.capnp\x00\x00\x00\x00\x00\x00\x00/podping_schemas/org/podcastindex/podping/hivewriter/podping_reason.capnp\x00\x00\x00\x00\x00\x00\x00"), 8, 0, 2)
    default_options = _Options.from_buffer(_Segment(b'\x02\x00\x02\x00\x02\x00\x03\x00'), 0, 1, 0)
    pyx = False
_reflection_data = _podping_hive_transaction_ReflectionData()

#### FORWARD DECLARATIONS ####

class PodpingHiveTransaction(_Struct): pass
PodpingHiveTransaction.__name__ = 'PodpingHiveTransaction'


#### DEFINITIONS ####

@PodpingHiveTransaction.__extend__
class PodpingHiveTransaction(_Struct):
    __capnpy_id__ = 0xf4c824fe4986b232
    __static_data_size__ = 2
    __static_ptrs_size__ = 2
    
    
    @property
    def medium(self):
        # no union check
        value = self._read_int16(0)
        if 0 != 0:
            value = (value ^ 0)
        return _podping_medium_capnp.PodpingMedium._new(value)
    
    @property
    def reason(self):
        # no union check
        value = self._read_int16(2)
        if 0 != 0:
            value = (value ^ 0)
        return _podping_reason_capnp.PodpingReason._new(value)
    
    @property
    def iris(self):
        # no union check
        return self._read_list(0, _TextUnicodeItemType(_Types.text))
    
    def get_iris(self):
        res = self.iris
        if res is None:
            return _List.from_buffer(b'', 0, 0, 0, _TextUnicodeItemType(_Types.text))
        return res
    
    def has_iris(self):
        ptr = self._read_fast_ptr(0)
        return ptr != 0
    
    @property
    def hiveTxId(self):
        # no union check
        return self._read_text_unicode(8)
    
    def get_hiveTxId(self):
        return self._read_text_unicode(8, default_=b"")
    
    def has_hiveTxId(self):
        ptr = self._read_fast_ptr(8)
        return ptr != 0
    
    @property
    def hiveBlockNum(self):
        # no union check
        value = self._read_primitive(8, ord(b'Q'))
        if 0 != 0:
            value = value ^ 0
        return value
    
    @staticmethod
    def __new(medium=0, reason=0, iris=None, hiveTxId=None, hiveBlockNum=0):
        builder = _SegmentBuilder()
        pos = builder.allocate(32)
        builder.write_int16(pos + 0, medium)
        builder.write_int16(pos + 2, reason)
        builder.copy_from_list(pos + 16, _TextUnicodeItemType(_Types.text), iris)
        builder.alloc_text(pos + 24, _encode_maybe(hiveTxId))
        builder.write_uint64(pos + 8, hiveBlockNum)
        return builder.as_string()
    
    def __init__(self, medium=0, reason=0, iris=None, hiveTxId=None, hiveBlockNum=0):
        _buf = PodpingHiveTransaction.__new(medium, reason, iris, hiveTxId, hiveBlockNum)
        self._init_from_buffer(_buf, 0, 2, 2)
    
    def shortrepr(self):
        parts = []
        parts.append("medium = %s" % self.medium)
        parts.append("reason = %s" % self.reason)
        if self.has_iris(): parts.append("iris = %s" % self.get_iris().shortrepr())
        if self.has_hiveTxId(): parts.append("hiveTxId = %s" % _text_unicode_repr(self.get_hiveTxId()))
        parts.append("hiveBlockNum = %s" % self.hiveBlockNum)
        return "(%s)" % ", ".join(parts)

_PodpingHiveTransaction_list_item_type = _StructItemType(PodpingHiveTransaction)


_extend_module_maybe(globals(), modname=__name__)