name: Package ci-cd

on:
  push:
    branches: ["main"]
    tags:
    - 'v*'
    # runs both on pushes and tag-pushes to main
  workflow_dispatch:


jobs:
  build:

    runs-on: ubuntu-latest
    # for use of several python versions
    # strategy:
    #   matrix:
    #     python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
    #   - name: Set up Python ${{ matrix.python-version }}
    #     uses: actions/setup-python@v4
    #     with:
    #       python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install build
          pip install twine
          pip install wheel
          pip install scipy
          pip install numpy
          pip install sympy
          pip install --upgrade pip setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint / flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build & install fpex0
        run: |
          python3 -m build --wheel
          pip install dist/*.whl
      - name: Test / pytest
        run: |
          pytest tests/

      # add: documentation; build and update on website

  deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    # runs only on pushing a git tag
    
    needs: build
    # only run if build has been successful

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install twine
          pip install scipy
          pip install numpy
          pip install sympy
      - name: Build package
        run: python -m build
      
      - name: Check dist / will pypi accept long-description?
        run: |
          twine check dist/*
      
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          packages_dir: fpex0/dist/
          repository_url: https://test.pypi.org/legacy/
      - name: Test install from TestPyPI
        run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            fpex0
