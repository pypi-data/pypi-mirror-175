# -*- coding: utf-8 -*-
from setuptools import setup

modules = \
['strprofiler']
install_requires = \
['numpy>=1.23.3,<2.0.0',
 'openpyxl>=3.0.10,<4.0.0',
 'pandas>=1.4.3,<2.0.0',
 'rich-click>=1.5.2,<2.0.0']

entry_points = \
{'console_scripts': ['strprofiler = strprofiler:strprofiler']}

setup_kwargs = {
    'name': 'strprofiler',
    'version': '0.1.1',
    'description': 'A simple python utility to compare short tandem repeat (STR) profiles.',
    'long_description': '# strprofiler\n\n[![Coverage Status](https://coveralls.io/repos/github/j-andrews7/strprofiler/badge.svg?branch=main)](https://coveralls.io/github/j-andrews7/strprofiler?branch=main)\n[![PyPI version](https://badge.fury.io/py/strprofiler.svg)](https://badge.fury.io/py/strprofiler)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/strprofiler.svg)](https://pypi.python.org/pypi/strprofiler/)\n[![PyPI license](https://img.shields.io/pypi/l/strprofiler.svg)](https://pypi.python.org/pypi/strprofiler/)\n\n**strprofiler** is a simple python utility to compare short tandem repeat (STR) profiles. In particular, it is designed to aid research labs in comparing models (e.g. cell lines & xenografts) generated from primary tissue samples to ensure contamination has not occurred. It includes basic checks for sample mixing and contamination.\n\n**strprofiler is intended only for research purposes.**\n\nFor each STR profile provided, **strprofiler** will generate a sample-specific report that includes the following similarity scores as compared to every other profile:\n\n[Tanabe, AKA the Sørenson-Dice coefficient](https://www.doi.org/10.11418/jtca1981.18.4_329):\n\n$$ score = \\frac{2 * no.shared.alleles}{no.query.alleles + no.reference.alleles} $$\n\n[Masters (vs. query)](https://www.ncbi.nlm.nih.gov/pubmed/11416159): \n\n$$ score = \\frac{no.shared.alleles}{no.query.alleles} $$\n\n[Masters (vs. reference)](https://www.ncbi.nlm.nih.gov/pubmed/11416159): \n\n$$ score = \\frac{no.shared.alleles}{no.reference.alleles} $$\n\nAmelogenin is not included in the score computation by default but can be included by passing the `--score_amel` flag.\n\n## Installation\n\n**strprofiler** is available on PyPI and can be installed with pip:\n\n```bash\npip install strprofiler\n```\n\n## Usage\n\n**strprofiler** can be run directly from the command line. \n\n`strprofiler -sm "SampleMap_exp.csv" -scol "Sample Name" -o ./strprofiler_output STR1.xlsx STR2.csv STR3.txt`\n\nFull usage information can be found by running `strprofiler --help`.\n\n```bash\n Usage: strprofiler [OPTIONS] INPUT_FILES...   \n\n STRprofiler compares STR profiles to each other.  \n\n╭─ Options ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ --tan_threshold    -tanth   FLOAT        Minimum Tanabe score to report as potential matches in summary table. [default: 80]                          │\n│ --mas_q_threshold  -masqth  FLOAT        Minimum Masters (vs. query) score to report as potential matches in summary table. [default: 80]             │\n│ --mas_r_threshold  -masrth  FLOAT        Minimum Masters (vs. reference) score to report as potential matches in summary table. [default: 80]         │\n│ --mix_threshold    -mix     INTEGER      Number of markers with >= 2 alleles allowed before a sample is flagged for potential mixing. [default: 3]    │\n│ --sample_map       -sm      PATH         Path to sample map in csv format for renaming. First column should be sample names as given                  |\n|                                            in STR file(s),  second should be new names to assign. No header.                                          │\n│ --amel_col         -acol    TEXT         Name of Amelogenin column in STR file(s). [default: AMEL]                                                    │\n│ --sample_col       -scol    TEXT         Name of sample column in STR file(s). [default: Sample]                                                      │\n│ --marker_col       -mcol    TEXT         Name of marker column in STR file(s). Only used if format is \'wide\'. [default: Marker]                       │\n│ --penta_fix        -pfix                 Whether to try to harmonize PentaE/D allele spelling. [default: True]                                        │\n│ --score_amel       -amel                 Use Amelogenin for similarity scoring. [default: False]                                                      │\n│ --output_dir       -o       PATH         Path to the output directory. [default: ./STRprofiler]                                                       │\n│ --version                                Show the version and exit.                                                                                   │\n│ --help                                   Show this message and exit.                                                                                  │\n╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n```\n\n## Input Files(s)\n\n**strprofiler** can take either a single STR file or multiple STR files as input. These files can be csv, tsv, tab-separated text, or xlsx (first sheet used) files. The STR file(s) should be in either \'wide\' or \'long\' format. The long format expects all columns to map to the markers except for the designated sample name column with each row reflecting a different profile, e.g.:\n\n| Sample | D1S1656 |  DYS391 | D3S1358 | D2S441 | D16S539 | D5S818 | D8S1179 | D22S1045 | D18S51 |\n|:------:|:-------:|:-------:|:-------:|:------:|:-------:|:------:|:-------:|:--------:|:------:|\n| Line1  |   12,14 |      12 |      13 |  12,14 |    17.3 |  16,17 |    18.3 |          |  17,11 |\n| Line2  |   12,14 | 11.3,12 |   13,15 |  12,14 |    17.3 |  16,17 |    18.3 |          |  17,11 |\n| ...    |         |         |         |        |         |        |         |          |        |\n\nThe wide format expects a line for each marker for each sample, e.g.:\n\n|  Sample Name |   Marker  |  Allele   1 |  Size 1 |  Height   1 |  Allele   2 |  Size 2 |  Height   2 |  Allele   3 |\n|:------------:|:---------:|:-----------:|:-------:|:-----------:|:-----------:|:-------:|:-----------:|:-----------:|\n| Sample1      |  DYS391   |             |         |             |             |         |             |             |\n| Sample1      |  D3S1358  | 16          | 128.29  | 8268        | 18          | 136.84  | 5467        | 16          |\n| Sample1      |  D16S539  | 12          | 110.7   | 9660        | 13          | 115.17  | 5215        |             |\n| Sample1      |  Penta D  | 9           | 415.04  | 5099        | 13          | 435.88  | 9426        |             |\n| Sample1      |  D22S1045 | 15          | 455.95  | 13504       | 17          | 462.06  | 6186        |             |\n| Sample1      |  Penta E  | 11          | 397.7   | 7420        | 14          | 412.02  | 5986        |             |\n| Sample1      |  D18S51   | 12          | 153.72  | 9134        | 16          | 170.48  | 10501       |             |\n| Sample1      |  D2S1338  | 20          | 263.91  | 3209        | 21          | 267.97  | 3834        |             |\n| Sample1      |  TH01     | 7           | 85.33   | 8305        | 9.3         | 97.43   | 7853        |             |\n| Sample1      |  D7S820   | 10          | 292.51  | 12340       | 14          | 308.71  | 11784       |             |\n| Sample1      |  D12S391  | 15          | 141.53  | 12870       | 18.3        | 157.12  | 13731       |             |\n| Sample1      |  AMEL     |  X          | 81.97   | 16696       |             |         |             |             |\n| Sample1      |  D10S1248 | 16          | 283.82  | 8469        |             |         |             |             |\n| Sample1      |  D13S317  | 12          | 328.21  | 7079        |             |         |             |             |\n| Sample1      |  D21S11   | 32.2        | 239.67  | 19231       |             |         |             |             |\n| Sample1      |  TPOX     | 11          | 424.02  | 12239       |             |         |             |             |\n| Sample1      |  D19S433  | 14          | 228.37  | 14273       |             |         |             |             |\n| Sample1      |  FGA      | 23          | 302.23  | 14599       |             |         |             |             |\n| Sample2      |  D16S539  | 9           | 97.59   | 9286        | 11          | 106.43  | 8592        |             |\n| Sample2      |  TH01     | 9.3         | 97.45   | 5920        |             |         |             |             |\n| Sample2      |  D8S1179  | 13          | 101.1   | 26414       |             |         |             |             |\n| Sample2      |  AMEL     |  X          | 82.1    | 7476        |  Y          | 88.34   | 8029        |             |\n| Sample2      |  D3S1358  | 14          | 119.87  | 10146       | 15          | 124.14  | 10160       | 19          |\n| Sample2      |  D18S51   | 12          | 153.8   | 9316        | 18          | 178.79  | 9182        | 19          |\n| Sample2      |  Penta D  | 10          | 420.13  | 7693        | 11          | 425.25  | 7945        | 12          |\n| Sample2      |  vWA      | 17          | 156.9   | 7953        | 18          | 160.86  | 8230        |             |\n| Sample2      |  TPOX     | 9           | 416     | 6596        | 11          | 424.02  | 5304        |             |\n| Sample2      |  D12S391  | 21          | 166.75  | 13481       | 22          | 170.9   | 14232       |             |\n| Sample2      |  D22S1045 | 15          | 455.95  | 14310       | 17          | 462.06  | 10898       |             |\n| Sample2      |  D2S441   | 14          | 236.24  | 18628       |             |         |             |             |\n| Sample2      |  DYS391   | 10          | 468.83  | 6722        |             |         |             |             |\n| Sample2      |  FGA      | 21          | 294.67  | 11941       |             |         |             |             |\n\nIn this format, the `marker_col` must be specified. Only columns beginning with "Allele" will be used to parse the alleles for each sample/marker. Any other size or height columns will be ignored.\n\n## Output Files\n\n**strprofiler** generates two types of output files. The first is a summary file, which contains the top hits for each sample above the specified scoring thresholds. This file provides a useful overview in addition to a flag to identify samples with potential mixing for closer inspection. In the output directory, this file will be named `full_summary.strprofiler.YYYYMMDD.HH_MM_SS.csv` where the date and time are the time the program was run.\n\nIn addition to the marker columns, the summary file contains the following columns:\n\n| **Column Name**           | **Description**                                                                      |\n|---------------------------|--------------------------------------------------------------------------------------|\n| **mixed**                 | Flag to indicate sample mixing.                                                      |\n| **top_hit**               | Name and Tanabe score of top match to sample.                                        |\n| **next_best**             | Name and Tanabe score of next best match to sample.                                  |\n| **tanabe_matches**        | Name and Tanabe score of matches above scoring threshold to sample.                  |\n| **masters_query_matches** | Name and Masters (vs. query) score of matches above scoring threshold to sample.     |\n| **masters_ref_matches**   | Name and Masters (vs. reference) score of matches above scoring threshold to sample. |\n\nThe second is a sample-specific comparison file, which contains the results of the comparison between the query sample and all other provided samples. These files are generated for each STR profile provided in the input file(s) and named after the query sample in question. For example, if the input file contains a sample named `Sample1`, the output file will be named `Sample1.strprofiler.YYYYMMDD.HH_MM_SS.csv`.\n\nIn addition to the marker columns, this output contains the following columns:\n\n| **Column Name**         | **Description**                                              |\n|-------------------------|--------------------------------------------------------------|\n| **mixed**               | Flag to indicate sample mixing.                              |\n| **query_sample**        | Flag to indicate query sample.                               |\n| **n_shared_markers**    | Number of shared markers between query and reference sample. |\n| **n_shared_alleles**    | Number of shared alleles between query and reference sample. |\n| **n_query_alleles**     | Total number of alleles in query sample.                     |\n| **n_reference_alleles** | Total number of alleles in reference sample.                 |\n| **tanabe_score**        | Tanabe similarity score.                                     |\n| **masters_query_score** | Masters (vs query) similarity score.                         |\n| **masters_ref_score**   | Masters (vs reference) similarity score.                     |\n\n## Contributing\nYou can contribute by creating [issues](https://github.com/j-andrews7/strprofiler/issues) to highlight bugs and make suggestions for additional features. [Pull requests](https://github.com/j-andrews7/strprofiler/pulls) are also very welcome.\n\n## License\n\n**strprofiler** is released on the MIT license. You are free to use, modify, or redistribute it in almost any way, provided you state changes to the code, disclose the source, and use the same license. It is released with zero warranty for any purpose and I retain no liability for its use. [Read the full license](https://github.com/j-andrews7/strprofiler/blob/master/LICENSE) for additional details.\n\n',
    'author': 'Jared Andrews',
    'author_email': None,
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/j-andrews7/strprofiler',
    'py_modules': modules,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
