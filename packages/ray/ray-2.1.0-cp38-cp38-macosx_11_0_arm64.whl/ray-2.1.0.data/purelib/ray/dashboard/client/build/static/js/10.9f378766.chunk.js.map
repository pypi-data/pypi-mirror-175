{"version":3,"sources":["pages/actor/index.tsx","service/actor.ts"],"names":["useStyles","makeStyles","theme","root","padding","spacing","width","Actors","classes","useState","autoRefresh","setAutoRefresh","actors","setActors","dayjs","timeStamp","setTimeStamp","queryActor","get","then","res","data","useEffect","tmo","refreshActor","nowTime","setTimeout","clearTimeout","className","TitleCard","title","Grid","container","alignItems","item","Switch","checked","onChange","target","format","ActorTable"],"mappings":"6OAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAASF,EAAMG,QAAQ,GACvBC,MAAO,YAsDIC,UAlDA,WACb,IAAMC,EAAUR,IAChB,EAAsCS,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAuC,IAAnE,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAkCJ,mBAASK,OAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAa,kBChBZC,YAQJ,kBDSWC,MAAK,SAACC,GAAS,IAAD,KACxB,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAKC,YAAT,iBAAI,EAAWA,YAAf,aAAI,EAAiBT,SACnBC,EAAUO,EAAIC,KAAKA,KAAKT,YAuB9B,OAnBAU,qBAAU,WACR,IAAIC,EAaJ,OAZqB,SAAfC,IACJ,IAAMC,EAAUX,MAChBG,IAAaE,MAAK,WAChBH,EAAaS,GACTf,IACFa,EAAMG,WAAWF,EAAc,SAKrCA,GAEO,WACLG,aAAaJ,MAEd,CAACb,IAGF,yBAAKkB,UAAWpB,EAAQL,MACtB,kBAAC0B,EAAA,EAAD,CAAWC,MAAM,UACf,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,UACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GAAV,gBACgB,IACd,kBAACC,EAAA,EAAD,CACEC,QAAS1B,EACT2B,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,QAAb,OAA6BzB,EAAeyB,OAG1D,kBAACL,EAAA,EAAD,CAAMG,MAAI,GAAEnB,EAAUwB,OAAO,yBAE/B,kBAACC,EAAA,EAAD,CAAY5B,OAAQA","file":"static/js/10.9f378766.chunk.js","sourcesContent":["import { Grid, makeStyles, Switch } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport React, { useEffect, useState } from \"react\";\nimport ActorTable from \"../../components/ActorTable\";\nimport TitleCard from \"../../components/TitleCard\";\nimport { getActors } from \"../../service/actor\";\nimport { Actor } from \"../../type/actor\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n}));\n\nconst Actors = () => {\n  const classes = useStyles();\n  const [autoRefresh, setAutoRefresh] = useState(true);\n  const [actors, setActors] = useState<{ [actorId: string]: Actor }>({});\n  const [timeStamp, setTimeStamp] = useState(dayjs());\n  const queryActor = () =>\n    getActors().then((res) => {\n      if (res?.data?.data?.actors) {\n        setActors(res.data.data.actors);\n      }\n    });\n\n  useEffect(() => {\n    let tmo: NodeJS.Timeout;\n    const refreshActor = () => {\n      const nowTime = dayjs();\n      queryActor().then(() => {\n        setTimeStamp(nowTime);\n        if (autoRefresh) {\n          tmo = setTimeout(refreshActor, 4000);\n        }\n      });\n    };\n\n    refreshActor();\n\n    return () => {\n      clearTimeout(tmo);\n    };\n  }, [autoRefresh]);\n\n  return (\n    <div className={classes.root}>\n      <TitleCard title=\"ACTORS\">\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            Auto Refresh:{\" \"}\n            <Switch\n              checked={autoRefresh}\n              onChange={({ target: { checked } }) => setAutoRefresh(checked)}\n            />\n          </Grid>\n          <Grid item>{timeStamp.format(\"YYYY-MM-DD HH:mm:ss\")}</Grid>\n        </Grid>\n        <ActorTable actors={actors} />\n      </TitleCard>\n    </div>\n  );\n};\n\nexport default Actors;\n","import { Actor } from \"../type/actor\";\nimport { get } from \"./requestHandlers\";\n\nexport const getActors = () => {\n  return get<{\n    result: boolean;\n    message: string;\n    data: {\n      actors: {\n        [actorId: string]: Actor;\n      };\n    };\n  }>(\"logical/actors\");\n};\n"],"sourceRoot":""}