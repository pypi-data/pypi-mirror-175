Metadata-Version: 2.1
Name: scip
Version: 0.1.12
Summary: Scalable Cytometry Image Processing (SCIP) is an open-source tool that implements an image
Home-page: https://github.com/ScalableCytometryImageProcessing/SCIP
Author: Maxim Lippeveld
Author-email: maxim.lippeveld@ugent.be
Maintainer: Maxim Lippeveld
License: GPL-2.0-or-later
Project-URL: Documentation, https://scalable-cytometry-image-processing.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/ScalableCytometryImageProcessing/SCIP
Project-URL: Tracker, https://github.com/ScalableCytometryImageProcessing/SCIP/issues
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Scientific/Engineering :: Image Processing
Requires-Python: >=3.8
Description-Content-Type: text/markdown; chartset=UTF-8
Provides-Extra: mpi
Provides-Extra: cellpose
Provides-Extra: czi
Provides-Extra: jobqueue
Provides-Extra: dev
License-File: LICENSE

![SCIP logo](docs/source/logo.png)

# SCIP: Scalable Cytometry Image Processing

![main workflow badge](https://github.com/ScalableImagingPipeline/dask-pipeline/actions/workflows/main.yml/badge.svg) [![Documentation Status](https://readthedocs.org/projects/scalable-cytometry-image-processing/badge/?version=latest)](https://scalable-cytometry-image-processing.readthedocs.io/en/latest/?badge=latest) [![codecov](https://codecov.io/gh/ScalableCytometryImageProcessing/SCIP/branch/main/graph/badge.svg?token=6RYKJ8CLU0)](https://codecov.io/gh/ScalableCytometryImageProcessing/SCIP)

Scalable Cytometry Image Processing (SCIP) is an open-source tool that implements
an image processing pipeline on top of Dask, a distributed computing framework written in Python.
SCIP performs normalization, image segmentation and masking, and feature extraction.

Check the [docs](https://readthedocs.org/projects/scalable-cytometry-image-processing) for
installation and usage instructions, and API documentation.

## Development

### Generating documentation

For publishing online:
```
cd docs
make clean
make html
```

For development with live reloading:
```
cd docs
make livehtml
```

### Generate release changelog
```
git log v{previous version tag}..HEAD --oneline | xclip -sel clip
```
