import{_ as n}from"./confirm-dialog.ffa801be.js";import{b as i,q as o,r as l,e as d,n as u}from"./main.a046e816.js";import{c as _}from"./confirm-footer.2f15428c.js";import"./index.3036afcc.js";const h=[{title:"Libraries",tasks:[{value:"poll",text:"Poll All Libraries",desc:"Update Libraries if changes detected"},{value:"poll_force",text:"Update All Libraries",desc:"Forcibly update all the comics in all libraries",confirm:"This can take a long time"}]},{title:"Covers",tasks:[{value:"purge_comic_covers",text:"Remove Comic Covers",desc:"from every library",confirm:"Are you sure?"}]},{title:"Search",tasks:[{value:"search_index_update",text:"Update Search Index",desc:"with recently changed comics"},{value:"search_index_rebuild",text:"Rebuild Search Index",desc:"Delete and rebuild the search index from scratch",confirm:"This can take a long time"}]},{title:"Database",tasks:[{value:"db_vacuum",text:"Compact Database",desc:"Run the sqlite3 vacuum pragma. Runs nightly"},{value:"db_backup",text:"Backup Database",desc:"Runs nightly"},{value:"db_search_sync",text:"Sync Search Index to DB",desc:"Check to see if this database matches the current search index. If there is a mismatch, rebuild the search index. Runs on startup."},{value:"watchdog_sync",text:"Sync Watchdog with DB",desc:"Ensure the Watchdog file watcher is enabled per database preferences for each library"}]},{title:"Codex Software",tasks:[{value:"codex_update",text:"Update Codex",desc:"If Codex updates to a new version, it will restart",confirm:"Are you sure?"},{value:"codex_restart",text:"Restart Codex Server",desc:"Immediately",confirm:"Are you sure?"}]},{title:"Notify",tasks:[{value:"notify_library_changed",text:"Notify Library Changed ",desc:"Signal all clients that the libraries have changed and the browser should fetch new data."}]},{title:"Cleanup",tasks:[{value:"cleanup_queries",text:"Clean Up Search Cache",desc:"Remove old cached search queries. Runs nightly"},{value:"cleanup_fks",text:"Remove Orphan Tags",desc:"After deleting comics, unused linked objects remain in case new comics use the. Runs nightly."},{value:"cleanup_covers",text:"Remove Orphan Covers",desc:"from comics that no longer exist. Runs nightly."},{value:"librarian_clear_status",text:"Clear Librarian Statuses",desc:"Mark all Librarian tasks finished."}]}];const m={name:"AdminTasksTab",components:{ConfirmDialog:n},data(){return{tasks:h}},computed:{...i(o,{formSuccess:r=>r.form.success,formErrors:r=>r.form.errors})},methods:{...l(d,["librarianTask"])}};var f=function(){var e=this,t=e._self._c;return t("div",{attrs:{id:"tasks"}},[t("div",[t("span",{attrs:{id:"lastTaskLabel"}},[e._v("Last Task Queued:")]),t("span",[e.formSuccess?t("span",{attrs:{id:"success"}},[e._v(e._s(e.formSuccess))]):e.formErrors&&e.formErrors.length>0?t("span",{attrs:{id:"error"}},e._l(e.formErrors,function(s){return t("span",{key:s},[e._v(e._s(s))])}),0):t("span",{attrs:{id:"noRecentTask"}},[e._v("No recent task")])])]),e._l(e.tasks,function(s){return t("div",{key:s.title,staticClass:"taskGroup",attrs:{"fixed-header":""}},[t("h3",[e._v(" "+e._s(s.title)+" ")]),e._l(s.tasks,function(a){return t("div",{key:a.value,staticClass:"trow",class:{selected:!1}},[t("div",{staticClass:"taskBox"},[a.confirm?t(n,{attrs:{"button-text":a.text,"title-text":a.text,"object-name":a.confirm,"confirm-text":"Confirm"},on:{confirm:function(c){return e.librarianTask(a.value,a.text)}}}):t(_,{attrs:{block:"",ripple:""},on:{click:function(c){return e.librarianTask(a.value,a.text)}}},[e._v(" "+e._s(a.text)+" ")]),t("div",{staticClass:"taskDesc"},[e._v(" "+e._s(a.desc)+" ")])],1)])})],2)})],2)},v=[],p=u(m,f,v,!1,null,"6610ea04",null,null);const g=p.exports;export{g as default};
