Metadata-Version: 2.1
Name: Mlops-ml-deploy-made-iv
Version: 0.7
Summary: Mlops-ml-deploy-made-iv
Home-page: https://github.com/Z5-05/mlops_made_2022/tree/hw01
Author: iverendeev
Author-email: ilaverendeev@gmail.com
License: MIT
Requires-Dist: pandas (~=1.3.5)
Requires-Dist: scikit-learn (~=1.0.2)
Requires-Dist: numpy (~=1.21.6)
Requires-Dist: jupyter (~=1.0.0)
Requires-Dist: pip (~=21.3.1)
Requires-Dist: attrs (~=22.1.0)
Requires-Dist: wheel (~=0.37.1)
Requires-Dist: Pillow (~=9.3.0)
Requires-Dist: tornado (~=6.2)
Requires-Dist: Jinja2 (~=3.1.2)
Requires-Dist: setuptools (~=60.2.0)
Requires-Dist: pytz (~=2022.5)
Requires-Dist: Faker (~=15.1.1)
Requires-Dist: python-dateutil (~=2.8.2)
Requires-Dist: cffi (~=1.15.1)
Requires-Dist: scipy (~=1.7.3)
Requires-Dist: matplotlib (~=3.5.3)
Requires-Dist: joblib (~=1.2.0)
Requires-Dist: psutil (~=5.9.3)
Requires-Dist: MarkupSafe (~=2.1.1)
Requires-Dist: threadpoolctl (~=3.1.0)
Requires-Dist: six (~=1.16.0)
Requires-Dist: PyYAML (~=6.0)
Requires-Dist: click (~=8.1.3)
Requires-Dist: pyparsing (~=3.0.9)
Requires-Dist: marshmallow (~=3.18.0)
Requires-Dist: packaging (~=21.3)
Requires-Dist: zipp (~=3.10.0)
Requires-Dist: marshmallow-dataclass (~=8.5.9)

# mlops_made_2022


### Настройка окружение:

1) ```python3 -m venv .venv```
2) ```source .venv/bin/activate```
3) ```pip3 install -r requirements.txt```

### Make directory for logs and results:
```mkdir src/logs && mkdir src/results```
### ML pipeline start with commands:
#### Training:
```python3 -m src.model_pipeline --process-type=train configs/<config's name>```
#### Evaluating:
```python3 -m src.model_pipeline --process-type=predict configs/<config's name>```
### Configs:
1) ```logistic_regression_config.yaml``` - model with logistic regression
2) ```random_forest_config.yaml``` - model with random forest
#### Preprocessing pipeline can be corrected with changing ```preprocessing_params```. There are three different type of preprocessing in configs: ```normalization```, ```polynomial```, ```k-bin```
### Tests:
Tests start with ```python3 -m unittest discover -s ./tests  -p 'test_*.py'```
### Output data:
1) ```results/metrics.json``` - result of predict-process
2) ```src/logs/logs.log``` - logs of all scripts

### Other:
requirements.txt was created with console command:
```pip3 freeze | grep -v hw01 > requirements.txt``` - all libs were saved like this
.gitignore and global .gitignore was created with console command:
1) ```curl -o .gitignore https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore``` - and add -idea
2) ```curl -o $HOME/.gitignore_global https://raw.githubusercontent.com/github/gitignore/master/Global/Linux.gitignore```
