jtype: Flow
with:
  name: nowapi
  monitoring: true
  port_expose: 8080
  env:
    JINA_LOG_LEVEL: DEBUG
jcloud:
  version: ${{ ENV.JINA_VERSION }}
  retention_days: ${{ RETENTION_DAYS }}
executors:
- name: preprocessor
  uses: ${{ ENV.PREPROCESSOR_NAME }}
  uses_with:
    app: ${{ ENV.APP }}
    admin_emails: ${{ ENV.ADMIN_EMAILS }}
    user_emails: ${{ ENV.USER_EMAILS }}
  jcloud:
    resources:
      memory: 1G
  env:
    JINA_LOG_LEVEL: DEBUG
- name: sbert_encoder
  uses: jinahub+docker://FinetunerExecutor
  uses_requests:
    '/query_text': encode
    '/index_text': encode
  uses_with:
    artifact: ${{ ENV.SBERT_ARTIFACT }}
    token: ${{ ENV.JINA_TOKEN }}
  env:
    JINA_LOG_LEVEL: DEBUG
  when:
    modality:
      $eq: text
- name: clip_text_encoder
  uses: jinahub+docker://FinetunerExecutor
  uses_requests:
    '/query_vision_text': encode
  uses_with:
    artifact: ${{ ENV.CLIP_ARTIFACT }}
    token: ${{ ENV.JINA_TOKEN }}
    select_model: clip-text
  env:
    JINA_LOG_LEVEL: DEBUG
  when:
    modality:
      $eq: text
- name: clip_vision_encoder
  uses: jinahub+docker://FinetunerExecutor
  uses_requests:
    '/index_vision': encode
  uses_with:
    artifact: ${{ ENV.CLIP_ARTIFACT }}
    token: ${{ ENV.JINA_TOKEN }}
    select_model: clip-vision
  env:
    JINA_LOG_LEVEL: DEBUG
  when:
    modalities:
      $eq: image
- name: indexer
  uses: ${{ ENV.INDEXER_NAME }}
  uses_with:
    hosts: ${{ ENV.HOSTS }}
    dims: ${{ ENV.N_DIM }}
    columns: ${{ ENV.COLUMNS }}
    admin_emails: ${{ ENV.ADMIN_EMAILS }}
    user_emails: ${{ ENV.USER_EMAILS }}
  jcloud:
    capacity: on-demand
    resources:
      memory: ${{ ENV.INDEXER_MEM }}
      cpu: 1.0
  env:
    JINA_LOG_LEVEL: DEBUG
